name: rancher/rancher2
resources:
    rancher2_app:
        subCategory: ""
        name: rancher2_app
        title: rancher2_app Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "answers": {
                    "foo": "bar",
                    "ingress.annotations.nginx.ingress.kubernetes.io/force-ssl-redirect": true,
                    "ingress_host": "test.xip.io"
                  },
                  "catalog_name": "catalog_name",
                  "description": "Foo app",
                  "name": "foo",
                  "project_id": "project_id",
                  "target_namespace": "namespace_name",
                  "template_name": "template_name",
                  "template_version": "template_version"
                }
            - name: foo
              manifest: |-
                {
                  "answers": {
                    "foo": "bar",
                    "ingress.annotations.nginx.ingress.kubernetes.io/force-ssl-redirect": true,
                    "ingress_host": "test.xip.io"
                  },
                  "catalog_name": "catalog_name",
                  "description": "Foo app",
                  "name": "foo",
                  "project_id": "project_id",
                  "target_namespace": "${rancher2_namespace.foo.id}",
                  "template_name": "template_name",
                  "template_version": "template_version"
                }
              references:
                target_namespace: rancher2_namespace.foo.id
              dependencies:
                rancher2_namespace.foo: |-
                    {
                      "description": "Foo namespace",
                      "name": "foo",
                      "project_id": "project_id",
                      "resource_quota": [
                        {
                          "limit": [
                            {
                              "limits_cpu": "100m",
                              "limits_memory": "100Mi",
                              "requests_storage": "1Gi"
                            }
                          ]
                        }
                      ]
                    }
        argumentDocs:
            Rollback: ': If revision_id argument is provided or modified the app will be rolled back accordingly. A new revision_id will be generated in Rancher. It will also generate a non-empty terraform plan that will require manual .tf file intervention. Use carefully.'
            Update: ': If description, annotations or labels arguments are modified the app will be updated. No new revision_id will be generated in Rancher.'
            Upgrade: ': If answers, catalog_name, template_name, template_version or values_yaml arguments are modified, the app will be upgraded. A new revision_id will be generated in Rancher.'
            annotations: '- (Optional/Computed) Annotations for App object (map)'
            answers: '- (Optional) Answers for the app template. If modified, app will be upgraded (map)'
            catalog_name: '- (Required) Catalog name of the app. If modified, app will be upgraded. For use scoped catalogs:'
            create: '- (Default 10 minutes) Used for creating apps.'
            delete: '- (Default 10 minutes) Used for deleting apps.'
            description: '- (Optional/Computed) Description for the app (string)'
            external_id: '- (Computed) The url of the app template on a catalog (string)'
            force_upgrade: '- (Optional) Force app upgrade (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for App object (map)'
            local:<name>: or c-XXXXX:<name>
            name: '- (Required/ForceNew) The name of the app (string)'
            project_id: '- (Required/ForceNew) The project id where the app will be installed (string)'
            revision_id: '- (Optional/Computed) Current revision id for the app. If modified, If this argument is provided or modified, app will be rollbacked to revision_id (string)'
            target_namespace: '- (Required/ForceNew) The namespace id where the app will be installed (string)'
            template_name: '- (Required) Template name of the app. If modified, app will be upgraded (string)'
            template_version: '- (Optional/Computed) Template version of the app. If modified, app will be upgraded. Default: latest (string)'
            update: '- (Default 10 minutes) Used for app modifications.'
            values_yaml: '- (Optional) values.yaml base64 encoded file content for the app template. If modified, app will be upgraded (string)'
            wait: '- (Optional) Wait until app is deployed and active. Default: true (bool)'
        importStatements: []
    rancher2_auth_config_activedirectory:
        subCategory: ""
        name: rancher2_auth_config_activedirectory
        title: rancher2_auth_config_activedirectory Resource
        examples:
            - name: activedirectory
              manifest: |-
                {
                  "port": "ACTIVEDIRECTORY_PORT",
                  "servers": [
                    "ACTIVEDIRECTORY_SERVER"
                  ],
                  "service_account_password": "SERVICE_PASSWORD",
                  "service_account_username": "SERVICE_DN",
                  "test_password": "USER_PASSWORD",
                  "test_username": "USER_NAME",
                  "user_search_base": "SEARCH_BASE"
                }
        argumentDocs:
            access_mode: '- (Optional) Access mode for auth. required, restricted, unrestricted are supported. Default unrestricted (string)'
            allowed_principal_ids: '- (Optional) Allowed principal ids for auth. Required if access_mode is required or restricted. Ex: activedirectory_user://<DN>  activedirectory_group://<DN>. The local admin (local://<admin id>) and the test_username must be added too. (list)'
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            certificate: '- (Optional/Sensitive) CA certificate for TLS if selfsigned (string)'
            connection_timeout: '- (Optional) ActiveDirectory connection timeout. Default 5000 (int)'
            default_login_domain: '- (Optional) ActiveDirectory defult login domain (string)'
            enabled: '- (Optional) Enable auth config provider. Default true (bool)'
            group_dn_attribute: '- (Optional/Computed) Group DN attribute. Default distinguishedName (string)'
            group_member_mapping_attribute: '- (Optional/Computed) Group member mapping attribute. Default member (string)'
            group_member_user_attribute: '- (Optional/Computed) Group member user attribute. Default distinguishedName (string)'
            group_name_attribute: '- (Optional/Computed) Group name attribute. Default name (string)'
            group_object_class: '- (Optional/Computed) Group object class. Default group (string)'
            group_search_attribute: '- (Optional/Computed) Group search attribute. Default sAMAccountName (string)'
            group_search_base: '- (Optional/Computed) Group search base (string)'
            group_search_filter: '- (Optional/Computed) Group search filter (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Computed) The name of the resource (string)'
            nested_group_membership_enabled: '- (Optional/Computed) Nested group membership enable. Default false (bool)'
            port: '- (Optional) ActiveDirectory port. Default 389 (int)'
            servers: '- (Required) ActiveDirectory servers list (list)'
            service_account_password: '- (Required/Sensitive) Service account password for access ActiveDirectory service (string)'
            service_account_username: '- (Required/Sensitive) Service account DN for access ActiveDirectory service (string)'
            start_tls: '- (Optional/Computed) Enable start TLS connection (bool)'
            test_password: '- (Required/Sensitive) Password for test access to ActiveDirectory service (string)'
            test_username: '- (Required) Username for test access to ActiveDirectory service (string)'
            tls: '- (Optional/Computed) Enable TLS connection (bool)'
            type: '- (Computed) The type of the resource (string)'
            user_disabled_bit_mask: '- (Optional) User disabled bit mask. Default 2 (int)'
            user_enabled_attribute: '- (Optional/Computed) User enable attribute (string)'
            user_login_attribute: '- (Optional/Computed) User login attribute. Default sAMAccountName (string)'
            user_name_attribute: '- (Optional/Computed) User name attribute. Default name (string)'
            user_object_class: '- (Optional/Computed) User object class. Default person (string)'
            user_search_attribute: '- (Optional/Computed) User search attribute. Default sAMAccountName|sn|givenName (string)'
            user_search_base: '- (Required) User search base DN (string)'
            user_search_filter: '- (Optional/Computed) User search filter (string)'
        importStatements: []
    rancher2_auth_config_adfs:
        subCategory: ""
        name: rancher2_auth_config_adfs
        title: rancher2_auth_config_adfs Resource
        examples:
            - name: adfs
              manifest: |-
                {
                  "display_name_field": "DISPLAY_NAME_FIELD",
                  "groups_field": "GROUPS_FIELD",
                  "idp_metadata_content": "IDP_METADATA_CONTENT",
                  "rancher_api_host": "https://RANCHER_API_HOST",
                  "sp_cert": "SP_CERT",
                  "sp_key": "SP_KEY",
                  "uid_field": "UID_FIELD",
                  "user_name_field": "USER_NAME_FIELD"
                }
        argumentDocs:
            access_mode: '- (Optional) Access mode for auth. required, restricted, unrestricted are supported. Default unrestricted (string)'
            allowed_principal_ids: '- (Optional) Allowed principal ids for auth. Required if access_mode is required or restricted. Ex: adfs_user://<USER_ID>  adfs_group://<GROUP_ID> (list)'
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            display_name_field: '- (Required) ADFS display name field (string)'
            enabled: '- (Optional) Enable auth config provider. Default true (bool)'
            groups_field: '- (Required) ADFS group field (string)'
            id: '- (Computed) The ID of the resource (string)'
            idp_metadata_content: '- (Required/Sensitive) ADFS IDP metadata content (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Computed) The name of the resource (string)'
            rancher_api_host: '- (Required) Rancher URL. URL scheme needs to be specified, https://<RANCHER_API_HOST> (string)'
            sp_cert: '- (Required/Sensitive) ADFS SP cert (string)'
            sp_key: '- (Required/Sensitive) ADFS SP key (string)'
            type: '- (Computed) The type of the resource (string)'
            uid_field: '- (Required) ADFS UID field (string)'
            user_name_field: '- (Required) ADFS user name field (string)'
        importStatements: []
    rancher2_auth_config_azuread:
        subCategory: ""
        name: rancher2_auth_config_azuread
        title: rancher2_auth_config_azuread Resource
        examples:
            - name: azuread
              manifest: |-
                {
                  "application_id": "AZUREAD_APP_ID",
                  "application_secret": "AZUREAD_APP_SECRET",
                  "auth_endpoint": "AZUREAD_AUTH_ENDPOINT",
                  "graph_endpoint": "AZUREAD_GRAPH_ENDPOINT",
                  "rancher_url": "RANCHER_URL",
                  "tenant_id": "AZUREAD_TENANT_ID",
                  "token_endpoint": "AZUREAD_TOKEN_ENDPOINT"
                }
        argumentDocs:
            access_mode: '- (Optional) Access mode for auth. required, restricted, unrestricted are supported. Default unrestricted (string)'
            allowed_principal_ids: '- (Optional) Allowed principal ids for auth. Required if access_mode is required or restricted. Ex: azuread_user://<USER_ID>  azuread_group://<GROUP_ID> (list)'
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            application_id: '- (Required/Sensitive) AzureAD auth application ID (string)'
            application_secret: '- (Required/Sensitive) AzureAD auth application secret (string)'
            auth_endpoint: '- (Required) AzureAD auth endpoint (string)'
            enabled: '- (Optional) Enable auth config provider. Default true (bool)'
            endpoint: '- (Optional) AzureAD endpoint. Default https://login.microsoftonline.com/ (string)'
            graph_endpoint: '- (Required) AzureAD graph endpoint (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Computed) The name of the resource (string)'
            rancher_url: '- (Required) Rancher URL (string). "<rancher_url>/verify-auth-azure"'
            tenant_id: '- (Required) AzureAD tenant ID (string)'
            tls: '- (Optional) Enable TLS connection. Default true (bool)'
            token_endpoint: '- (Required) AzureAD token endpoint (string)'
            type: '- (Computed) The type of the resource (string)'
        importStatements: []
    rancher2_auth_config_freeipa:
        subCategory: ""
        name: rancher2_auth_config_freeipa
        title: rancher2_auth_config_freeipa Resource
        examples:
            - name: freeipa
              manifest: |-
                {
                  "port": "FREEIPA_PORT",
                  "servers": [
                    "FREEIPA_SERVER"
                  ],
                  "service_account_distinguished_name": "SERVICE_DN",
                  "service_account_password": "SERVICE_PASSWORD",
                  "test_password": "USER_PASSWORD",
                  "test_username": "USER_NAME",
                  "user_search_base": "SEARCH_BASE"
                }
        argumentDocs:
            access_mode: '- (Optional) Access mode for auth. required, restricted, unrestricted are supported. Default unrestricted (string)'
            allowed_principal_ids: '- (Optional) Allowed principal ids for auth. Required if access_mode is required or restricted. Ex: freeipa_user://<DN>  freeipa_group://<DN> (list)'
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            certificate: '- (Optional/Sensitive) Base64 encoded CA certificate for TLS if self-signed. Use filebase64() for encoding file (string)'
            connection_timeout: '- (Optional) FreeIpa connection timeout. Default 5000 (int)'
            enabled: '- (Optional) Enable auth config provider. Default true (bool)'
            group_dn_attribute: '- (Optional/Computed) Group DN attribute. Default entryDN (string)'
            group_member_mapping_attribute: '- (Optional/Computed) Group member mapping attribute. Default member (string)'
            group_member_user_attribute: '- (Optional/Computed) Group member user attribute. Default entryDN (string)'
            group_name_attribute: '- (Optional/Computed) Group name attribute. Default cn (string)'
            group_object_class: '- (Optional/Computed) Group object class. Default groupOfNames (string)'
            group_search_attribute: '- (Optional/Computed) Group search attribute. Default cn (string)'
            group_search_base: '- (Optional/Computed) Group search base (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Computed) The name of the resource (string)'
            nested_group_membership_enabled: '- (Optional/Computed) Nested group membership enable. Default false (bool)'
            port: '- (Optional) FreeIpa port. Default 389 (int)'
            servers: '- (Required) FreeIpa servers list (list)'
            service_account_distinguished_name: '- (Required/Sensitive) Service account DN for access FreeIpa service (string)'
            service_account_password: '- (Required/Sensitive) Service account password for access FreeIpa service (string)'
            test_password: '- (Required/Sensitive) Password for test access to FreeIpa service (string)'
            test_username: '- (Required) Username for test access to FreeIpa service (string)'
            tls: '- (Optional/Computed) Enable TLS connection (bool)'
            type: '- (Computed) The type of the resource (string)'
            user_disabled_bit_mask: '- (Optional/Computed) User disabled bit mask (int)'
            user_enabled_attribute: '- (Optional/Computed) User enable attribute (string)'
            user_login_attribute: '- (Optional/Computed) User login attribute. Default uid (string)'
            user_member_attribute: '- (Optional/Computed) User member attribute. Default memberOf (string)'
            user_name_attribute: '- (Optional/Computed) User name attribute. Default givenName (string)'
            user_object_class: '- (Optional/Computed) User object class. Default inetorgperson (string)'
            user_search_attribute: '- (Optional/Computed) User search attribute. Default uid|sn|givenName (string)'
            user_search_base: '- (Required) User search base DN (string)'
        importStatements: []
    rancher2_auth_config_github:
        subCategory: ""
        name: rancher2_auth_config_github
        title: rancher2_auth_config_github Resource
        examples:
            - name: github
              manifest: |-
                {
                  "client_id": "GITHUB_CLIENT_ID",
                  "client_secret": "GITHUB_CLIENT_SECRET"
                }
        argumentDocs:
            access_mode: '- (Optional) Access mode for auth. required, restricted, unrestricted are supported. Default unrestricted (string)'
            allowed_principal_ids: '- (Optional) Allowed principal ids for auth. Required if access_mode is required or restricted. Ex: github_user://<USER_ID>  github_team://<GROUP_ID> github_org://<ORG_ID> (list)'
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            client_id: '- (Required/Sensitive) Github auth Client ID (string)'
            client_secret: '- (Required/Sensitive) Github auth Client secret (string)'
            enabled: '- (Optional) Enable auth config provider. Default true (bool)'
            hostname: '- (Optional) Github hostname to connect. Default github.com (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Computed) The name of the resource (string)'
            tls: '- (Optional) Enable TLS connection. Default true (bool)'
            type: '- (Computed) The type of the resource (string)'
        importStatements: []
    rancher2_auth_config_keycloak:
        subCategory: ""
        name: rancher2_auth_config_keycloak
        title: rancher2_auth_config_keycloak Resource
        examples:
            - name: keycloak
              manifest: |-
                {
                  "display_name_field": "DISPLAY_NAME_FIELD",
                  "groups_field": "GROUPS_FIELD",
                  "idp_metadata_content": "IDP_METADATA_CONTENT",
                  "rancher_api_host": "https://RANCHER_API_HOST",
                  "sp_cert": "SP_CERT",
                  "sp_key": "SP_KEY",
                  "uid_field": "UID_FIELD",
                  "user_name_field": "USER_NAME_FIELD"
                }
        argumentDocs:
            access_mode: '- (Optional) Access mode for auth. required, restricted, unrestricted are supported. Default unrestricted (string)'
            allowed_principal_ids: '- (Optional) Allowed principal ids for auth. Required if access_mode is required or restricted. Ex: keycloak_user://<USER_ID>  keycloak_group://<GROUP_ID> (list)'
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            display_name_field: '- (Required) KeyCloak display name field (string)'
            enabled: '- (Optional) Enable auth config provider. Default true (bool)'
            entity_id: '- (Optional/Computed) KeyCloak Client ID field (string)'
            groups_field: '- (Required) KeyCloak group field (string)'
            id: '- (Computed) The ID of the resource (string)'
            idp_metadata_content: '- (Required/Sensitive) KeyCloak IDP metadata content (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Computed) The name of the resource (string)'
            rancher_api_host: '- (Required) Rancher URL. URL scheme needs to be specified, https://<RANCHER_API_HOST> (string)'
            sp_cert: '- (Required/Sensitive) KeyCloak SP cert (string)'
            sp_key: '- (Required/Sensitive) KeyCloak SP key (string)'
            type: '- (Computed) The type of the resource (string)'
            uid_field: '- (Required) KeyCloak UID field (string)'
            user_name_field: '- (Required) KeyCloak user name field (string)'
        importStatements: []
    rancher2_auth_config_okta:
        subCategory: ""
        name: rancher2_auth_config_okta
        title: rancher2_auth_config_okta Resource
        examples:
            - name: okta
              manifest: |-
                {
                  "display_name_field": "DISPLAY_NAME_FIELD",
                  "groups_field": "GROUPS_FIELD",
                  "idp_metadata_content": "IDP_METADATA_CONTENT",
                  "rancher_api_host": "https://RANCHER_API_HOST",
                  "sp_cert": "SP_CERT",
                  "sp_key": "SP_KEY",
                  "uid_field": "UID_FIELD",
                  "user_name_field": "USER_NAME_FIELD"
                }
        argumentDocs:
            access_mode: '- (Optional) Access mode for auth. required, restricted, unrestricted are supported. Default unrestricted (string)'
            allowed_principal_ids: '- (Optional) Allowed principal ids for auth. Required if access_mode is required or restricted. Ex: okta_user://<USER_ID>  okta_group://<GROUP_ID> (list)'
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            display_name_field: '- (Required) OKTA display name field (string)'
            enabled: '- (Optional) Enable auth config provider. Default true (bool)'
            groups_field: '- (Required) OKTA group field (string)'
            id: '- (Computed) The ID of the resource (string)'
            idp_metadata_content: '- (Required/Sensitive) OKTA IDP metadata content (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Computed) The name of the resource (string)'
            rancher_api_host: '- (Required) Rancher URL. URL scheme needs to be specified, https://<RANCHER_API_HOST> (string)'
            sp_cert: '- (Required/Sensitive) OKTA SP cert (string)'
            sp_key: '- (Required/Sensitive) OKTA SP key (string)'
            type: '- (Computed) The type of the resource (string)'
            uid_field: '- (Required) OKTA UID field (string)'
            user_name_field: '- (Required) OKTA user name field (string)'
        importStatements: []
    rancher2_auth_config_openldap:
        subCategory: ""
        name: rancher2_auth_config_openldap
        title: rancher2_auth_config_openldap Resource
        examples:
            - name: openldap
              manifest: |-
                {
                  "port": "OPENLDAP_PORT",
                  "servers": [
                    "OPENLDAP_SERVER"
                  ],
                  "service_account_distinguished_name": "SERVICE_DN",
                  "service_account_password": "SERVICE_PASSWORD",
                  "test_password": "USER_PASSWORD",
                  "test_username": "USER_NAME",
                  "user_search_base": "SEARCH_BASE"
                }
        argumentDocs:
            access_mode: '- (Optional) Access mode for auth. required, restricted, unrestricted are supported. Default unrestricted (string)'
            allowed_principal_ids: '- (Optional) Allowed principal ids for auth. Required if access_mode is required or restricted. Ex: openldap_user://<DN>  openldap_group://<DN> (list)'
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            certificate: '- (Optional/Sensitive) Base64 encoded CA certificate for TLS if self-signed. Use filebase64() for encoding file (string)'
            connection_timeout: '- (Optional) OpenLdap connection timeout. Default 5000 (int)'
            enabled: '- (Optional) Enable auth config provider. Default true (bool)'
            group_dn_attribute: '- (Optional/Computed) Group DN attribute. Default entryDN (string)'
            group_member_mapping_attribute: '- (Optional/Computed) Group member mapping attribute. Default member (string)'
            group_member_user_attribute: '- (Optional/Computed) Group member user attribute. Default entryDN (string)'
            group_name_attribute: '- (Optional/Computed) Group name attribute. Default cn (string)'
            group_object_class: '- (Optional/Computed) Group object class. Default groupOfNames (string)'
            group_search_attribute: '- (Optional/Computed) Group search attribute. Default cn (string)'
            group_search_base: '- (Optional/Computed) Group search base (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Computed) The name of the resource (string)'
            nested_group_membership_enabled: '- (Optional/Computed) Nested group membership enable. Default false (bool)'
            port: '- (Optional) OpenLdap port. Default 389 (int)'
            servers: '- (Required) OpenLdap servers list (list)'
            service_account_distinguished_name: '- (Required/Sensitive) Service account DN for access OpenLdap service (string)'
            service_account_password: '- (Required/Sensitive) Service account password for access OpenLdap service (string)'
            test_password: '- (Required/Sensitive) Password for test access to OpenLdap service (string)'
            test_username: '- (Required) Username for test access to OpenLdap service (string)'
            tls: '- (Optional/Computed) Enable TLS connection (bool)'
            type: '- (Computed) The type of the resource (string)'
            user_disabled_bit_mask: '- (Optional/Computed) User disabled bit mask (int)'
            user_enabled_attribute: '- (Optional/Computed) User enable attribute (string)'
            user_login_attribute: '- (Optional/Computed) User login attribute. Default uid (string)'
            user_member_attribute: '- (Optional/Computed) User member attribute. Default memberOf (string)'
            user_name_attribute: '- (Optional/Computed) User name attribute. Default givenName (string)'
            user_object_class: '- (Optional/Computed) User object class. Default inetorgperson (string)'
            user_search_attribute: '- (Optional/Computed) User search attribute. Default uid|sn|givenName (string)'
            user_search_base: '- (Required) User search base DN (string)'
        importStatements: []
    rancher2_auth_config_ping:
        subCategory: ""
        name: rancher2_auth_config_ping
        title: rancher2_auth_config_ping Resource
        examples:
            - name: ping
              manifest: |-
                {
                  "display_name_field": "DISPLAY_NAME_FIELD",
                  "groups_field": "GROUPS_FIELD",
                  "idp_metadata_content": "IDP_METADATA_CONTENT",
                  "rancher_api_host": "https://RANCHER_API_HOST",
                  "sp_cert": "SP_CERT",
                  "sp_key": "SP_KEY",
                  "uid_field": "UID_FIELD",
                  "user_name_field": "USER_NAME_FIELD"
                }
        argumentDocs:
            access_mode: '- (Optional) Access mode for auth. required, restricted, unrestricted are supported. Default unrestricted (string)'
            allowed_principal_ids: '- (Optional) Allowed principal ids for auth. Required if access_mode is required or restricted. Ex: ping_user://<USER_ID>  ping_group://<GROUP_ID> (list)'
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            display_name_field: '- (Required) Ping display name field (string)'
            enabled: '- (Optional) Enable auth config provider. Default true (bool)'
            entity_id_field: '- (Optional) Ping entity ID field (string)'
            groups_field: '- (Required) Ping group field (string)'
            id: '- (Computed) The ID of the resource (string)'
            idp_metadata_content: '- (Required/Sensitive) Ping IDP metadata content (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Computed) The name of the resource (string)'
            rancher_api_host: '- (Required) Rancher URL. URL scheme needs to be specified, https://<RANCHER_API_HOST> (string)'
            sp_cert: '- (Required/Sensitive) Ping SP cert (string)'
            sp_key: '- (Required/Sensitive) Ping SP key (string)'
            type: '- (Computed) The type of the resource (string)'
            uid_field: '- (Required) Ping UID field (string)'
            user_name_field: '- (Required) Ping user name field (string)'
        importStatements: []
    rancher2_bootstrap:
        subCategory: ""
        name: rancher2_bootstrap
        title: rancher2_bootstrap Resource
        examples:
            - name: admin
              manifest: |-
                {
                  "password": "blahblah",
                  "telemetry": true
                }
            - name: admin
              manifest: |-
                {
                  "initial_password": "INSTALL_PASSWORD",
                  "password": "blahblah",
                  "telemetry": true
                }
            - name: admin
              manifest: |-
                {
                  "password": "blahblah",
                  "provider": "rancher2.bootstrap",
                  "telemetry": true
                }
        argumentDocs:
            current_password: '- (Computed/Sensitive) Current password for Admin user (string)'
            id: '- (Computed) The ID of the resource (string)'
            initial_password: '- (Optional/Computed/Sensitive) Initial password for Admin user. Default: admin (string)'
            password: or generating a random one.
            server-url: setting, based on api_url.
            telemetry: '- (Optional) Send telemetry anonymous data. Default: false (bool)'
            telemetry-opt: setting.
            temp_token: '- (Computed) Generated API temporary token as helper. Should be empty (string)'
            temp_token_id: '- (Computed) Generated API temporary token id as helper. Should be empty (string)'
            token: '- (Computed) Generated API token for Admin User (string)'
            token_id: '- (Computed) Generated API token id for Admin User (string)'
            token_ttl: '- (Optional) TTL in seconds for generated admin token. Default: 0  (int)'
            token_update: '- (Optional) Regenerate admin token. Default: false (bool)'
            ui_default_landing: '- (Optional) Default UI landing for k8s clusters. Available options: ember (cluster manager ui)  and vue (cluster explorer ui). Default: ember (string)'
            url: '- (Computed) URL set as server-url (string)'
            user: '- (Computed) Admin username (string)'
        importStatements: []
    rancher2_catalog:
        subCategory: ""
        name: rancher2_catalog
        title: rancher2_catalog Resource
        examples:
            - name: foo-global
              manifest: |-
                {
                  "name": "foo-global",
                  "url": "https://CATALOG_URL"
                }
            - name: foo-cluster
              manifest: |-
                {
                  "name": "foo-cluster",
                  "scope": "cluster",
                  "url": "https://CATALOG_URL"
                }
            - name: foo-project
              manifest: |-
                {
                  "name": "foo-project",
                  "scope": "project",
                  "url": "https://CATALOG_URL"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for the catalog (map)'
            branch: '- (Optional) The branch of the catalog repo to use. Default master (string)'
            cluster_id: '- (Optional/ForceNew) The cluster id of the catalog. Mandatory if scope = cluster (string)'
            create: '- (Default 10 minutes) Used for creating catalogs.'
            delete: '- (Default 10 minutes) Used for deleting catalogs.'
            description: '- (Optional) A catalog description (string)'
            id: '- (Computed) The ID of the resource (string)'
            kind: '- (Optional) The kind of the catalog. Just helm by the moment (string)'
            labels: '- (Optional/Computed) Labels for the catalog (map)'
            name: '- (Required) The name of the catalog (string)'
            password: '- (Optional/Sensitive) The password to access the catalog if needed (string)'
            project_id: '- (Optional/ForceNew) The project id of the catalog. Mandatory if scope = project (string)'
            refresh: '- (Optional) Catalog will wait for refresh after tf creation and on every tf read. Default false (bool)'
            scope: '- (Optional) The scope of the catalog. cluster, global, and project are supported. Default global (string)'
            update: '- (Default 10 minutes) Used for catalog modifications.'
            url: '- (Required) The url of the catalog repo (string)'
            username: '- (Optional/Sensitive) The username to access the catalog if needed (string)'
            version: '- (Optional/ForceNew/Computed) Helm version for the catalog. Available options: helm_v2 and helm_v3 (string)'
        importStatements: []
    rancher2_catalog_v2:
        subCategory: ""
        name: rancher2_catalog_v2
        title: rancher2_catalog_v2 Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "CLUSTER_ID",
                  "git_branch": "GIT_BRANCH",
                  "git_repo": "GIT_REPO_URL",
                  "name": "foo"
                }
            - name: foo-url
              manifest: |-
                {
                  "cluster_id": "CLUSTER_ID",
                  "name": "foo-url",
                  "url": "https://CATALOG_URL"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for the catalog v2 (map)'
            ca_bundle: '- (Optional) CA certificate in base64-encoded DER format which will be used to validate the repo''s certificate (string)'
            cluster_id: '- (Required/ForceNew) The cluster id of the catalog V2 (string)'
            create: '- (Default 10 minutes) Used for creating v2 catalogs.'
            delete: '- (Default 10 minutes) Used for deleting v2 catalogs.'
            enabled: '- (Optional) If disabled the repo clone will not be updated or allowed to be installed from. Default: true (bool)'
            git_branch: '- (Optional/Computed) Git Repository branch containing Helm chart definitions. Default master (string)'
            git_repo: '- (Optional) The url of the catalog v2 repo. Conflicts with url (string)'
            id: '- (Computed) The ID of the resource (string)'
            insecure: '- (Optional) Use insecure HTTPS to download the repo''s index. Default: false (bool)'
            labels: '- (Optional/Computed) Labels for the catalog v2 (map)'
            name: '- (Required) The name of the catalog v2 (string)'
            resource_version: '- (Computed) The k8s resource version (string)'
            secret_name: '- (Optional) K8s secret name to be used to connect to the repo (string)'
            secret_namespace: '- (Optional) K8s secret namespace (string)'
            service_account: '- (Optional) K8s service account used to deploy charts instead of the end users credentials (string)'
            service_account_namespace: '- (Optional) The username to access the catalog if needed (string)'
            update: '- (Default 10 minutes) Used for v2 catalog modifications.'
            url: '- (Optional) URL to an index generated by Helm. Conflicts with git_repo (string)'
        importStatements: []
    rancher2_catalog_v2 Resource:
        subCategory: ""
        name: rancher2_catalog_v2 Resource
        title: rancher2_catalog_v2 Resource
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for the app v2 (map)'
            chart_name: '- (Required) The app v2 chart name (string)'
            chart_version: '- (Optional/Computed) The app v2 chart version (string)'
            cleanup_on_fail: '- (Optional) Cleanup app v2 on failed chart upgrade. Default: false (bool)'
            cluster_id: '- (Required/ForceNew) The cluster id of the app (string)'
            cluster_name: '- (Computed) The cluster name of the app (string)'
            create: '- (Default 10 minutes) Used for creating Rancher v2 apps.'
            delete: '- (Default 10 minutes) Used for deleting Rancher v2 apps.'
            disable_hooks: '- (Optional) Disable app v2 chart hooks. Default: false (bool)'
            disable_open_api_validation: '- (Optional) Disable app V2 Open API Validation. Default: false (bool)'
            force_upgrade: '- (Optional) Force app V2 chart upgrade. Default: false (bool)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for the app v2 (map)'
            name: '- (Required/ForceNew) The name of the app v2 (string)'
            namespace: '- (Required/ForceNew) The namespace of the app v2 (string)'
            project_id: '- (Optional) Deploy the app v2 within project ID (string)'
            repo_name: '- (Required) Repo name (string)'
            system_default_registry: '- (Optional/Computed) System default registry providing images for app deployment (string)'
            update: '- (Default 10 minutes) Used for Rancher v2 app modifications.'
            values: '- (Optional/Sensitive) The app v2 values yaml. Yaml format is required (string)'
            wait: '- (Optional) Wait until app is deployed. Default: true (bool)'
        importStatements: []
    rancher2_certificate:
        subCategory: ""
        name: rancher2_certificate
        title: rancher2_certificate Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "certs": "${base64encode(\"PUBLIC_CERTS\")}",
                  "description": "Terraform certificate foo",
                  "key": "${base64encode(\"PRIVATE_KEY\")}",
                  "name": "foo",
                  "project_id": "project_id"
                }
            - name: foo
              manifest: |-
                {
                  "certs": "${base64encode(\"PUBLIC_CERTS\")}",
                  "description": "Terraform certificate foo",
                  "key": "${base64encode(\"PRIVATE_KEY\")}",
                  "name": "foo",
                  "namespace_id": "namespace_id",
                  "project_id": "project_id"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for certificate object (map)'
            certs: '- (Required) Base64 encoded public certs (string)'
            create: '- (Default 10 minutes) Used for creating registries.'
            delete: '- (Default 10 minutes) Used for deleting registries.'
            description: '- (Optional) A certificate description (string)'
            id: '- (Computed) The ID of the resource (string)'
            key: '- (Required/Sensitive) Base64 encoded private key (string)'
            labels: '- (Optional/Computed) Labels for certificate object (map)'
            name: '- (Optional/ForceNew) The name of the certificate (string)'
            namespace_id: in the project_id
            project_id: '- (Required/ForceNew) The project id where the certificate should be created  (string)'
            update: '- (Default 10 minutes) Used for certificate modifications.'
        importStatements: []
    rancher2_cloud_credential:
        subCategory: ""
        name: rancher2_cloud_credential
        title: rancher2_cloud_credential Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "amazonec2_credential_config": [
                    {
                      "access_key": "AWS_ACCESS_KEY",
                      "secret_key": "AWS_SECRET_KEY"
                    }
                  ],
                  "description": "foo test",
                  "name": "foo"
                }
            - name: foo-harvester
              manifest: |-
                {
                  "harvester_credential_config": [
                    {
                      "cluster_id": "${data.rancher2_cluster_v2.foo-harvester.cluster_v1_id}",
                      "cluster_type": "imported",
                      "kubeconfig_content": "${data.rancher2_cluster_v2.foo-harvester.kube_config}"
                    }
                  ],
                  "name": "foo-harvester"
                }
              references:
                harvester_credential_config.cluster_id: data.rancher2_cluster_v2.foo-harvester.cluster_v1_id
                harvester_credential_config.kubeconfig_content: data.rancher2_cluster_v2.foo-harvester.kube_config
        argumentDocs:
            access_key: '- (Required/Sensitive) AWS access key (string)'
            access_token: '- (Required/Sensitive) DigitalOcean access token (string)'
            amazonec2_credential_config: '- (Optional) AWS config for the Cloud Credential (list maxitems:1)'
            annotations: '- (Optional) Annotations for Cloud Credential object (map)'
            auth_encoded_json: '- (Required/Sensitive) Google auth encoded json (string)'
            azure_credential_config: '- (Optional) Azure config for the Cloud Credential (list maxitems:1)'
            client_id: '- (Required/Sensitive) Azure Service Principal Account ID (string)'
            client_secret: '- (Required/Sensitive) Azure Service Principal Account password (string)'
            cluster_id: '- (Optional) Imported Harvester Cluster ID (string)'
            cluster_type: '- (Required) Harvester Cluster Type. Supported values : "imported" | "external" (string)'
            create: '- (Default 10 minutes) Used for creating cloud credentials.'
            default_bucket: '- (Optional) AWS default bucket (string)'
            default_endpoint: '- (Optional) AWS default endpoint (string)'
            default_endpoint_ca: '- (Optional/Sensitive) AWS default endpoint CA (string)'
            default_folder: '- (Optional) AWS default folder (string)'
            default_region: '- (Optional) AWS default region (string)'
            default_skip_ssl_verify: '- (Optional) AWS default skip ssl verify. Default: false (bool)'
            delete: '- (Default 10 minutes) Used for deleting cloud credentials.'
            description: '- (Optional) Description for the Cloud Credential (string)'
            digitalocean_credential_config: '- (Optional) DigitalOcean config for the Cloud Credential (list maxitems:1)'
            driver: '- (Computed) The driver of the Cloud Credential (string)'
            environment: '- (Optional/Computed) Azure environment (e.g. AzurePublicCloud, AzureChinaCloud) (string)'
            google_credential_config: '- (Optional) Google config for the Cloud Credential (list maxitems:1)'
            harvester_credential_config: '- (Optional) Harvester config for the Cloud Credential (list maxitems:1)'
            id: '- (Computed) The ID of the resource (string)'
            kubeconfig_content: '- (Required/Sensitive) Harvester Cluster KubeConfig Content (string)'
            labels: '- (Optional/Computed) Labels for Cloud Credential object (map)'
            linode_credential_config: '- (Optional) Linode config for the Cloud Credential (list maxitems:1)'
            name: '- (Required) The name of the Cloud Credential (string)'
            openstack_credential_config: '- (Optional) OpenStack config for the Cloud Credential (list maxitems:1)'
            password: '- (Required/Sensitive) OpenStack password (string)'
            s3_credential_config: '- (Optional) S3 config for the Cloud Credential. For Rancher 2.6.0 and above (list maxitems:1)'
            secret_key: '- (Required/Sensitive) AWS secret key (string)'
            subscription_id: '- (Required/Sensitive) Azure Subscription ID (string)'
            tenant_id: '- (Optional/Computed) Azure Tenant ID (string)'
            token: '- (Required/Sensitive) Linode API token (string)'
            update: '- (Default 10 minutes) Used for cloud credential modifications.'
            username: '- (Required) vSphere username (string)'
            vcenter: '- (Required) vSphere IP/hostname for vCenter (string)'
            vcenter_port: '- (Optional) vSphere Port for vCenter. Default 443 (string)'
            vsphere_credential_config: '- (Optional) vSphere config for the Cloud Credential (list maxitems:1)'
        importStatements: []
    rancher2_cluster:
        subCategory: ""
        name: rancher2_cluster
        title: rancher2_cluster Resource
        examples:
            - name: foo-imported
              manifest: |-
                {
                  "description": "Foo rancher2 imported cluster",
                  "name": "foo-imported"
                }
            - name: foo-custom
              manifest: |-
                {
                  "description": "Foo rancher2 custom cluster",
                  "name": "foo-custom",
                  "rke_config": [
                    {
                      "network": [
                        {
                          "plugin": "canal"
                        }
                      ]
                    }
                  ]
                }
            - name: foo-custom
              manifest: |-
                {
                  "description": "Foo rancher2 custom cluster",
                  "name": "foo-custom",
                  "rke_config": [
                    {
                      "network": [
                        {
                          "plugin": "canal"
                        }
                      ]
                    }
                  ]
                }
              dependencies:
                rancher2_app.istio: |-
                    {
                      "answers": {
                        "certmanager.enabled": false,
                        "enableCRDs": true,
                        "galley.enabled": true,
                        "gateways.enabled": false,
                        "gateways.istio-ingressgateway.resources.limits.cpu": "2000m",
                        "gateways.istio-ingressgateway.resources.limits.memory": "1024Mi",
                        "gateways.istio-ingressgateway.resources.requests.cpu": "100m",
                        "gateways.istio-ingressgateway.resources.requests.memory": "128Mi",
                        "gateways.istio-ingressgateway.type": "NodePort",
                        "global.rancher.clusterId": "${rancher2_cluster_sync.foo-custom.cluster_id}",
                        "istio_cni.enabled": "false",
                        "istiocoredns.enabled": "false",
                        "kiali.enabled": "true",
                        "mixer.enabled": "true",
                        "mixer.policy.enabled": "true",
                        "mixer.policy.resources.limits.cpu": "4800m",
                        "mixer.policy.resources.limits.memory": "4096Mi",
                        "mixer.policy.resources.requests.cpu": "1000m",
                        "mixer.policy.resources.requests.memory": "1024Mi",
                        "mixer.telemetry.resources.limits.cpu": "4800m",
                        "mixer.telemetry.resources.limits.memory": "4096Mi",
                        "mixer.telemetry.resources.requests.cpu": "1000m",
                        "mixer.telemetry.resources.requests.memory": "1024Mi",
                        "mtls.enabled": false,
                        "nodeagent.enabled": false,
                        "pilot.enabled": true,
                        "pilot.resources.limits.cpu": "1000m",
                        "pilot.resources.limits.memory": "4096Mi",
                        "pilot.resources.requests.cpu": "500m",
                        "pilot.resources.requests.memory": "2048Mi",
                        "pilot.traceSampling": "1",
                        "security.enabled": true,
                        "sidecarInjectorWebhook.enabled": true,
                        "tracing.enabled": true,
                        "tracing.jaeger.resources.limits.cpu": "500m",
                        "tracing.jaeger.resources.limits.memory": "1024Mi",
                        "tracing.jaeger.resources.requests.cpu": "100m",
                        "tracing.jaeger.resources.requests.memory": "100Mi"
                      },
                      "catalog_name": "system-library",
                      "description": "Terraform app acceptance test",
                      "name": "cluster-istio",
                      "project_id": "${rancher2_namespace.foo-istio.project_id}",
                      "target_namespace": "${rancher2_namespace.foo-istio.id}",
                      "template_name": "rancher-istio",
                      "template_version": "0.1.1"
                    }
                rancher2_cluster_sync.foo-custom: |-
                    {
                      "cluster_id": "${rancher2_cluster.foo-custom.id}"
                    }
                rancher2_namespace.foo-istio: |-
                    {
                      "description": "istio namespace",
                      "name": "istio-system",
                      "project_id": "${rancher2_cluster_sync.foo-custom.system_project_id}"
                    }
            - name: foo-custom
              manifest: |-
                {
                  "description": "Foo rancher2 custom cluster",
                  "name": "foo-custom",
                  "rke_config": [
                    {
                      "network": [
                        {
                          "plugin": "canal"
                        }
                      ]
                    }
                  ]
                }
              dependencies:
                rancher2_node_pool.foo: |-
                    {
                      "cluster_id": "${rancher2_cluster.foo-custom.id}",
                      "control_plane": true,
                      "etcd": true,
                      "hostname_prefix": "foo-cluster-0",
                      "name": "foo",
                      "node_template_id": "${rancher2_node_template.foo.id}",
                      "quantity": 3,
                      "worker": true
                    }
                rancher2_node_template.foo: |-
                    {
                      "amazonec2_config": [
                        {
                          "access_key": "AWS_ACCESS_KEY",
                          "ami": "AMI_ID",
                          "region": "REGION",
                          "secret_key": "AWS_SECRET_KEY",
                          "security_group": [
                            "AWS_SECURITY_GROUP"
                          ],
                          "subnet_id": "SUBNET_ID",
                          "vpc_id": "VPC_ID",
                          "zone": "ZONE"
                        }
                      ],
                      "description": "foo test",
                      "name": "foo"
                    }
            - name: foo
              manifest: |-
                {
                  "cluster_template_id": "${rancher2_cluster_template.foo.id}",
                  "cluster_template_revision_id": "${rancher2_cluster_template.foo.template_revisions.0.id}",
                  "name": "foo"
                }
              references:
                cluster_template_id: rancher2_cluster_template.foo.id
                cluster_template_revision_id: rancher2_cluster_template.foo.template_revisions.0.id
              dependencies:
                rancher2_cluster_template.foo: |-
                    {
                      "description": "Test cluster template v2",
                      "members": [
                        {
                          "access_type": "owner",
                          "user_principal_id": "local://user-XXXXX"
                        }
                      ],
                      "name": "foo",
                      "template_revisions": [
                        {
                          "cluster_config": [
                            {
                              "rke_config": [
                                {
                                  "network": [
                                    {
                                      "plugin": "canal"
                                    }
                                  ],
                                  "services": [
                                    {
                                      "etcd": [
                                        {
                                          "creation": "6h",
                                          "retention": "24h"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "default": true,
                          "name": "V1"
                        }
                      ]
                    }
            - name: foo
              manifest: |-
                {
                  "description": "Terraform custom cluster",
                  "name": "foo",
                  "rke_config": [
                    {
                      "network": [
                        {
                          "plugin": "canal"
                        }
                      ],
                      "services": [
                        {
                          "etcd": [
                            {
                              "creation": "6h",
                              "retention": "24h"
                            }
                          ],
                          "kube_api": [
                            {
                              "audit_log": [
                                {
                                  "configuration": [
                                    {
                                      "format": "json",
                                      "max_age": 5,
                                      "max_backup": 5,
                                      "max_size": 100,
                                      "path": "-",
                                      "policy": "apiVersion: audit.k8s.io/v1\nkind: Policy\nmetadata:\n  creationTimestamp: null\nomitStages:\n- RequestReceived\nrules:\n- level: RequestResponse\n  resources:\n  - resources:\n    - pods\n"
                                    }
                                  ],
                                  "enabled": true
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "upgrade_strategy": [
                        {
                          "drain": true,
                          "max_unavailable_worker": "20%"
                        }
                      ]
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "cluster_agent_deployment_customization": [
                    {
                      "append_tolerations": [
                        {
                          "effect": "NoSchedule",
                          "key": "tolerate/control-plane",
                          "value": "true"
                        }
                      ],
                      "override_affinity": "{\n  \"nodeAffinity\": {\n    \"requiredDuringSchedulingIgnoredDuringExecution\": {\n      \"nodeSelectorTerms\": [{\n        \"matchExpressions\": [{\n          \"key\": \"not.this/nodepool\",\n          \"operator\": \"In\",\n          \"values\": [\n            \"true\"\n          ]\n        }]\n      }]\n    }\n  }\n}\n",
                      "override_resource_requirements": [
                        {
                          "cpu_limit": "800",
                          "cpu_request": "500",
                          "memory_limit": "800",
                          "memory_request": "500"
                        }
                      ]
                    }
                  ],
                  "description": "Terraform cluster with agent customization",
                  "name": "foo",
                  "rke_config": [
                    {
                      "network": [
                        {
                          "plugin": "canal"
                        }
                      ]
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "default_pod_security_admission_configuration_template_name": "name",
                  "description": "Terraform cluster with PSACT",
                  "name": "foo",
                  "rke_config": [
                    {
                      "network": [
                        {
                          "plugin": "canal"
                        }
                      ]
                    }
                  ]
                }
              dependencies:
                rancher2_pod_security_admission_configuration_template.foo: |-
                    {
                      "defaults": [
                        {
                          "audit": "restricted",
                          "audit_version": "latest",
                          "enforce": "restricted",
                          "enforce_version": "latest",
                          "warn": "restricted",
                          "warn_version": "latest"
                        }
                      ],
                      "description": "This is my custom Pod Security Admission Configuration Template",
                      "exemptions": [
                        {
                          "namespaces": [
                            "ingress-nginx",
                            "kube-system"
                          ],
                          "runtime_classes": [
                            "testclass"
                          ],
                          "usernames": [
                            "testuser"
                          ]
                        }
                      ],
                      "name": "custom-psact"
                    }
            - name: foo
              manifest: |-
                {
                  "description": "Terraform EKS cluster",
                  "eks_config_v2": [
                    {
                      "cloud_credential_id": "${rancher2_cloud_credential.foo.id}",
                      "imported": true,
                      "name": "cluster-name",
                      "region": "eks-region"
                    }
                  ],
                  "name": "foo"
                }
              references:
                eks_config_v2.cloud_credential_id: rancher2_cloud_credential.foo.id
              dependencies:
                rancher2_cloud_credential.foo: |-
                    {
                      "amazonec2_credential_config": [
                        {
                          "access_key": "aws-access-key",
                          "secret_key": "aws-secret-key"
                        }
                      ],
                      "description": "foo test",
                      "name": "foo"
                    }
            - name: foo
              manifest: |-
                {
                  "description": "Terraform EKS cluster",
                  "eks_config_v2": [
                    {
                      "cloud_credential_id": "${rancher2_cloud_credential.foo.id}",
                      "kubernetes_version": "1.24",
                      "logging_types": [
                        "audit",
                        "api"
                      ],
                      "node_groups": [
                        {
                          "desired_size": 3,
                          "instance_type": "t3.medium",
                          "max_size": 5,
                          "name": "node_group1"
                        },
                        {
                          "desired_size": 2,
                          "instance_type": "m5.xlarge",
                          "max_size": 3,
                          "name": "node_group2",
                          "node_role": "arn:aws:iam::role/test-NodeInstanceRole"
                        }
                      ],
                      "private_access": true,
                      "public_access": false,
                      "region": "EKS_REGION"
                    }
                  ],
                  "name": "foo"
                }
              references:
                eks_config_v2.cloud_credential_id: rancher2_cloud_credential.foo.id
              dependencies:
                rancher2_cloud_credential.foo: |-
                    {
                      "amazonec2_credential_config": [
                        {
                          "access_key": "aws-access-key",
                          "secret_key": "aws-secret-key"
                        }
                      ],
                      "description": "foo test",
                      "name": "foo"
                    }
            - name: foo
              manifest: |-
                {
                  "description": "Terraform EKS cluster",
                  "eks_config_v2": [
                    {
                      "cloud_credential_id": "${rancher2_cloud_credential.foo.id}",
                      "kubernetes_version": "1.24",
                      "logging_types": [
                        "audit",
                        "api"
                      ],
                      "node_groups": [
                        {
                          "desired_size": 3,
                          "launch_template": [
                            {
                              "id": "ec2-launch-template-id",
                              "version": 1
                            }
                          ],
                          "max_size": 5,
                          "name": "node_group1"
                        }
                      ],
                      "private_access": true,
                      "public_access": true,
                      "region": "EKS_REGION"
                    }
                  ],
                  "name": "foo"
                }
              references:
                eks_config_v2.cloud_credential_id: rancher2_cloud_credential.foo.id
              dependencies:
                rancher2_cloud_credential.foo: |-
                    {
                      "amazonec2_credential_config": [
                        {
                          "access_key": "aws-access-key",
                          "secret_key": "aws-secret-key"
                        }
                      ],
                      "description": "foo test",
                      "name": "foo"
                    }
            - name: foo
              manifest: |-
                {
                  "description": "Terraform imported GKE cluster",
                  "gke_config_v2": [
                    {
                      "google_credential_secret": "${rancher2_cloud_credential.foo-google.id}",
                      "imported": true,
                      "name": "foo",
                      "project_id": " project-id",
                      "region": "region"
                    }
                  ],
                  "name": "foo"
                }
              references:
                gke_config_v2.google_credential_secret: rancher2_cloud_credential.foo-google.id
              dependencies:
                rancher2_cloud_credential.foo-google: |-
                    {
                      "description": "Terraform cloudCredential acceptance test",
                      "google_credential_config": [
                        {
                          "auth_encoded_json": "${file(\"GOOGLE_AUTH_ENCODED_JSON\")}"
                        }
                      ],
                      "name": "foo-google"
                    }
            - name: foo
              manifest: |-
                {
                  "description": "Terraform GKE cluster",
                  "gke_config_v2": [
                    {
                      "google_credential_secret": "${rancher2_cloud_credential.foo-google.id}",
                      "kubernetes_version": "rancher-kubernetes-version",
                      "name": "foo",
                      "network": "network",
                      "node_pools": [
                        {
                          "initial_node_count": 1,
                          "max_pods_constraint": 110,
                          "name": "node-pool-name",
                          "version": "version"
                        }
                      ],
                      "project_id": "project-id",
                      "region": "region",
                      "subnetwork": "subnet"
                    }
                  ],
                  "name": "foo"
                }
              references:
                gke_config_v2.google_credential_secret: rancher2_cloud_credential.foo-google.id
              dependencies:
                rancher2_cloud_credential.foo-google: |-
                    {
                      "description": "Terraform cloudCredential acceptance test",
                      "google_credential_config": [
                        {
                          "auth_encoded_json": "${file(\"GOOGLE_AUTH_ENCODED_JSON\")}"
                        }
                      ],
                      "name": "foo-google"
                    }
            - name: foo
              manifest: |-
                {
                  "aks_config_v2": [
                    {
                      "cloud_credential_id": "${rancher2_cloud_credential.foo-aks.id}",
                      "imported": true,
                      "resource_group": "resource-group",
                      "resource_location": "resource-location"
                    }
                  ],
                  "description": "Terraform AKS cluster",
                  "name": "cluster-name"
                }
              references:
                aks_config_v2.cloud_credential_id: rancher2_cloud_credential.foo-aks.id
              dependencies:
                rancher2_cloud_credential.foo-aks: |-
                    {
                      "azure_credential_config": [
                        {
                          "client_id": "client-id",
                          "client_secret": "client-secret",
                          "subscription_id": "subscription-id"
                        }
                      ],
                      "name": "foo-aks"
                    }
            - name: foo
              manifest: |-
                {
                  "aks_config_v2": [
                    {
                      "cloud_credential_id": "${rancher2_cloud_credential.foo-aks.id}",
                      "dns_prefix": "dns-prefix",
                      "kubernetes_version": "1.24.6",
                      "network_plugin": "network-plugin",
                      "node_pools": [
                        {
                          "availability_zones": [
                            "1",
                            "2",
                            "3"
                          ],
                          "count": 1,
                          "mode": "System",
                          "name": "nodepool-name-1",
                          "orchestrator_version": "1.21.2",
                          "os_disk_size_gb": 128,
                          "vm_size": "Standard_DS2_v2"
                        },
                        {
                          "availability_zones": [
                            "1",
                            "2",
                            "3"
                          ],
                          "count": 1,
                          "labels": {
                            "test1": "data1",
                            "test2": "data2"
                          },
                          "max_surge": "25%",
                          "mode": "User",
                          "name": "nodepool-name-2",
                          "orchestrator_version": "1.21.2",
                          "os_disk_size_gb": 128,
                          "taints": [
                            "none:PreferNoSchedule"
                          ],
                          "vm_size": "Standard_DS2_v2"
                        }
                      ],
                      "node_resource_group": "node-resource-group",
                      "outbound_type": "loadBalancer",
                      "resource_group": "resource-group",
                      "resource_location": "resource-location",
                      "subnet": "subnet",
                      "virtual_network": "virtual-network",
                      "virtual_network_resource_group": "virtual-network-resource-group"
                    }
                  ],
                  "description": "Terraform AKS cluster",
                  "name": "foo"
                }
              references:
                aks_config_v2.cloud_credential_id: rancher2_cloud_credential.foo-aks.id
              dependencies:
                rancher2_cloud_credential.foo-aks: |-
                    {
                      "azure_credential_config": [
                        {
                          "client_id": "client-id",
                          "client_secret": "client-secret",
                          "subscription_id": "subscription-id"
                        }
                      ],
                      "name": "foo-aks"
                    }
        argumentDocs:
            aad_client_cert_password: '- (Optional/Computed/Sensitive) (string)'
            aad_client_cert_path: '- (Optional/Computed) (string)'
            aad_client_id: '- (Required/Sensitive) (string)'
            aad_client_secret: '- (Required/Sensitive) (string)'
            aad_server_app_secret: '- (Optional/Sensitive) The secret of an Azure Active Directory server application (string)'
            aad_tenant_id: '- (Optional/Sensitive) The ID of an Azure Active Directory tenant (string)'
            access_key: '- (Optional/Sensitive) Access key for S3 service (string)'
            aci_network_provider: '- (Optional/Computed) ACI provider config for RKE network (list maxitems:63)'
            add_client_app_id: '- (Optional/Sensitive) The ID of an Azure Active Directory client application of type "Native". This application is for user login via kubectl (string)'
            add_server_app_id: '- (Optional/Sensitive) The ID of an Azure Active Directory server application of type "Web app/API". This application represents the managed cluster''s apiserver (Server application) (string)'
            addon_job_timeout: '- (Optional/Computed) Duration in seconds of addon job (int)'
            addons: '- (Optional) Addons descripton to deploy on RKE cluster.'
            addons_include: '- (Optional) Addons yaml manifests to deploy on RKE cluster (list)'
            address: '- (Required) Address ip for the bastion host (string)'
            admin_username: '- (Optional) The administrator username to use for Linux hosts. Default azureuser (string)'
            admission_configuration: '- (Optional) Admission configuration (map)'
            aep: '- (Required) Attachable entity profile (string)'
            agent_dns_prefix: '- (Required) DNS prefix to be used to create the FQDN for the agent pool (string)'
            agent_env_vars: '- (Optional) Optional Agent Env Vars for Rancher agent. For Rancher v2.5.6 and above (list)'
            agent_os_disk_size: '- (Optional) GB size to be used to specify the disk for every machine in the agent pool. If you specify 0, it will apply the default according to the "agent vm size" specified. Default 0 (int)'
            agent_pool_name: '- (Optional) Name for the agent pool, upto 12 alphanumeric characters. Default agentpool0 (string)'
            agent_storage_profile: '- (Optional) Storage profile specifies what kind of storage used on machine in the agent pool. Chooses from [ManagedDisks StorageAccount]. Default ManagedDisks (string)'
            agent_vm_size: '- (Optional) Size of machine in the agent pool. Default Standard_D1_v2 (string)'
            aks_config: '- (Optional) The Azure AKS configuration for aks Clusters. Conflicts with aks_config_v2, eks_config, eks_config_v2, gke_config, gke_config_v2, oke_config k3s_config and rke_config (list maxitems:1)'
            aks_config_v2: '- (Optional) The Azure AKS v2 configuration for creating/import aks Clusters. Conflicts with aks_config, eks_config, eks_config_v2, gke_config, gke_config_v2, oke_config k3s_config and rke_config (list maxitems:1)'
            always_pull_images: '- (Optional) Enable AlwaysPullImages Admission controller plugin. Rancher docs Default: false (bool)'
            ami: '- (Optional) AMI ID to use for the worker nodes instead of the default (string)'
            annotations: '- (Optional/Computed) Annotations for the Cluster (map)'
            api_version: '- (Optional) Admission configuration ApiVersion. Default: apiserver.config.k8s.io/v1 (string)'
            apic_hosts: '- (Required) List of APIC hosts to connect for APIC API (list)'
            apic_refresh_ticker_adjust: '- (Optional) APIC refresh ticker adjust amount (string)'
            apic_refresh_time: '- (Optional) APIC refresh time in seconds (string)'
            apic_subscription_delay: '- (Optional) APIC subscription delay amount (string)'
            apic_user_crt: '- (Required/Sensitive) APIC user certificate (string)'
            apic_user_key: '- (Required/Sensitive) APIC user key (string)'
            apic_user_name: '- (Required) APIC user name (string)'
            append_tolerations: '- (Optional) User defined tolerations to append to agent (list)'
            associate_worker_node_public_ip: '- (Optional) Associate public ip EKS worker nodes. Default true (bool)'
            audit_log: '- (Optional) K8s audit log configuration. (list maxitems: 1)'
            auth_base_url: '- (Optional) Different authentication API url to use. Default https://login.microsoftonline.com/ (string)'
            auth_url: '- (Required) (string)'
            authentication: '- (Optional/Computed) Kubernetes cluster authentication (list maxitems:1)'
            authorization: '- (Optional/Computed) Kubernetes cluster authorization (list maxitems:1)'
            authorized_ip_ranges: '- (Optional) The AKS authorized ip ranges (list)'
            auto_repair: '- (Optional/Computed) Enable GKE node pool config management auto repair. Default: false (bool)'
            auto_upgrade: '- (Optional/Computed) Enable GKE node pool config management auto upgrade. Default: false (bool)'
            autoscaling: '- (Optional/computed) The GKE node pool config autoscaling (List maxitems:1)'
            availability_zones: '- (Optional) The AKS node pool availability zones (list)'
            aws_access_key_id: '- (Optional) AWS access key ID (string)'
            aws_cloud_provider: '- (Optional/Computed) RKE AWS Cloud Provider config for Cloud Provider rke-aws-cloud-provider (list maxitems:1)'
            aws_secret_access_key: '- (Optional/Sensitive) AWS secret access key (string)'
            aws_session_token: '- (Optional/Sensitive) AWS session token (string)'
            azure_cloud_provider: '- (Optional/Computed) RKE Azure Cloud Provider config for Cloud Provider rke-azure-cloud-provider (list maxitems:1)'
            backup_config: '- (Optional/Computed) Backup options for etcd service. For Rancher v2.2.x (list maxitems:1)'
            base_url: '- (Optional) Different resource management API url to use. Default https://management.azure.com/ (string)'
            bastion_host: '- (Optional/Computed) RKE bastion host (list maxitems:1)'
            block_storage: '- (Optional/Computed) (list maxitems:1)'
            bs_version: '- (Optional/Computed) (string)'
            bucket_name: '- (Required) Bucket name for S3 service (string)'
            ca_cert: '- (Computed/Sensitive) K8s cluster ca cert (string)'
            ca_certs: '- (Optional) CA certs for the authorized cluster endpoint (string)'
            ca_file: '- (Optional/Computed) (string)'
            calico_network_provider: '- (Optional/Computed) Calico provider config for RKE network (list maxitems:1)'
            canal_network_provider: '- (Optional/Computed) Canal provider config for RKE network (list maxitems:1)'
            capic: '- (Optional) cAPIC cloud (string)'
            cert: '- (Optional/Computed/Sensitive) TLS certificate for etcd service (string)'
            cidr_block: '- (Required) The GKE master authorized network config cidr block (string)'
            cidr_blocks: '- (Required) The GKE master authorized network config cidr blocks (List)'
            client_id: '- (Required/Sensitive) Azure client ID to use (string)'
            client_secret: '- (Required/Sensitive) Azure client secret associated with the "client id" (string)'
            cloud: '- (Optional/Computed) (string)'
            cloud_credential_id: '- (Required) The AKS Cloud Credential ID to use (string)'
            cloud_provider: '- (Optional/Computed) RKE cloud provider rke-cloud-providers (list maxitems:1)'
            cloud_provider_backoff: '- (Optional/Computed) (bool)'
            cloud_provider_backoff_duration: '- (Optional/Computed) (int)'
            cloud_provider_backoff_exponent: '- (Optional/Computed) (int)'
            cloud_provider_backoff_jitter: '- (Optional/Computed) (int)'
            cloud_provider_backoff_retries: '- (Optional/Computed) (int)'
            cloud_provider_rate_limit: '- (Optional/Computed) (bool)'
            cloud_provider_rate_limit_bucket: '- (Optional/Computed) (int)'
            cloud_provider_rate_limit_qps: '- (Optional/Computed) (int)'
            cluster_addons: '- (Optional/Computed) The GKE cluster addons (List maxitems:1)'
            cluster_agent_deployment_customization: '- (Optional) Optional customization for cluster agent. For Rancher v2.7.5 and above (list)'
            cluster_auth_endpoint: '- (Optional/Computed) Enabling the local cluster authorized endpoint allows direct communication with the cluster, bypassing the Rancher API proxy. (list maxitems:1)'
            cluster_cidr: '- (Optional/Computed) Cluster CIDR option for kube controller service (string)'
            cluster_dns_server: '- (Optional/Computed) Cluster DNS Server option for kubelet service (string)'
            cluster_domain: '- (Optional/Computed) Cluster Domain option for kubelet service (string)'
            cluster_id: '- (Optional) Cluster ID to apply answer (string)'
            cluster_ipv4_cidr: '- (Required) The IP address range of the container pods (string)'
            cluster_ipv4_cidr_block: '- (Optional/Computed/ForceNew) The GKE ip v4 cidr block (string)'
            cluster_registration_token: '- (Computed) Cluster Registration Token generated for the cluster (list maxitems:1)'
            cluster_secondary_range_name: '- (Optional/Computed) The GKE cluster ip v4 allocation secondary range name(string)'
            cluster_template_answers: '- (Optional/Computed) Cluster template answers. For Rancher v2.3.x and above (list maxitems:1)'
            cluster_template_id: '- (Optional) Cluster template ID. For Rancher v2.3.x and above (string)'
            cluster_template_questions: '- (Optional/Computed) Cluster template questions. For Rancher v2.3.x and above (list)'
            cluster_template_revision_id: '- (Optional) Cluster template revision ID. For Rancher v2.3.x and above (string)'
            command: '- (Computed) Command to execute in a imported k8s cluster (string)'
            compartment_id: '- (Required) The OCID of the compartment in which to create resources OKE cluster and related resources (string)'
            config: '- (Optional/Computed/ForceNew) The GKE node pool node config (List maxitems:1)'
            configuration: '- (Optional) Plugin configuration. (string) Ex:'
            controller_log_level: '- (Optional) Log level for ACI controller (string)'
            cores_per_replica: '- (Optional) number of replicas per cluster cores (float64)'
            count: '- (Optional) Number of machines (VMs) in the agent pool. Allowed values must be in the range of 1 to 100 (inclusive). Default 1 (int)'
            cpu_limit: '- (Optional) The maximum CPU limit for agent (string)'
            cpu_request: '- (Optional) The minimum CPU required for agent (string)'
            create: '- (Default 30 minutes) Used for creating clusters.'
            create_monitor: '- (Optional/Computed) (bool)'
            create_subnetwork: '- (Optional/Computed) Create GKE subnetwork? Default: false (bool)'
            creation: '- (Optional/Computed) Creation option for etcd service (string)'
            credential: '- (Required/Sensitive) The contents of the GC credential file (string)'
            custom_boot_volume_size: '- (Optional) Optional custom boot volume size (GB) for all nodes. If you specify 0, it will apply the default according to the node_image specified. Default 0 (int)'
            custom_ca: '- (Optional) Base64 encoded custom CA for S3 service. Use filebase64() for encoding file. Available from Rancher v2.2.5 (string)'
            custom_cloud_provider: '- (Optional/Computed) RKE Custom Cloud Provider config for Cloud Provider (string)'
            custom_config: '- (Optional) Secrets encryption yaml encoded custom configuration. "apiVersion" and "kind":"EncryptionConfiguration" fields are required in the yaml. More info (string) Ex:'
            datacenter: '- (Required) (string)'
            datacenters: '- (Required) (string)'
            default: '- (Required) Default variable value (string)'
            default_backend: '- (Optional) Enable ingress default backend. Default: true (bool)'
            default_datastore: '- (Optional/Computed) (string)'
            default_pod_security_admission_configuration_template_name: '- (Optional/Computed) The name of the pre-defined pod security admission configuration template to be applied to the cluster. Rancher admins (or those with the right permissions) can create, manage, and edit those templates. For more information, please refer to Rancher Documentation. The argument is available in Rancher v2.7.2 and above (string)'
            default_project_id: '- (Computed) Default project ID for the cluster (string)'
            delete: '- (Default 30 minutes) Used for deleting clusters.'
            delete_local_data: '- Delete RKE node local data. Default: false (bool)'
            description: '- (Optional) The description for Cluster (string)'
            desired_agent_image: '- (Optional/Computed) Desired agent image. For Rancher v2.3.x and above (string)'
            desired_auth_image: '- (Optional/Computed) Desired auth image. For Rancher v2.3.x and above (string)'
            desired_nodes: '- (Optional) The desired number of worker nodes. For Rancher v2.3.x and above. Default 3 (int)'
            desired_size: '- (Optional) The EKS node group desired size. Default: 2 (int)'
            disable_periodic_snat_global_info_sync: '- (Optional) Whether to disable periodic SNAT global info sync (string)'
            disable_security_group_ingress: '- (Optional) Default false (bool)'
            disable_strict_zone_check: '- (Optional) Default false (bool)'
            disable_wait_for_network: '- (Optional) Whether to disable waiting for network (string)'
            disk: '- (Optional/Computed) (list maxitems:1)'
            disk_size: '- (Optional) The EKS node group disk size (Gb). Default: 20 (int)'
            disk_size_gb: '- (Optional) Size of the disk attached to each node. Default 100 (int)'
            disk_type: '- (Required) Type of the disk attached to each node (string)'
            display_name: '- (Optional) The GKE master authorized network config cidr block dispaly name (string)'
            dns: '- (Optional/Computed) RKE dns add-on. For Rancher v2.2.x (list maxitems:1)'
            dns_policy: '- (Optional/Computed) Ingress controller DNS policy. ClusterFirstWithHostNet, ClusterFirst, Default, and None are supported. K8S dns Policy (string)'
            dns_prefix: '- (Optional/ForceNew) The AKS dns prefix. Required if imported=false (string)'
            dns_service_ip: '- (Optional) An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes Service address range specified in "service cidr". Default 10.0.0.10 (string)'
            docker_bridge_cidr: '- (Required) A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes Service address range specified in "service cidr". Default 172.17.0.1/16 (string)'
            docker_root_dir: '- (Optional/Computed) Desired auth image. For Rancher v2.3.x and above (string)'
            docker_socket: '- (Optional/Computed) Docker socket for node (string)'
            domain_id: '- (Optional/Computed/Sensitive) Required if domain_name not provided. (string)'
            domain_name: '- (Optional/Computed) Required if domain_id not provided. (string)'
            drain: '- (Optional) RKE drain nodes. Default: false (bool)'
            drain_input: '- (Optional/Computed) RKE drain node input (list Maxitems: 1)'
            drain_server_nodes: '- (Optional) Drain server nodes. Default: false (bool)'
            drain_worker_nodes: '- (Optional) Drain worker nodes. Default: false (bool)'
            driver: '- (Computed) The driver used for the Cluster. imported, azurekubernetesservice, amazonelasticcontainerservice, googlekubernetesengine and rancherKubernetesEngine are supported (string)'
            drop_log_enable: '- (Optional) Whether to enable drop log (string)'
            duration_wait_for_network: '- (Optional) The duration to wait for network (string)'
            ec2_ssh_key: '- (Optional) The EKS node group ssh key (string)'
            ecr_credential_plugin: '- (Optional) ECR credential plugin config (list maxitems:1)'
            effect: '- (Optional) The toleration effect. Default: \"NoSchedule\" (string)'
            eks_config: '- (Optional) The Amazon EKS configuration for eks Clusters. Conflicts with aks_config, aks_config_v2, eks_config_v2, gke_config, gke_config_v2, oke_config k3s_config and rke_config (list maxitems:1)'
            eks_config_v2: '- (Optional/Computed) The Amazon EKS V2 configuration to create or import eks Clusters. Conflicts with aks_config, eks_config, gke_config, gke_config_v2, oke_config k3s_config and rke_config. For Rancher v2.5.x and above (list maxitems:1)'
            elb_security_group: '- (Optional/Computed) (string)'
            enable_alpha_feature: '- (Optional) To enable Kubernetes alpha feature. Default true (bool)'
            enable_auto_repair: '- (Optional) Specifies whether the node auto-repair is enabled for the node pool. Default false (bool)'
            enable_auto_scaling: '- (Optional) Is AKS node pool auto scaling enabled? Default: false (bool)'
            enable_auto_upgrade: '- (Optional) Specifies whether node auto-upgrade is enabled for the node pool. Default false (bool)'
            enable_cluster_istio: '- (Deprecated) Deploy istio on system project and istio-system namespace, using rancher2_app resource instead. See above example.'
            enable_cri_dockerd: '- (Optional) Enable/disable using cri-dockerd. Deafult: false enable_cri_dockerd (bool)'
            enable_endpoint_slice: '- (Optional) Whether to enable endpoint slices (string)'
            enable_horizontal_pod_autoscaling: '- (Optional) Enable horizontal pod autoscaling for the cluster. Default true (bool)'
            enable_http_application_routing: '- (Optional) Enable the Kubernetes ingress with automatic public DNS name creation. Default false (bool)'
            enable_http_load_balancing: '- (Optional) Enable HTTP load balancing on GKE cluster. Default true (bool)'
            enable_kubernetes_alpha: '- (Optional/Computed/ForceNew) Enable Kubernetes alpha. Default: false (bool)'
            enable_kubernetes_dashboard: '- (Optional) Whether to enable the Kubernetes dashboard. Default false (bool)'
            enable_legacy_abac: '- (Optional) Whether to enable legacy abac on the cluster. Default false (bool)'
            enable_master_authorized_network: '- (Optional) Enable master authorized network. Set to true if master_authorized_network_cidr_blocks is set. Default false (bool)'
            enable_monitoring: '- (Optional) Turn on Azure Log Analytics monitoring. Uses the Log Analytics "Default" workspace if it exists, else creates one. if using an existing workspace, specifies "log analytics workspace resource id". Default true (bool)'
            enable_network_policy: '- (Optional/Computed) Enable project network isolation (bool)'
            enable_network_policy_config: '- (Optional) Enable network policy config for the cluster. Default true (bool)'
            enable_nodepool_autoscaling: '- (Optional) Enable nodepool autoscaling. Default false (bool)'
            enable_private_control_plane: '- (Optional) Specifies whether Kubernetes API endpoint is a private IP only accessible from within the VCN. Default false for Rancher v2.5.10 and above (bool)'
            enable_private_endpoint: '- (Optional) Whether the master''s internal IP address is used as the cluster endpoint. Default false (bool)'
            enable_private_nodes: '- (Optional) Whether nodes have internal IP address only. Default false (bool)'
            enable_stackdriver_logging: '- (Optional) Enable stackdriver monitoring. Default true (bool)'
            enable_stackdriver_monitoring: '- (Optional) Enable stackdriver monitoring on GKE cluster (bool)'
            enabled: '- (Optional) Enable etcd backup (bool)'
            encap_type: '- (Required) Encap type: vxlan or vlan (string)'
            endpoint: '- (Required) Endpoint for S3 service (string)'
            ep_registry: '- (Optional) EP registry (string)'
            etcd: '- (Optional/Computed) Etcd options for RKE services (list maxitems:1)'
            event_rate_limit: '- (Optional) K8s event rate limit configuration. (list maxitems: 1)'
            extern_dynamic: '- (Required) Subnet to use for dynamic external IPs (string)'
            extern_static: '- (Required)  Subnet to use for static external IPs (string)'
            external_urls: '- (Optional) External urls for etcd service (list)'
            extra_args: '- (Optional/Computed) Extra arguments for RKE Ingress (map)'
            extra_binds: '- (Optional) Extra binds for etcd service (list)'
            extra_env: '- (Optional) Extra environment for etcd service (list)'
            fail_swap_on: '- (Optional/Computed) Enable or disable failing when swap on is not supported (bool)'
            fingerprint: '- (Required) The fingerprint corresponding to the specified user''s private API Key (string)'
            flannel_network_provider: '- (Optional/Computed) Flannel provider config for RKE network (list maxitems:1)'
            fleet_agent_deployment_customization: '- (Optional) Optional customization for fleet agent. For Rancher v2.7.5 and above (list)'
            fleet_workspace_name: '- (Optional/Computed) Fleet workspace name (string)'
            flex_ocpus: '- (Optional) Specifies number of OCPUs for nodes (requires flexible shape specified with node_shape) (int)'
            floating_network_id: '- (Optional/Computed) (string)'
            folder: '- (Required) (string)'
            force: '- Force RKE node drain. Default: false (bool)'
            format: '- (Optional) Audit log format. Default: ''json'' (string)'
            fqdn: '- (Optional) FQDN for the authorized cluster endpoint (string)'
            gbp_pod_subnet: '- (Optional) GBH pod subnet (string)'
            generate_serving_certificate: Generate a certificate signed by the kube-ca. Default false (bool)
            gid: '- (Optional) Etcd service GID. Default: 0. For Rancher v2.3.x and above (int)'
            gke_config: '- (Optional) The Google GKE configuration for gke Clusters. Conflicts with aks_config, aks_config_v2, eks_config, eks_config_v2, gke_config_v2, oke_config, k3s_config and rke_config (list maxitems:1)'
            gke_config_v2: '- (Optional) The Google GKE V2 configuration for gke Clusters. Conflicts with aks_config, aks_config_v2, eks_config, eks_config_v2, gke_config, oke_config, k3s_config and rke_config. For Rancher v2.5.8 and above (list maxitems:1)'
            global: '- (Optional/Computed) (list maxitems:1)'
            google_credential_secret: '- (Required/Sensitive) Google credential secret (string)'
            gpu: '- (Optional) Set true to EKS use gpu. Default: false (bool)'
            grace_period: '- RKE node drain grace period. Default: -1 (int)'
            horizontal_pod_autoscaling: '- (Optional/Computed) Enable GKE horizontal pod autoscaling. Default: false (bool)'
            host_agent_log_level: '- (Optional) Log level for ACI host agent (string)'
            hostname_override: '- (Optional) Hostname override for node (string)'
            http_application_routing: '- (Optional/Computed) Enable AKS http application routing? (bool)'
            http_load_balancing: '- (Optional/Computed) Enable GKE HTTP load balancing. Default: false (bool)'
            http_port: '- (Optional/Computed) HTTP port for RKE Ingress (int)'
            https_port: '- (Optional/Computed) HTTPS port for RKE Ingress (int)'
            id: '- (Computed) The ID of the resource (string)'
            iface: '- (Optional/Computed) Iface config Canal network provider (string)'
            ignore_daemon_sets: '- Ignore RKE daemon sets. Default: true (bool)'
            ignore_docker_version: '- (Optional) Ignore docker version. Default true (bool)'
            ignore_volume_az: '- (Optional/Computed) (string)'
            image: '- (Optional/Computed) Docker image for etcd service (string)'
            image_id: '- (Optional) The EKS node group image ID (string)'
            image_pull_policy: '- (Optional) Image pull policy (string)'
            image_pull_secret: '- (Optional) Image pull policy (string)'
            image_type: '- (Required) The image to use for the worker nodes (string)'
            imported: '- (Optional) Is AKS cluster imported? Default: false (bool)'
            infra_container_image: '- (Optional/Computed) Infra container image for kubelet service (string)'
            infra_vlan: '- (Optional) The VLAN used by ACI infra (string)'
            ingress: '- (Optional/Computed) Kubernetes ingress configuration (list maxitems:1)'
            initial_node_count: '- (Required) The GKE node pool config initial node count (int)'
            insecure_command: '- (Computed) Insecure command to execute in a imported k8s cluster (string)'
            insecure_flag: '- (Optional/Computed) (bool)'
            insecure_node_command: '- (Computed) Insecure node command to execute in a imported k8s cluster (string)'
            insecure_windows_node_command: '- (Computed) Insecure windows command to execute in a imported k8s cluster (string)'
            install_istio: '- (Optional) Whether to install Istio (string)'
            instance_type: '- (Optional) The type of machine to use for worker nodes. Default t2.medium (string)'
            internal_address: '- (Optional) Internal ip for node (string)'
            interval_hours: '- (Optional) Interval hours for etcd backup. Default 12 (int)'
            ip_address: '- (required) Nodelocal dns ip address (string)'
            ip_allocation_policy: '- (Optional/Computed/ForceNew) The GKE ip allocation policy (List maxitems:1)'
            ip_policy_cluster_ipv4_cidr_block: '- (Required) The IP address range for the cluster pod IPs (string)'
            ip_policy_cluster_secondary_range_name: '- (Required) The name of the secondary range to be used for the cluster CIDR block (string)'
            ip_policy_create_subnetwork: '- (Optional) Whether a new subnetwork will be created automatically for the cluster. Default false (bool)'
            ip_policy_node_ipv4_cidr_block: '- (Required) The IP address range of the instance IPs in this cluster (string)'
            ip_policy_services_ipv4_cidr_block: '- (Required) The IP address range of the services IPs in this cluster (string)'
            ip_policy_services_secondary_range_name: '- (Required) The name of the secondary range to be used for the services CIDR block (string)'
            ip_policy_subnetwork_name: '- (Required) A custom subnetwork name to be used if createSubnetwork is true (string)'
            is_default: '- (Optional) Set as default registry. Default false (bool)'
            issue_client_certificate: '- (Optional) Issue a client certificate. Default false (bool)'
            istio_enabled: '- (Computed) Is istio enabled at cluster? For Rancher v2.3.x and above (bool)'
            istio_profile: '- (Optional) Istio profile name (string)'
            k3s_config: '- (Optional/Computed) The K3S configuration for k3s imported Clusters. Conflicts with aks_config, aks_config_v2, eks_config, eks_config_v2, gke_config, gke_config_v2, oke_config and rke_config (list maxitems:1)'
            kafka_brokers: '- (Optional) List of Kafka broker hosts (list)'
            kafka_client_crt: '- (Optional) Kafka client certificate (string)'
            kafka_client_key: '- (Optional) Kafka client key (string)'
            key: '- (Required) The toleration key (string)'
            key_pair_name: '- (Optional) Allow user to specify key name to use. For Rancher v2.2.7 and above (string)'
            kind: '- (Optional) Admission configuration Kind. Default: AdmissionConfiguration (string)'
            kms_key: '- (Optional) The AWS kms label ARN to use (string, e.g. arn:aws:kms::<123456789100>:alias/)'
            kms_key_id: '- (Optional) The OCID of a KMS vault master key used to encrypt secrets at rest. See here for help creating a vault and master encryption key. For Rancher v2.5.9 and above (string)'
            kube_api: '- (Optional/Computed) Kube API options for RKE services (list maxitems:1)'
            kube_api_vlan: '- (Required) The VLAN used by the physdom for nodes (string)'
            kube_config: '- (Computed/Sensitive) Kube Config generated for the cluster. Note: For Rancher 2.6.0 and above, when the cluster has cluster_auth_endpoint enabled, the kube_config will not be available until the cluster is connected (string)'
            kube_controller: '- (Optional/Computed) Kube Controller options for RKE services (list maxitems:1)'
            kubelet: '- (Optional/Computed) Kubelet options for RKE services (list maxitems:1)'
            kubeproxy: '- (Optional/Computed) Kubeproxy options for RKE services (list maxitems:1)'
            kubernetes_cluster_id: '- (Optional/Computed) (string)'
            kubernetes_cluster_tag: '- (Optional/Computed) (string)'
            kubernetes_dashboard: '- (Optional) Enable the Kubernetes dashboard. Default false (bool)'
            kubernetes_version: '- (Optional/Computed) K8s version to deploy. Default: Rancher default (string) (Note - if rke_config is set at cluster_template, kubernetes_version must be set to the active cluster version so Rancher can clone the RKE template)'
            l3out: '- (Required) L3out (string)'
            l3out_external_networks: '- (Required) L3out external networks (list)'
            labels: '- (Optional/Computed) Labels for the Cluster (map)'
            launch_template: '- (Optional) The EKS node groups launch template (list Maxitem: 1)'
            lb_method: '- (Optional/Computed) (string)'
            lb_provider: '- (Optional/Computed) (string)'
            lb_version: '- (Optional/Computed) (string)'
            limit_node_count: '- (Optional) The maximum number of worker nodes. Can limit quantity_per_subnet. Default 0 (no limit) (int)'
            linear_autoscaler_params: '- (Optional) LinearAutoScalerParams dns config (list Maxitem: 1)'
            linux_admin_username: '- (Optional/Computed) The AKS linux admin username (string)'
            linux_ssh_public_key: '- (Optional/Computed) The AKS linux ssh public key (string)'
            load_balancer: '- (Optional/Computed) (list maxitems:1)'
            load_balancer_sku: '- (Optional) Allowed values: basic (default) standard (string)'
            load_balancer_subnet_name_1: '- (Optional) The name of the first existing subnet to use for Kubernetes services / LB. vcn_name is also required when specifying an existing subnet. (string)'
            load_balancer_subnet_name_2: '- (Optional) The name of a second existing subnet to use for Kubernetes services / LB. A second subnet is only required when it is AD-specific (non-regional) (string)'
            local_ssd_count: '- (Optional) The number of local SSD disks to be attached to the node. Default 0 (int)'
            location: '- (Optional/Computed) (string)'
            locations: '- (Required) Locations for GKE cluster (list)'
            log_analytics_workspace: '- (Optional) The name of an existing Azure Log Analytics Workspace to use for storing monitoring data. If not specified, uses ''{resource group}-{subscription id}-{location code}'' (string)'
            log_analytics_workspace_group: '- (Optional/Computed) The AKS log analytics workspace group (string)'
            log_analytics_workspace_name: '- (Optional/Computed) The AKS log analytics workspace name (string)'
            log_analytics_workspace_resource_group: '- (Optional) The resource group of an existing Azure Log Analytics Workspace to use for storing monitoring data. If not specified, uses the ''Cluster'' resource group (string)'
            logging_service: '- (Optional/Computed) The GKE cluster logging service (string)'
            logging_types: '- (Optional) The AWS cloudwatch logging types. audit, api, scheduler, controllerManager and authenticator values are allowed (list)'
            machine_type: '- (Required) Machine type for GKE cluster (string)'
            maintenance_window: '- (Required) Maintenance window for GKE cluster (string)'
            manage_security_groups: '- (Optional/Computed) (bool)'
            management: '- (Optional/Computed) The GKE node pool config management (List maxitems:1)'
            manifest_url: '- (Computed) K8s manifest url to execute with kubectl to import an existing k8s cluster (string)'
            master_authorized_network_cidr_blocks: '- (Optional) Define up to 10 external networks that could access Kubernetes master through HTTPS (list)'
            master_authorized_networks_config: '- (Optional/Computed/ForceNew) The GKE cluster master authorized networks config (List maxitems:1)'
            master_dns_prefix: '- (Required) DNS prefix to use the Kubernetes cluster control pane (string)'
            master_ipv4_cidr_block: '- (Required) The IP range in CIDR notation to use for the hosted master network (string)'
            master_version: '- (Required) Master version for GKE cluster (string)'
            max: '- (Optional) maximum number of replicas (int64)'
            max_age: '- (Optional) Audit log max age. Default: 30 (int)'
            max_backup: '- (Optional) Audit log max backup. Default: 10 (int)'
            max_count: '- (Optional) The AKS node pool max count. Required if enable_auto_scaling=true (int)'
            max_node_count: '- (Optional) Maximum number of nodes in the NodePool. Must be >= minNodeCount. There has to enough quota to scale up the cluster. Default 0 (int)'
            max_nodes_svc_graph: '- (Optional) Max nodes in service graph (string)'
            max_pods: '- (Optional) Maximum number of pods that can run on a node. Default 110 (int)'
            max_pods_constraint: '- (Optional/Computed) The GKE node pool config max pods constraint. Required for create new cluster if ip_allocation_policy.use_ip_aliases = true (int)'
            max_size: '- (Optional) Audit log max size. Default: 100 (int)'
            max_surge: '- (Optional) Monitoring deployment rolling update max surge. Default: 1 (int)'
            max_unavailable: '- (Optional) Monitoring deployment rolling update max unavailable. Default: 1 (int)'
            max_unavailable_controlplane: '- (Optional) RKE max unavailable controlplane nodes. Default: 1 (string)'
            max_unavailable_worker: '- (Optional) RKE max unavailable worker nodes. Default: 10% (string)'
            maximum_load_balancer_rule_count: '- (Optional/Computed) (int)'
            maximum_nodes: '- (Optional) The maximum number of worker nodes. Default 3 (int)'
            mcast_range_end: '- (Required) End of mcast range (string)'
            mcast_range_start: '- (Required) Start of mcast range (string)'
            memory_limit: '- (Optional) The maximum memory limit for agent (string)'
            memory_request: '- (Optional) The minimum memory required for agent (string)'
            metadata: '- (Optional/Computed) (list maxitems:1)'
            min: '- (Optional) minimum number of replicas (int64)'
            min_count: '- (Optional) The AKS node pool min count. Required if enable_auto_scaling=true (int)'
            min_node_count: '- (Optional) Minimmum number of nodes in the NodePool. Must be >= 1 and <= maxNodeCount. Default 0 (int)'
            min_size: '- (Optional) The EKS node group maximum size. Default 2 (int)'
            minimum_nodes: '- (Optional) The minimum number of worker nodes. Default 1 (int)'
            mode: '- (Optional) RKE mode for authorization. rbac and none modes are available. Default rbac (string)'
            monitor_delay: '- (Optional/Computed) Default 60s (string)'
            monitor_max_retries: '- (Optional/Computed) Default 5 (int)'
            monitor_timeout: '- (Optional/Computed) Default 30s (string)'
            monitoring: '- (Optional/Computed) Kubernetes cluster monitoring (list maxitems:1)'
            monitoring_service: '- (Optional/Computed) The GKE cluster monitoring service (string)'
            mtu: '- (Optional) Network provider MTU. Default 0 (int)'
            mtu_head_room: '- (Optional) MTU head room amount (string)'
            multus_disable: '- (Optional) Whether to disable Multus (string)'
            name: '- (Required) The name of the Cluster (string)'
            network: '- (Optional/Computed) Kubernetes cluster networking (list maxitems:1)'
            network_dns_service_ip: '- (Optional/Computed) The AKS network dns service ip (string)'
            network_docker_bridge_cidr: '- (Optional/Computed) The AKS network docker bridge cidr (string)'
            network_mode: '- (Optional/Computed) Network mode for RKE Ingress (string)'
            network_plugin: '- (Optional) Network plugin used for building Kubernetes network. Chooses from azure or kubenet. Default azure (string)'
            network_pod_cidr: '- (Optional/Computed) The AKS network pod cidr (string)'
            network_policy: '- (Optional) Network policy used for building Kubernetes network. Chooses from calico (string)'
            network_policy_config: '- (Optional/Computed) Enable GKE network policy config. Default: false (bool)'
            network_policy_enabled: '- (Optional/Computed) Is GKE cluster network policy enabled? Default: false (bool)'
            network_service_cidr: '- (Optional/Computed) The AKS network service cidr (string)'
            no_priority_class: '- (Optional) Whether to use priority class (string)'
            node_command: '- (Computed) Node command to execute in linux nodes for custom k8s cluster (string)'
            node_count: '- (Optional) Node count for GKE cluster. Default 3 (int)'
            node_groups: '- (Optional/Computed) The EKS cluster name to import. Required to create a new cluster (list)'
            node_id: '- (Optional) Id for the node (string)'
            node_image: '- (Required) The Oracle Linux OS image name to use for the OKE node(s). See here for a list of images. (string)'
            node_ipv4_cidr_block: '- (Optional/Computed) The GKE node ip v4 allocation cidr block (string)'
            node_pod_if_enable: '- (Optional) Whether to enable node pod interface (string)'
            node_pool: '- (Required) The ID of the cluster node pool (string)'
            node_pool_dns_domain_name: '- (Optional) Name for DNS domain of node pool subnet. Default nodedns (string)'
            node_pool_subnet_name: '- (Optional) Name for node pool subnet. Default nodedns (string)'
            node_pools: '- (Optional) The AKS nnode pools. Required if imported=false (list)'
            node_public_key_contents: '- (Optional) The contents of the SSH public key file to use for the nodes (string)'
            node_resource_group: (Optional/Computed) The AKS node resource group name (string)
            node_role: '- (Optional) The EKS node group node role ARN. Default "" (string)'
            node_selector: '- (Optional/Computed) DNS add-on node selector (map)'
            node_shape: '- (Required) The shape of the node (determines number of CPUs and  amount of memory on each OKE node) (string)'
            node_subnet: '- (Required) Subnet to use for nodes (string)'
            node_svc_subnet: '- (Required) Subnet to use for service graph (string)'
            node_version: '- (Required) Node version for GKE cluster (string)'
            node_volume_size: '- (Optional) The volume size for each node. Default 20 (int)'
            nodelocal: '- (Optional) Nodelocal dns config  (list Maxitem: 1)'
            nodes: '- (Optional) RKE cluster nodes (list)'
            nodes_per_replica: '- (Optional) number of replica per cluster nodes (float64)'
            oauth_scopes: '- (Required) The set of Google API scopes to be made available on all of the node VMs under the default service account (list)'
            oke_config: '- (Optional) The Oracle OKE configuration for oke Clusters. Conflicts with aks_config, aks_config_v2, eks_config, eks_config_v2, gke_config, gke_config_v2, k3s_config and rke_config (list maxitems:1)'
            openstack_cloud_provider: '- (Optional/Computed) RKE Openstack Cloud Provider config for Cloud Provider rke-openstack-cloud-provider (list maxitems:1)'
            operator: '- (Optional) The toleration operator (string)'
            opflex_client_ssl: '- (Optional) Whether to use client SSL for Opflex (string)'
            opflex_device_delete_timeout: '- (Optional) Opflex device delete timeout (string)'
            opflex_log_level: '- (Optional) Log level for ACI opflex (string)'
            opflex_mode: '- (Optional) Opflex mode (string)'
            opflex_server_port: '- (Optional) Opflex server port (string)'
            options: '- (Optional/Computed) RKE options for authorization (map)'
            orchestrator_version: '- (Optional) The AKS node pool orchestrator version (string)'
            os_disk_size_gb: '- (Optional) The AKS node pool os disk size gb. Default: 128 (int)'
            os_disk_type: '- (Optional) The AKS node pool os disk type. Default: Managed (string)'
            os_type: '- (Optional) The AKS node pool os type. Default: Linux (string)'
            outbound_type: (Optional/Computed) The AKS outbound type for the egress traffic (string)
            overlay_vrf_name: '- (Optional) Overlay VRF name (string)'
            override_affinity: '- (Optional) User defined affinity to override default agent affinity (string)'
            override_resource_requirements: '- (Optional) User defined resource requirements to set on the agent (list)'
            ovs_memory_limit: '- (Optional) OVS memory limit (string)'
            password: '- (Required/Sensitive) (string)'
            path: '- (Optional/Computed) Path for etcd service (string)'
            pbr_tracking_non_snat: '- (Optional) Policy-based routing tracking non snat (string)'
            plugin: '- (Optional/Computed) Plugin for RKE network. canal (default), flannel, calico, none and weave are supported. (string)'
            plugins: '- (Optional) Admission configuration plugins. (list plugin)'
            pod_cidr: '- (Optional) A CIDR notation IP range from which to assign Kubernetes Pod IPs when "network plugin" is specified in "kubenet". Default 172.244.0.0/16 (string)'
            pod_subnet_chunk_size: '- (Optional) Pod subnet chunk size (string)'
            policy: '- (Optional/Computed) Audit policy yaml encoded definition. apiVersion and kind: Policy\nrules:" fields are required in the yaml. More info (string) Ex:'
            port: '- (Optional) Port for bastion host. Default 22 (string)'
            preemptible: '- (Optional) Whether the nodes are created as preemptible VM instances. Default false (bool)'
            prefix_path: '- (Optional/Computed) Prefix to customize Kubernetes path (string)'
            prevent_single_point_failure: '- (Optional) prevent single point of failure'
            primary_availability_set_name: '- (Optional/Computed) (string)'
            primary_scale_set_name: '- (Optional/Computed) (string)'
            private_access: '- (Optional/Computed) The EKS cluster has private access (bool)'
            private_cluster: '- (Optional/Computed) Is AKS cluster private? (bool)'
            private_cluster_config: '- (Optional/Computed/ForceNew) The GKE private cluster config (List maxitems:1)'
            private_key_contents: '- (Required/Sensitive) The private API key file contents for the specified user, in PEM format (string)'
            private_key_passphrase: '- (Optional/Sensitive) The passphrase (if any) of the private key for the OKE cluster (string)'
            private_registries: '- (Optional) private registries for docker images (list)'
            project_id: '- (Required) Project ID for GKE cluster (string)'
            provider: '- (Optional) DNS add-on provider. kube-dns, coredns (default), and none are supported (string)'
            public_access: '- (Optional/Computed) The EKS cluster has public access (bool)'
            public_access_sources: '- (Optional/Computed) The EKS cluster public access sources (map)'
            public_network: '- (Optional/Computed) (string)'
            quantity_of_node_subnets: '- (Optional) Number of node subnets. Default 1 (int)'
            quantity_per_subnet: '- (Optional) Number of OKE worker nodes in each subnet / availability domain. Default 1 (int)'
            region: '- (Optional/Computed) (string)'
            replicas: '- (Optional/Computed) RKE monitoring replicas (int)'
            request_spot_instances: '- (Optional) Enable EKS node group request spot instances (bool)'
            request_timeout: '- (Optional/Computed) (int)'
            required: '- (Optional) Required variable. Default false (bool)'
            resource_group: '- (Optional/Computed) (string)'
            resource_labels: '- (Optional/Computed) The map of Kubernetes labels to be applied to each cluster (map)'
            resource_location: '- (Required) The AKS resource location (string)'
            resource_tags: '- (Optional) The EKS node group resource tags (map)'
            resourcepool_path: '- (Optional/Computed) (string)'
            retention: '- (Optional/Computed) Retention option for etcd service (string)'
            reverse_cidrs: '- (Optional/Computed) DNS add-on reverse cidr  (list)'
            rke_config: '- (Optional/Computed) The RKE configuration for rke Clusters. Conflicts with aks_config, aks_config_v2, eks_config, eks_config_v2, gke_config, gke_config_v2, oke_config and k3s_config (list maxitems:1)'
            rke2_config: '- (Optional/Computed) The RKE2 configuration for rke2 Clusters. Conflicts with aks_config, aks_config_v2, eks_config, gke_config, oke_config, k3s_config and rke_config (list maxitems:1)'
            role: '- (Requires) Roles for the node. controlplane, etcd and worker are supported. (list)'
            role_arn: '- (Optional/Computed) (string)'
            rolling_update: '- (Optional) Monitoring daemon set rolling update (list Maxitems: 1)'
            route: '- (Optional/Computed) (list maxitems:1)'
            route_table_id: '- (Optional/Computed/Sensitive) (string)'
            route_table_name: '- (Optional/Computed) (string)'
            router_id: '- (Optional/Computed) (string)'
            run_gbp_container: '- (Optional) Whether to run GBP container (string)'
            run_opflex_server_container: '- (Optional) Whether to run Opflex server container (string)'
            s3_backup_config: '- (Optional) S3 config options for etcd backup (list maxitems:1)'
            safe_timestamp: '- (Optional) Safe timestamp for etcd backup. Default: false (bool)'
            sans: '- (Optional/Computed) RKE sans for authentication ([]string)'
            scheduler: '- (Optional/Computed) Scheduler options for RKE services (list maxitems:1)'
            scsi_controller_type: '- (Optional/Computed) (string)'
            search_order: '- (Optional/Computed) (string)'
            seconds: '- (Optional) The number of seconds a pod will stay bound to a node with a matching taint (int)'
            secret_key: '- (Optional/Sensitive) Secret key for S3 service (string)'
            secrets_encryption: '- (Optional/Computed) Enable EKS cluster secret encryption (bool)'
            secrets_encryption_config: '- (Optional) Encrypt k8s secret data configration. (list maxitem: 1)'
            security_group_name: '- (Optional/Computed) (string)'
            security_groups: '- (Optional) List of security groups to use for the cluster. If it''s not specified Rancher will create a new security group (list)'
            server: '- (Required) (string)'
            server_concurrency: '- (Optional) Server concurrency. Default: 1 (int)'
            service: '- (Required) (string)'
            service_account: '- (Required) The Google Cloud Platform Service Account to be used by the node VMs (string)'
            service_cidr: '- (Optional) A CIDR notation IP range from which to assign Kubernetes Service cluster IPs. It must not overlap with any Subnet IP ranges. Default 10.0.0.0/16 (string)'
            service_cluster_ip_range: '- (Optional/Computed) Service Cluster IP Range option for kube API service (string)'
            service_dns_domain_name: '- (Optional) Name for DNS domain of service subnet. Default svcdns (string)'
            service_monitor_interval: '- (Optional) Service monitor interval (string)'
            service_node_port_range: '- (Optional/Computed) Service Node Port Range option for kube API service (string)'
            service_override: '- (Optional) (list)'
            service_role: '- (Optional) The service role to use to perform the cluster operations in AWS. If it''s not specified Rancher will create a new service role (string)'
            service_vlan: '- (Required) The VLAN used by LoadBalancer services (string)'
            services: '- (Optional/Computed) Kubernetes cluster services (list maxitems:1)'
            services_ipv4_cidr_block: '- (Optional/Computed) The GKE services ip v4 allocation cidr block (string)'
            services_secondary_range_name: '- (Optional/Computed) The GKE services ip v4 allocation secondary range name (string)'
            session_token: '- (Optional/Sensitive) A session token to use with the client key and secret if applicable (string)'
            signing_method: '- (Optional/Computed) (string)'
            signing_name: '- (Optional/Computed) (string)'
            signing_region: '- (Optional/Computed) (string)'
            skip_vcn_delete: '- (Optional) Specifies whether to skip deleting the virtual cloud network (VCN) on destroy. Default false (bool)'
            snapshot: '- (Optional/Computed) Snapshot option for etcd service (bool)'
            snat_contract_scope: '- (Optional) Snat contract scope (string)'
            snat_namespace: '- (Optional) Snat namespace (string)'
            snat_port_range_end: '- (Optional) End of snat port range (string)'
            snat_port_range_start: '- (Optional) End of snat port range (string)'
            snat_ports_per_node: '- (Optional) Snat ports per node (string)'
            soap_roundtrip_count: '- (Optional/Computed) (int)'
            spot_instance_types: '- (Optional) The EKS node group sport instace types (list string)'
            sriov_enable: '- (Optional) Whether to enable SR-IOV (string)'
            ssh_agent_auth: '- (Optional) Use ssh agent auth. Default false'
            ssh_cert_path: '- (Optional/Computed) Cluster level SSH certificate path (string)'
            ssh_key: '- (Optional/Computed/Sensitive) Bastion host SSH private key (string)'
            ssh_key_path: '- (Optional/Computed) Cluster level SSH private key path (string)'
            ssh_public_key_contents: '- (Required) Contents of the SSH public key used to authenticate with Linux hosts (string)'
            strategy: '- (Optional/Computed) RKE strategy for authentication (string)'
            sub_network: '- (Required) Subnetwork for GKE cluster (string)'
            subnet: '- (Required) The name of an existing Azure Virtual Subnet. Composite of agent virtual network subnet ID (string)'
            subnet_domain_name: '- (Optional) Subnet domain name (string)'
            subnet_id: '- (Optional/Computed) (string)'
            subnet_name: '- (Optional/Computed) (string)'
            subnets: '- (Optional) List of subnets in the virtual network to use. If it''s not specified Rancher will create 3 news subnets (list)'
            subnetwork: '- (Optional/Computed/ForceNew) The GKE cluster subnetwork. Required for create new cluster (string)'
            subnetwork_name: '- (Optional/Computed) The GKE cluster subnetwork name (string)'
            subscription_id: '- (Required/Sensitive) (string)'
            system_id: '- (Required) ACI system ID (string)'
            system_project_id: '- (Computed) System project ID for the cluster (string)'
            tag: '- (Deprecated) Use tags argument instead as []string'
            tags: '- (Optional/Computed) Tags for Kubernetes cluster. For example, ["foo=bar","bar=foo"] (list)'
            taints: '- (Optonal) The AKS node pool taints (list)'
            taints.effect: '- (Required) The GKE taint effect (string)'
            taints.key: '- (Required) The GKE taint key (string)'
            taints.value: '- (Required) The GKE taint value (string)'
            tenancy_id: '- (Required) The OCID of the tenancy in which to create resources (string)'
            tenant: '- (Optional) ACI tenant (string)'
            tenant_id: '- (Required/Sensitive) (string)'
            tenant_name: '- (Optional/Computed) Required if tenant_id not provided. (string)'
            timeout: '- (Optional/Computed) Timeout in seconds for etcd backup. Default: 300. For Rancher v2.5.6 and above (int)'
            token: '- (Required/Sensitive) ACI token (string)'
            tolerations: '- (Optional) DNS add-on tolerations (list)'
            trust_device_path: '- (Optional/Computed) (string)'
            trust_id: '- (Optional/Computed/Sensitive) (string)'
            type: '- (Optional) Variable type. boolean, int, password, and string are allowed. Default string (string)'
            uid: '- (Optional) Etcd service UID. Default: 0. For Rancher v2.3.x and above (int)'
            update: '- (Default 30 minutes) Used for cluster modifications.'
            update_strategy: '- (Optional) DNS update strategy (list Maxitems: 1)'
            upgrade_strategy: '- (Optional/Computed) RKE upgrade strategy (list maxitems:1)'
            upstream_nameservers: '- (Optional/Computed) DNS add-on upstream nameservers  (list)'
            url: '- (Optional/Computed) (string)'
            use_aci_anywhere_crd: '- (Optional) Whether to use ACI anywhere CRD (string)'
            use_aci_cni_priority_class: '- (Optional) Whether to use ACI CNI priority class (string)'
            use_cluster_role: '- (Optional) Whether to use cluster role (string)'
            use_host_netns_volume: '- (Optional) Whether to use host netns volume (string)'
            use_instance_metadata: '- (Optional/Computed) (bool)'
            use_ip_aliases: '- (Optional) Whether alias IPs will be used for pod IPs in the cluster. Default false (bool)'
            use_managed_identity_extension: '- (Optional/Computed) (bool)'
            use_octavia: '- (Optional/Computed) (bool)'
            use_opflex_server_volume: '- (Optional) Whether use Opflex server volume (string)'
            use_privileged_container: '- (Optional) Whether ACI containers should run as privileged (string)'
            user: '- (Required) User to connect bastion host (string)'
            user_data: '- (Optional/Computed) Pass user-data to the nodes to perform automated configuration tasks (string)'
            user_ocid: '- (Required) The OCID of a user who has access to the tenancy/compartment (string)'
            username: '- (Required/Sensitive) (string)'
            value: '- (Required) Rancher agent env var value (string)'
            values: '- (Optional) Key/values for answer (map)'
            variable: '- (Optional) Variable name (string)'
            vcn_compartment_id: '- (Optional) The OCID of the compartment (if different from compartment_id) in which to find the pre-existing virtual network set with vcn_name. (string)'
            vcn_name: '- (Optional) The name of an existing virtual network to use for the cluster creation. If set, you must also set load_balancer_subnet_name_1. A VCN and subnets will be created if none are specified. (string)'
            version: '- (Optional/Computed) RKE2 kubernetes version (string)'
            virtual_center: '- (Required) (List)'
            virtual_network: '- (Required) The name of an existing Azure Virtual Network. Composite of agent virtual network subnet ID (string)'
            virtual_network_resource_group: '- (Required) The resource group of an existing Azure Virtual Network. Composite of agent virtual network subnet ID (string)'
            vm_size: '- (Optional/computed) The AKS node pool orchestrator version (string)'
            vm_type: '- (Optional/Computed) (string)'
            vmm_controller: '- (Optional) VMM controller configuration (string)'
            vmm_domain: '- (Optional) VMM domain configuration (string)'
            vnet_name: '- (Optional/Computed) (string)'
            vnet_resource_group: '- (Optional/Computed) (string)'
            vpc: '- (Optional/Computed) (string)'
            vrf_name: '- (Required) VRF name (string)'
            vrf_tenant: '- (Required) VRF tenant (string)'
            vsphere_cloud_provider: '- (Optional/Computed) RKE Vsphere Cloud Provider config for Cloud Provider rke-vsphere-cloud-provider Extra argument name is required on virtual_center configuration. (list maxitems:1)'
            weave_network_provider: '- (Optional/Computed) Weave provider config for RKE network (list maxitems:1)'
            win_prefix_path: '- (Optional/Computed) Prefix to customize Kubernetes path for windows (string)'
            windows_node_command: '- (Computed) Node command to execute in windows nodes for custom k8s cluster (string)'
            windows_prefered_cluster: '- (Optional) Windows preferred cluster. Default: false (bool)'
            worker_concurrency: '- (Optional) Worker concurrency. Default: 1 (int)'
            worker_node_ingress_cidr: '- (Optional) Additional CIDR from which to allow ingress to worker nodes (string)'
            workspace: '- (Required) (list maxitems:1)'
            zone: '- (Optional/Computed) (string)'
        importStatements: []
    rancher2_cluster_driver:
        subCategory: ""
        name: rancher2_cluster_driver
        title: rancher2_cluster_driver Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "active": true,
                  "builtin": false,
                  "checksum": "0x0",
                  "description": "Foo description",
                  "external_id": "foo_external",
                  "name": "foo",
                  "ui_url": "local://ui",
                  "url": "local://",
                  "whitelist_domains": [
                    "*.foo.com"
                  ]
                }
        argumentDocs:
            active: '- (Required) Specify the cluster driver state (bool)'
            actual_url: '- (Optional) Actual url of the cluster driver (string)'
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            builtin: '- (Required) Specify whether the cluster driver is an internal cluster driver or not (bool)'
            checksum: '- (Optional) Verify that the downloaded driver matches the expected checksum (string)'
            create: '- (Default 10 minutes) Used for creating cluster drivers.'
            delete: '- (Default 10 minutes) Used for deleting cluster drivers.'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Required) Name of the cluster driver (string)'
            ui_url: '- (Optional) The URL to load for customized Add Clusters screen for this driver (string)'
            update: '- (Default 10 minutes) Used for cluster driver modifications.'
            url: '- (Required) The URL to download the machine driver binary for 64-bit Linux (string)'
            whitelist_domains: '- (Optional) Domains to whitelist for the ui (list)'
        importStatements: []
    rancher2_cluster_role_template_binding:
        subCategory: ""
        name: rancher2_cluster_role_template_binding
        title: rancher2_cluster_role_template_binding Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "cluster_id",
                  "name": "foo",
                  "role_template_id": "role_template_id",
                  "user_id": "user_id"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for cluster role template binding (map)'
            cluster_id: '- (Required/ForceNew) The cluster id where bind cluster role template binding (string)'
            create: '- (Default 10 minutes) Used for creating cluster role template bindings.'
            delete: '- (Default 10 minutes) Used for deleting cluster role template bindings.'
            group_id: '- (Optional/Computed/ForceNew) The group ID to assign cluster role template binding (string)'
            group_principal_id: '- (Optional/Computed/ForceNew) The group_principal ID to assign cluster role template binding (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for cluster role template binding (map)'
            name: '- (Required/ForceNew) The name of the cluster role template binding (string)'
            role_template_id: '- (Required/ForceNew) The role template id from create cluster role template binding (string)'
            update: '- (Default 10 minutes) Used for cluster role template binding modifications.'
            user_id: '- (Optional/Computed/ForceNew) The user ID to assign cluster role template binding (string)'
            user_principal_id: '- (Optional/Computed/ForceNew) The user_principal ID to assign cluster role template binding (string)'
        importStatements: []
    rancher2_cluster_sync:
        subCategory: ""
        name: rancher2_cluster_sync
        title: rancher2_cluster_sync Resource
        examples:
            - name: foo-custom
              manifest: |-
                {
                  "cluster_id": "${rancher2_cluster.foo-custom.id}",
                  "node_pool_ids": [
                    "${rancher2_node_pool.foo.id}"
                  ]
                }
              references:
                cluster_id: rancher2_cluster.foo-custom.id
              dependencies:
                rancher2_cluster.foo-custom: |-
                    {
                      "description": "Foo rancher2 custom cluster",
                      "name": "foo-custom",
                      "rke_config": [
                        {
                          "network": [
                            {
                              "plugin": "canal"
                            }
                          ]
                        }
                      ]
                    }
                rancher2_node_pool.foo: |-
                    {
                      "cluster_id": "${rancher2_cluster.foo-custom.id}",
                      "control_plane": true,
                      "etcd": true,
                      "hostname_prefix": "foo-cluster-0",
                      "name": "foo",
                      "node_template_id": "${rancher2_node_template.foo.id}",
                      "quantity": 3,
                      "worker": true
                    }
                rancher2_node_template.foo: |-
                    {
                      "amazonec2_config": [
                        {
                          "access_key": "AWS_ACCESS_KEY",
                          "ami": "AMI_ID",
                          "region": "REGION",
                          "secret_key": "AWS_SECRET_KEY",
                          "security_group": [
                            "AWS_SECURITY_GROUP"
                          ],
                          "subnet_id": "SUBNET_ID",
                          "vpc_id": "VPC_ID",
                          "zone": "ZONE"
                        }
                      ],
                      "description": "foo test",
                      "name": "foo"
                    }
                rancher2_project.foo: |-
                    {
                      "cluster_id": "${rancher2_cluster_sync.foo-custom.id}",
                      "container_resource_limit": [
                        {
                          "limits_cpu": "20m",
                          "limits_memory": "20Mi",
                          "requests_cpu": "1m",
                          "requests_memory": "1Mi"
                        }
                      ],
                      "description": "Terraform namespace acceptance test",
                      "name": "foo",
                      "resource_quota": [
                        {
                          "namespace_default_limit": [
                            {
                              "limits_cpu": "500m",
                              "limits_memory": "500Mi",
                              "requests_storage": "1Gi"
                            }
                          ],
                          "project_limit": [
                            {
                              "limits_cpu": "2000m",
                              "limits_memory": "2000Mi",
                              "requests_storage": "2Gi"
                            }
                          ]
                        }
                      ]
                    }
        argumentDocs:
            annotations: '- (Computed) Annotations of the node (map).'
            capacity: '- (Computed) The total resources of a node (map).'
            cluster_id: '- (Required/ForceNew) The cluster ID that is syncing (string)'
            create: '- (Default 30 minutes) Used for creating cluster sync.'
            default_project_id: '- (Computed) Default project ID for the cluster sync (string)'
            delete: '- (Default 30 minutes) Used for deleting cluster sync.'
            external_ip_address: '- (Computed)  The external IP address of the node (string).'
            hostname: '- (Computed) The hostname of the node (string).'
            id: '- (Computed) The ID of the resource. Same as cluster_id (string)'
            ip_address: '- (Computed) The private IP address of the node (string).'
            kube_config: '- (Computed/Sensitive) Kube Config generated for the cluster sync (string)'
            labels: '- (Computed) Labels of the node (map).'
            name: '- (Computed) The name of the node (string).'
            node_pool_id: '- (Computed) The Node Pool ID of the node (string).'
            node_pool_ids: '- (Optional) The node pool IDs used by the cluster id (list)'
            node_template_id: '- (Computed) The Node Template ID of the node (string).'
            nodes: '- (Computed) The cluster nodes (list).'
            provider_id: '- (Computed) The Provider ID of the node (string).'
            requested_hostname: '- (Computed) The requested hostname (string).'
            roles: '- (Computed) Roles of the node. controlplane, etcd and worker. (list)'
            ssh_user: '- (Computed/Sensitive) The user to connect to the node (string).'
            state_confirm: '- (Optional) Wait until active status is confirmed a number of times (wait interval of 5s). Default: 1 means no confirmation (int)'
            system_info: '- (Computed) General information about the node, such as kernel version, kubelet and kube-proxy version, Docker version (if used), and OS name.'
            system_info.container_runtime_version: '- (Computed) ContainerRuntime Version reported by the node through runtime remote API (e.g. docker://1.5.0).'
            system_info.kernel_version: '- (Computed) Kernel Version reported by the node from ''uname -r'' (e.g. 3.16.0-0.bpo.4-amd64).'
            system_info.kube_proxy_version: '- (Computed) KubeProxy Version reported by the node.'
            system_info.kubelet_version: '- (Computed) Kubelet Version reported by the node.'
            system_info.operating_system: '- (Computed) The Operating System reported by the node.'
            system_project_id: '- (Computed) System project ID for the cluster sync (string)'
            update: '- (Default 30 minutes) Used for cluster sync modifications.'
            wait_catalogs: '- (Optional) Wait until all catalogs are downloaded and active. Default: false (bool)'
        importStatements: []
    rancher2_cluster_template:
        subCategory: ""
        name: rancher2_cluster_template
        title: rancher2_cluster_template Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "Terraform cluster template foo",
                  "members": [
                    {
                      "access_type": "owner",
                      "user_principal_id": "local://user-XXXXX"
                    }
                  ],
                  "name": "foo",
                  "template_revisions": [
                    {
                      "cluster_config": [
                        {
                          "rke_config": [
                            {
                              "network": [
                                {
                                  "plugin": "canal"
                                }
                              ],
                              "services": [
                                {
                                  "etcd": [
                                    {
                                      "creation": "6h",
                                      "retention": "24h"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "default": true,
                      "name": "V1"
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "description": "Terraform cluster template foo",
                  "members": [
                    {
                      "access_type": "owner",
                      "user_principal_id": "local://user-XXXXX"
                    }
                  ],
                  "name": "foo",
                  "template_revisions": [
                    {
                      "cluster_config": [
                        {
                          "rke_config": [
                            {
                              "network": [
                                {
                                  "plugin": "canal"
                                }
                              ],
                              "services": [
                                {
                                  "etcd": [
                                    {
                                      "creation": "6h",
                                      "retention": "24h"
                                    }
                                  ]
                                }
                              ],
                              "upgrade_strategy": [
                                {
                                  "drain": true,
                                  "max_unavailable_worker": "20%"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "default": true,
                      "name": "V1"
                    }
                  ]
                }
        argumentDocs:
            access_type: '- (Optional) Member access type. Valid values: ["read-only" | "owner"] (string)'
            annotations: '- (Optional/Computed) Annotations for the cluster template (map)'
            cluster_auth_endpoint: '- (Optional/Computed) Local cluster auth endpoint (list maxitems: 1)'
            cluster_config: '- (Required) Cluster configuration (list maxitem: 1)'
            cluster_template_id: '- (Computed) Cluster template ID (string)'
            create: '- (Default 10 minutes) Used for creating cluster templates.'
            decription: '- (Optional) The cluster template description (string)'
            default: '- (Optional) Default cluster template revision. Default false (bool)'
            default_cluster_role_for_project_members: '- (Optional/Computed) Default cluster role for project members (string)'
            default_revision_id: '- (Computed) Default cluster template revision ID (string)'
            delete: '- (Default 10 minutes) Used for deleting cluster templates.'
            desired_agent_image: '- (Optional/Computed) Desired agent image (string)'
            desired_auth_image: '- (Optional/Computed) Desired auth image (string)'
            docker_root_dir: '- (Optional/Computed) Desired auth image (string)'
            enable_network_policy: '- (Optional) Enable project network isolation. Default: false (bool)'
            enabled: '- (Optional) Enable cluster template revision. Default true (bool)'
            group_principal_id: '- (Optional) Member group principal id (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for the cluster template (map)'
            members: '- (Optional) Cluster template members (list)'
            name: '- (Required) The cluster template name (string)'
            questions: '- (Optional) Cluster template questions (list)'
            required: '- (Optional) Required variable. Default false (bool)'
            rke_config: '- (Required) Rancher Kubernetes Engine Config (list maxitems: 1)'
            template_revisions: '- (Optional/Computed) Cluster template revisions (list)'
            type: '- (Optional) Variable type. boolean, int and string are allowed. Default string (string)'
            update: '- (Default 10 minutes) Used for cluster template modifications.'
            user_principal_id: '- (Optional) Member user principal id (string)'
            variable: '- (Optional) Variable name (string)'
            windows_prefered_cluster: '- (Optional) Windows prefered cluster. Default: false (bool)'
        importStatements: []
    rancher2_cluster_v2:
        subCategory: ""
        name: rancher2_cluster_v2
        title: rancher2_cluster_v2 Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "kubernetes_version": "rke2-/k3s-version",
                  "name": "foo"
                }
            - name: foo
              manifest: |-
                {
                  "enable_network_policy": false,
                  "kubernetes_version": "rke2/k3s-version",
                  "name": "foo",
                  "rke_config": [
                    {
                      "machine_pools": [
                        {
                          "cloud_credential_secret_name": "${rancher2_cloud_credential.foo.id}",
                          "control_plane_role": true,
                          "drain_before_delete": true,
                          "etcd_role": true,
                          "machine_config": [
                            {
                              "kind": "${rancher2_machine_config_v2.foo.kind}",
                              "name": "${rancher2_machine_config_v2.foo.name}"
                            }
                          ],
                          "name": "pool1",
                          "quantity": 1,
                          "worker_role": false
                        },
                        {
                          "cloud_credential_secret_name": "${rancher2_cloud_credential.foo.id}",
                          "control_plane_role": false,
                          "drain_before_delete": true,
                          "etcd_role": false,
                          "machine_config": [
                            {
                              "kind": "${rancher2_machine_config_v2.foo.kind}",
                              "name": "${rancher2_machine_config_v2.foo.name}"
                            }
                          ],
                          "name": "pool2",
                          "quantity": 2,
                          "worker_role": true
                        }
                      ]
                    }
                  ]
                }
              references:
                rke_config.machine_pools.cloud_credential_secret_name: rancher2_cloud_credential.foo.id
                rke_config.machine_pools.machine_config.kind: rancher2_machine_config_v2.foo.kind
                rke_config.machine_pools.machine_config.name: rancher2_machine_config_v2.foo.name
            - name: foo-k3s
              manifest: |-
                {
                  "enable_network_policy": false,
                  "kubernetes_version": "rke2/k3s-version",
                  "name": "foo-k3s",
                  "rke_config": [
                    {
                      "machine_pools": [
                        {
                          "cloud_credential_secret_name": "${rancher2_cloud_credential.foo.id}",
                          "control_plane_role": true,
                          "etcd_role": true,
                          "machine_config": [
                            {
                              "kind": "${rancher2_machine_config_v2.foo.kind}",
                              "name": "${rancher2_machine_config_v2.foo.name}"
                            }
                          ],
                          "name": "pool",
                          "quantity": 1,
                          "worker_role": true
                        }
                      ]
                    }
                  ]
                }
              references:
                rke_config.machine_pools.cloud_credential_secret_name: rancher2_cloud_credential.foo.id
                rke_config.machine_pools.machine_config.kind: rancher2_machine_config_v2.foo.kind
                rke_config.machine_pools.machine_config.name: rancher2_machine_config_v2.foo.name
            - name: foo-harvester-v2
              manifest: |-
                {
                  "kubernetes_version": "rke2/k3s-version",
                  "name": "foo-harvester-v2",
                  "rke_config": [
                    {
                      "etcd": [
                        {
                          "snapshot_retention": 5,
                          "snapshot_schedule_cron": "0 */5 * * *"
                        }
                      ],
                      "machine_global_config": "cni: \"calico\"\ndisable-kube-proxy: false\netcd-expose-metrics: false\n",
                      "machine_pools": [
                        {
                          "cloud_credential_secret_name": "${rancher2_cloud_credential.foo-harvester.id}",
                          "control_plane_role": true,
                          "etcd_role": true,
                          "machine_config": [
                            {
                              "kind": "${rancher2_machine_config_v2.foo-harvester-v2.kind}",
                              "name": "${rancher2_machine_config_v2.foo-harvester-v2.name}"
                            }
                          ],
                          "name": "pool1",
                          "quantity": 1,
                          "worker_role": true
                        }
                      ],
                      "machine_selector_config": [
                        {
                          "config": {
                            "cloud-provider-name": ""
                          }
                        }
                      ],
                      "upgrade_strategy": [
                        {
                          "control_plane_concurrency": "10%",
                          "worker_concurrency": "10%"
                        }
                      ]
                    }
                  ]
                }
              references:
                rke_config.machine_pools.cloud_credential_secret_name: rancher2_cloud_credential.foo-harvester.id
                rke_config.machine_pools.machine_config.kind: rancher2_machine_config_v2.foo-harvester-v2.kind
                rke_config.machine_pools.machine_config.name: rancher2_machine_config_v2.foo-harvester-v2.name
              dependencies:
                rancher2_cloud_credential.foo-harvester: |-
                    {
                      "harvester_credential_config": [
                        {
                          "cluster_id": "${data.rancher2_cluster_v2.foo-harvester.cluster_v1_id}",
                          "cluster_type": "imported",
                          "kubeconfig_content": "${data.rancher2_cluster_v2.foo-harvester.kube_config}"
                        }
                      ],
                      "name": "foo-harvester"
                    }
                rancher2_machine_config_v2.foo-harvester-v2: |-
                    {
                      "generate_name": "foo-harvester-v2",
                      "harvester_config": [
                        {
                          "cpu_count": "2",
                          "disk_info": "    {\n        \"disks\": [{\n            \"imageName\": \"harvester-public/image-57hzg\",\n            \"size\": 40,\n            \"bootOrder\": 1\n        }]\n    }\n",
                          "memory_size": "4",
                          "network_info": "    {\n        \"interfaces\": [{\n            \"networkName\": \"harvester-public/vlan1\"\n        }]\n    }\n",
                          "ssh_user": "ubuntu",
                          "user_data": "    package_update: true\n    packages:\n      - qemu-guest-agent\n      - iptables\n    runcmd:\n      - - systemctl\n        - enable\n        - '--now'\n        - qemu-guest-agent.service\n",
                          "vm_namespace": "default"
                        }
                      ]
                    }
            - name: foo-harvester-v2-cloud-provider
              manifest: |-
                {
                  "kubernetes_version": "rke2/k3s-version",
                  "name": "foo-harvester-v2-cloud-provider",
                  "rke_config": [
                    {
                      "chart_values": "harvester-cloud-provider:\n  clusterName: foo-harvester-v2-cloud-provider\n  cloudConfigPath: /var/lib/rancher/rke2/etc/config-files/cloud-provider-config\n",
                      "etcd": [
                        {
                          "snapshot_retention": 5,
                          "snapshot_schedule_cron": "0 */5 * * *"
                        }
                      ],
                      "machine_global_config": "cni: \"calico\"\ndisable-kube-proxy: false\netcd-expose-metrics: false\n",
                      "machine_pools": [
                        {
                          "cloud_credential_secret_name": "${rancher2_cloud_credential.foo-harvester.id}",
                          "control_plane_role": true,
                          "etcd_role": true,
                          "machine_config": [
                            {
                              "kind": "${rancher2_machine_config_v2.foo-harvester-v2-cloud-provider.kind}",
                              "name": "${rancher2_machine_config_v2.foo-harvester-v2-cloud-provider.name}"
                            }
                          ],
                          "name": "pool1",
                          "quantity": 1,
                          "worker_role": true
                        }
                      ],
                      "machine_selector_config": [
                        {
                          "config": {
                            "cloud-provider-config": "${file(\"${path.module}/foo-harvester-v2-cloud-provider-kubeconfig\")}",
                            "cloud-provider-name": "harvester"
                          }
                        }
                      ],
                      "upgrade_strategy": [
                        {
                          "control_plane_concurrency": "10%",
                          "worker_concurrency": "10%"
                        }
                      ]
                    }
                  ]
                }
              references:
                rke_config.machine_pools.cloud_credential_secret_name: rancher2_cloud_credential.foo-harvester.id
                rke_config.machine_pools.machine_config.kind: rancher2_machine_config_v2.foo-harvester-v2-cloud-provider.kind
                rke_config.machine_pools.machine_config.name: rancher2_machine_config_v2.foo-harvester-v2-cloud-provider.name
              dependencies:
                rancher2_cloud_credential.foo-harvester: |-
                    {
                      "harvester_credential_config": [
                        {
                          "cluster_id": "${data.rancher2_cluster_v2.foo-harvester.cluster_v1_id}",
                          "cluster_type": "imported",
                          "kubeconfig_content": "${data.rancher2_cluster_v2.foo-harvester.kube_config}"
                        }
                      ],
                      "name": "foo-harvester"
                    }
                rancher2_machine_config_v2.foo-harvester-v2-cloud-provider: |-
                    {
                      "generate_name": "foo-harvester-v2-cloud-provider",
                      "harvester_config": [
                        {
                          "cpu_count": "2",
                          "disk_info": "    {\n        \"disks\": [{\n            \"imageName\": \"harvester-public/image-57hzg\",\n            \"size\": 40,\n            \"bootOrder\": 1\n        }]\n    }\n",
                          "memory_size": "4",
                          "network_info": "    {\n        \"interfaces\": [{\n            \"networkName\": \"harvester-public/vlan1\"\n        }]\n    }\n",
                          "ssh_user": "ubuntu",
                          "user_data": "    package_update: true\n    packages:\n      - qemu-guest-agent\n      - iptables\n    runcmd:\n      - - systemctl\n        - enable\n        - '--now'\n        - qemu-guest-agent.service\n",
                          "vm_namespace": "default"
                        }
                      ]
                    }
            - name: foo
              manifest: |-
                {
                  "agent_env_vars": [
                    {
                      "name": "foo1",
                      "value": "boo1"
                    },
                    {
                      "name": "foo2",
                      "value": "boo2"
                    }
                  ],
                  "kubernetes_version": "rke2/k3s-version",
                  "name": "cluster-with-agent-env-vars",
                  "rke_config": [
                    {}
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "cluster_agent_deployment_customization": [
                    {
                      "append_tolerations": [
                        {
                          "effect": "NoSchedule",
                          "key": "tolerate/control-plane",
                          "value": "true"
                        },
                        {
                          "effect": "NoSchedule",
                          "key": "tolerate/etcd",
                          "value": "true"
                        }
                      ],
                      "override_affinity": "{\n  \"nodeAffinity\": {\n    \"requiredDuringSchedulingIgnoredDuringExecution\": {\n      \"nodeSelectorTerms\": [{\n        \"matchExpressions\": [{\n          \"key\": \"not.this/nodepool\",\n          \"operator\": \"In\",\n          \"values\": [\n            \"true\"\n          ]\n        }]\n      }]\n    }\n  }\n}\n",
                      "override_resource_requirements": [
                        {
                          "cpu_limit": "800m",
                          "cpu_request": "500m",
                          "memory_limit": "800Mi",
                          "memory_request": "500Mi"
                        }
                      ]
                    }
                  ],
                  "fleet_agent_deployment_customization": [
                    {}
                  ],
                  "kubernetes_version": "rke2/k3s-version",
                  "name": "foo",
                  "rke_config": [
                    {
                      "machine_pools": [
                        {}
                      ]
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "default_pod_security_admission_configuration_template_name": "rancher-restricted",
                  "enable_network_policy": false,
                  "kubernetes_version": "rke2/k3s-version",
                  "name": "foo",
                  "rke_config": [
                    {
                      "machine_global_config": "${yamlencode({\n      cni = \"calico\"\n      disable-kube-proxy = false\n      etcd-expose-metrics = false\n      kube-apiserver-arg = local.kube_apiserver_arg\n    })}",
                      "machine_pools": [
                        {}
                      ]
                    }
                  ]
                }
            - name: foo_cluster_v2
              manifest: |-
                {
                  "kubernetes_version": "rke2/k3s-version",
                  "name": "cluster-with-custom-registry",
                  "rke_config": [
                    {
                      "machine_pools": [
                        {}
                      ],
                      "machine_selector_config": [
                        {
                          "config": {
                            "system-default-registry": "custom-registry-hostname"
                          }
                        }
                      ],
                      "registries": [
                        {
                          "configs": [
                            {
                              "auth_config_secret_name": "\u003cauth-config-secret-name\u003e",
                              "ca_bundle": "",
                              "hostname": "custom-registry-hostname",
                              "insecure": "\u003ctls-insecure-bool\u003e",
                              "tls_secret_name": ""
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "enable_network_policy": false,
                  "kubernetes_version": "rke2/k3s-version",
                  "name": "foo",
                  "rke_config": [
                    {
                      "machine_pools": [
                        {}
                      ],
                      "machine_selector_files": [
                        {
                          "file_sources": [
                            {
                              "secret": [
                                {
                                  "default_permissions": "644",
                                  "items": [
                                    {
                                      "key": "audit-policy",
                                      "path": "/etc/rancher/rke2/custom/policy-v1.yaml",
                                      "permissions": "666"
                                    }
                                  ],
                                  "name": "config-file-v1"
                                }
                              ]
                            }
                          ],
                          "machine_label_selector": [
                            {
                              "match_expressions": [
                                {
                                  "key": "name",
                                  "operator": "In",
                                  "values": [
                                    "a",
                                    "b"
                                  ]
                                },
                                {
                                  "key": "department",
                                  "operator": "In",
                                  "values": [
                                    "a",
                                    "b"
                                  ]
                                }
                              ],
                              "match_labels": {
                                "rke.cattle.io/control-plane-role": "true",
                                "rke.cattle.io/etcd-role": "true"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "enable_network_policy": false,
                  "kubernetes_version": "rke2-version",
                  "name": "foo",
                  "rke_config": [
                    {
                      "machine_global_config": "disable-kube-proxy: false\netcd-expose-metrics: false\nkubelet-arg:\n  - xxx=xxx\nkube-proxy-arg:\n  - xxx=xxx\nkube-apiserver-arg:\n  - xxx=xxx\nkube-scheduler-arg:\n  - xxx=xxx\nkube-cloud-controller-manager-arg:\n  - xxx=xxx\n",
                      "machine_pools": [
                        {}
                      ],
                      "machine_selector_config": [
                        {
                          "config": "        kubelet-arg:\n          - cloud-provider-name=external\n",
                          "machine_label_selector": [
                            {
                              "match_expressions": [
                                {
                                  "key": "name",
                                  "operator": "In",
                                  "values": [
                                    "a",
                                    "b"
                                  ]
                                },
                                {
                                  "key": "department",
                                  "operator": "In",
                                  "values": [
                                    "a",
                                    "b"
                                  ]
                                }
                              ],
                              "match_labels": {
                                "rke.cattle.io/control-plane-role": "true",
                                "rke.cattle.io/etcd-role": "true"
                              }
                            }
                          ]
                        },
                        {
                          "config": "        kube-proxy-arg:\n          - log_file_max_size=1800\n"
                        }
                      ]
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "kubernetes_version": "rke2/k3s-version",
                  "name": "foo",
                  "rke_config": [
                    {
                      "additional_manifest": "apiVersion: v1\nkind: Namespace\nmetadata:\n  name: testing-namespace-1\n---\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: testing-namespace-2\n",
                      "machine_pools": [
                        {}
                      ]
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "kubernetes_version": "rke2/k3s-version",
                  "machine_pools": [
                    {}
                  ],
                  "name": "foo",
                  "rke_config": [
                    {
                      "etcd": [
                        {
                          "s3_config": [
                            {
                              "bucket": "backups",
                              "cloud_credential_name": "${rancher2_cloud_credential.credentials.id}",
                              "endpoint": "https://minio.host:9000"
                            }
                          ],
                          "snapshot_retention": 10,
                          "snapshot_schedule_cron": "0 */12 * * *"
                        }
                      ]
                    }
                  ]
                }
              references:
                rke_config.etcd.s3_config.cloud_credential_name: rancher2_cloud_credential.credentials.id
              dependencies:
                rancher2_cloud_credential.credentials: |-
                    {
                      "name": "rancher-creds",
                      "s3_credential_config": [
                        {
                          "access_key": "\u003cACCESS_KEY\u003e",
                          "secret_key": "\u003cSECRET_KEY\u003e"
                        }
                      ]
                    }
            - name: foo
              manifest: |-
                {
                  "kubernetes_version": "k3s-version",
                  "machine_pools": [
                    {}
                  ],
                  "name": "foo",
                  "rke_config": [
                    {
                      "machine_global_config": "disable:\n  - coredns\n  - servicelb\n  - traefik\n  - local-storage\n  - metrics-server\n"
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "kubernetes_version": "rke2-version",
                  "machine_pools": [
                    {}
                  ],
                  "name": "foo",
                  "rke_config": [
                    {
                      "machine_global_config": "disable:\n  - rke2-coredns\n  - rke2-ingress-nginx\n  - rke2-metrics-server\n  - metrics-server\n"
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "kubernetes_version": "rke2/k3s-version",
                  "machine_pools": [
                    {}
                  ],
                  "name": "foo",
                  "rke_config": [
                    {
                      "machine_global_config": "tls-san: [\"example-website.com\", \"100.100.100.100\", \"2002:db8:3333:4444:5555:6666:7777:8888\"]\n"
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "kubernetes_version": "rke2/k3s-version",
                  "machine_pools": [
                    {}
                  ],
                  "name": "foo",
                  "rke_config": [
                    {
                      "machine_global_config": "cluster-cidr: \"0.42.0.0/16\"\nservice-cidr: \"0.42.0.0/16\"\n"
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "enable_network_policy": false,
                  "kubernetes_version": "rke2-version",
                  "name": "foo",
                  "rke_config": [
                    {
                      "chart_values": "rke2-calico:\n  calicoctl:\n    image: rancher/mirrored-calico-ctl\n    tag: v3.19.2\n  certs:\n    node:\n      cert: null\n      commonName: null\n      key: null\n    typha:\n      caBundle: null\n      cert: null\n      commonName: null\n      key: null\n  felixConfiguration:\n    featureDetectOverride: ChecksumOffloadBroken=true\n  global:\n    systemDefaultRegistry: \"\"\n  imagePullSecrets: {}\n  installation:\n    calicoNetwork:\n      bgp: Disabled\n      ipPools:\n      - blockSize: 24\n        cidr: 10.42.0.0/16\n        encapsulation: VXLAN\n        natOutgoing: Enabled\n    controlPlaneTolerations:\n    - effect: NoSchedule\n      key: node-role.kubernetes.io/control-plane\n      operator: Exists\n    - effect: NoExecute\n      key: node-role.kubernetes.io/etcd\n      operator: Exists\n    enabled: true\n    imagePath: rancher\n    imagePrefix: mirrored-calico-\n    kubernetesProvider: \"\"\n  ipamConfig:\n    autoAllocateBlocks: true\n    strictAffinity: true\n  tigeraOperator:\n    image: rancher/mirrored-calico-operator\n    registry: docker.io\n    version: v1.17.6\n",
                      "machine_pools": [
                        {}
                      ]
                    }
                  ]
                }
        argumentDocs:
            additional_manifest: '- (Optional, string, must be in YAML format) The value of the additional manifest is delivered to the path /var/lib/rancher/rke2/server/manifests/rancher/addons.yaml or /var/lib/rancher/k3s/server/manifests/rancher/addons.yaml on the control plane nodes.'
            agent_env_vars: '- (Optional, list) Agent env vars is a list of additional environment variables to be appended to the cattle-cluster-agent and fleet-agent deployment, and the plan for the system upgrade controller to upgrade nodes.'
            annotations: '- (Optional/computed, map) Annotations for the Cluster.'
            api_version: '- (Optional, string) Api version of the machine_config.'
            append_tolerations: '- (Optional, list) A list of tolerations to be appended to the default tolerations.'
            auth_config_secret_name: '- (Optional, string) Name of the secret that contains two keys with base64 encoded values: the username and password for the specified custom registry. No secret is required if the system-default-registry is not authenticated.'
            bucket: '- (Required, string) Bucket name for S3 service.'
            ca_bundle: '- (Optional, string) Registry CA bundle.'
            ca_certs: '- (Optional, string) CA certs for the authorized cluster endpoint. It is only needed if there is a load balancer in front of the downstream cluster that is using an untrusted certificate. If you have a valid certificate, then nothing needs to be added to the CA Certificates field.'
            chart_values: '- (Optional, string, must be in YAML format) The value for the system charts installed by the distribution. For more information about how RKE2 or K3s manage packaged components, please refer to RKE2 documentation or K3s documentation.'
            cloud_credential_name: '- (Optional, string) ETCD snapshot S3 cloud credential name.'
            cloud_credential_secret_name: '- (Optional, string) Cloud credential secret name is the secret to be used when a cloud credential secret name is not specified at the machine pool level.'
            cluster_agent_deployment_customization: '- (Optional, list) Cluster agent deployment customization specifies the additional tolerations, new affinity rules, and new resource requirements on the cattle-cluster-agent deployment. This argument is available in Rancher v2.7.5 and above.'
            cluster_id: '- (Computed, string) Cluster ID.'
            cluster_registration_token: '- (Computed, sensitive, list, max length: 1) Cluster Registration Token generated for the cluster.'
            cluster_v1_id: '- (Computed, string) Cluster v1 id for cluster v2. (e.g. to be used with rancher2_sync).'
            command: '- (Computed, string) Command to execute in an imported k8s cluster.'
            config: '- (Optional, string, must be in YAML format) Config is the distribution-specify configuration to be applied to nodes that match the provided label selector. For more information, please refer to Rancher''s documentation for RKE2 Cluster Configuration or K3s Cluster Configuration'
            configmap: '- (Optional, list, max length: 1) Configmap represents a K8s configmap which is the source of files. It is mutually exclusive with secret.'
            configs: '- (Optional, list) Cluster V2 docker registries config.'
            control_plane_concurrency: '- (Optional, string) How many control plane nodes should be upgraded at a time, 0 is infinite. Percentages are also accepted.'
            control_plane_drain_options: '- (Optional, list, max length: 1) Controlplane nodes drain options.'
            control_plane_role: '- (Optional, bool) Machine pool control plane role?'
            cpu_limit: '- (Optional, string) The maximum CPU limit for agent.'
            cpu_request: '- (Optional, string) The minimum CPU required for agent.'
            create: '- (Default 30 minutes) Used for creating clusters v2.'
            default_cluster_role_for_project_members: '- (Optional, string) Default cluster role for project members.'
            default_permissions: '- (Optional, string) The numeric representation of the default file permissions for all files defined under the items.'
            default_pod_security_admission_configuration_template_name: '- (Optional, string) The name of the pre-defined pod security admission configuration template to be applied to the cluster. Rancher admins (or those with the right permissions) can create, manage, and edit those templates. For more information, please refer to Rancher Documentation. The argument is available in Rancher v2.7.2 and above.'
            delete: '- (Default 30 minutes) Used for deleting clusters v2.'
            delete_empty_dir_data: '- (Optional, bool, default: false) if delete_empty_dir_data is set to true, continue draining even if there are pods using emptyDir (local storage).'
            disable_eviction: '- (Optional, bool, default: false) If disable_eviction is set to true, force drain to use delete rather than evict.'
            disable_snapshots: '- (Optional, bool, default: false) Disable ETCD snapshots.'
            drain_before_delete: '- (Optional, bool) Machine Pool Drain Before Delete?'
            dynamic: '- (Optional, boolean, default: true) If true, the file is ignored when determining whether the node should be drained before updating the node plan.'
            effect: '- (Optional, string) The toleration effect. Default: \"NoSchedule\".'
            enable_network_policy: '- (Optional, bool, default: false) Enable k8s network policy on the cluster.'
            enabled: '- (Optional, bool, default: false) Enable the authorized cluster endpoint.'
            endpoint: '- (Required, string) ETCD snapshot S3 endpoint.'
            endpoint_ca: '- (Optional, string) ETCD snapshot S3 endpoint CA.'
            endpoints: '- (Optional, list) Registry mirror endpoints.'
            etcd: '- (Optional/computed, list, max length: 1) Etcd configures the behavior of the automatic etcd snapshot feature.'
            etcd_role: '- (Optional, bool) Machine pool etcd role?'
            etcd_snapshot_create: '(Optional, list, max length: 1) Cluster V2 etcd snapshot create.'
            etcd_snapshot_restore: '(Optional, list, max length: 1) Cluster V2 etcd snapshot restore.'
            file_sources: '- (Optional, list) File sources represents the source of the files. Multiple files can be delivered to nodes that match the provided label selector.'
            fleet_agent_deployment_customization: '- (Optional, list) Fleet agent deployment customization specifies the additional tolerations, new affinity rules, and new resource requirements on the fleet-agent deployment. The argument is available in Rancher v2.7.5 and above.'
            fleet_namespace: '- (Optional, ForceNew, string, default: fleet-default) Fleet namespace is the namespace where the cluster is to create in the local cluster. It is recommended to leave it as the default value.'
            folder: '- (Optional, string) ETCD snapshot S3 folder.'
            force: '- (Optional, bool, default: false) If force is set to true, drain nodes even if there are standalone pods that are not managed by a ReplicationController, Job, or DaemonSet. Drain will not proceed without force set to true if there are such pods.'
            fqdn: '- (Optional, string) FQDN for the authorized cluster endpoint. If one is entered, it should point to the downstream cluster.'
            generation: '- (Required, int) Desired certificate rotation generation.'
            grace_period: '- (Optional/computed, int) Time in seconds given to each pod to terminate gracefully. If negative, the default value specified in the pod will be used.'
            hash: '- (Optional, string) Hash is the base64 encoded value of the SHA256 checksum of the file''s content. If specified, it is used to validate the integrity of the file content.'
            hostname: '- (Required, string) Registry hostname.'
            id: '- (Computed, string) The ID of the resource.'
            ignore_daemon_sets: '- (Optional, bool, default: true) If ignore_daemon_sets is set to false, drain will not proceed if there are DaemonSet-managed pods.'
            ignore_errors: '- (Optional, bool, default: false) If ignore_errors is set to true,  errors that occurred between drain nodes in group are ignored.'
            insecure: '- (Optional, bool) Registry insecure connectivity.'
            insecure_command: '- (Computed, string) Insecure command to execute in an imported k8s cluster.'
            insecure_node_command: '- (Computed, string) Insecure node command to execute in an imported k8s cluster.'
            insecure_windows_node_command: '- (Computed, string) Insecure windows command to execute in an imported k8s cluster.'
            items: '- (Optional, list) Items is a list of configurations for files, such as where to retrieve the content from the source, where to put the file on nodes, and etc.'
            key: '- (Required, string) The toleration key.'
            kind: '- (Required, string) Machine config kind.'
            kube_config: '- (Computed/Sensitive) Kube Config generated for the cluster. Note: When the cluster has local_auth_endpoint enabled, the kube_config will not be available until the cluster is connected.'
            kubernetes_version: '- (Required, string) The RKE2 or K3s version for the cluster.'
            labels: '- (Optional/computed, map) Labels for the Cluster.'
            local_auth_endpoint: '- (Optional, list, max length: 1) Local auth endpoint configures the Authorized Cluster Endpoint (ACE) which can be used to directly access the Kubernetes API server, without requiring communication through Rancher. For more information, please refer to Rancher Documentation.'
            machine_config: '- (Required, list) Machine pool node config.'
            machine_global_config: '- (Optional, string, must be in YAML format) Machine global config specifies the distribution-specified server configuration applied to all nodes. For the full list of server configurations, please refer to RKE2 server configuration or K3s server configuration.'
            machine_label_selector: '- (Optional, list, max length: 1) Machine selector label is a label query over a set of resources. The result of match_labels and match_expressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.'
            machine_labels: '- (Optional, map) Labels for Machine pool nodes.'
            machine_pools: '- (Optional/computed, list) Cluster V2 machine pools.'
            machine_selector_config: '- (Optional/computed, list) Machine selector config is the same as machine_global_config except that a label selector can be specified with the configuration. The configuration will only be applied to nodes that match the provided label selector. The configuration from machine_selector_config takes precedence over the one from machine_global_config. This argument is available in Rancher v2.7.2 and later.'
            machine_selector_files: '- (Optional/computed, list) Machine selector files provide a means to deliver files to nodes so that the files can be in place before initiating RKE2/K3s server or agent processes. Please refer to Rancher documentation for RKE2 Cluster Configuration Reference and K3s Cluster Configuration Reference. This argument is available in Rancher v2.7.2 and later.'
            manifest_url: '- (Computed, string) K8s manifest url to execute with kubectl to import an existing k8s cluster.'
            match_expressions: '- (Optional, list) Match expressions is a list of label selector requirements. The requirements are ANDed.'
            match_labels: '- (Optional, map) Machine selector label is a map of {key,value} pairs, the requirements are ANDed.'
            max_surge: '- (Optional, string) Rolling update max surge.'
            max_unavailable: '- (Optional, string) Rolling update max unavailable.'
            max_unhealthy: '- (Optional, string) Max unhealthy nodes for automated replacement to be allowed.'
            memory_limit: '- (Optional, string) The maximum memory limit for agent.'
            memory_request: '- (Optional, string) The minimum memory required for agent.'
            mirrors: '- (Optional, list) Cluster V2 docker registries mirror.'
            name: '- (Required, forceNew, string) The name of the cluster.'
            node_command: '- (Computed, string) Node command to execute in Linux nodes for custom k8s cluster.'
            node_drain_timeout: '- (Optional, int) Seconds a machine has to drain before deletion.'
            node_startup_timeout_seconds: '- (Optional, int) Seconds a new node has to become active before it is replaced.'
            operator: '- (Optional, string) The toleration operator.'
            override_affinity: '- (Optional, string, JSON format) Override affinity overrides the global default affinity setting.'
            override_resource_requirements: '- (Optional, list) Override resource requirements overrides the default value for requests and/or limits.'
            path: '- (Required, string) Path is the absolute path to put the file in the target node.'
            paused: '- (Optional, bool) Machine pool paused?'
            permissions: '- (Optional, string) Permissions is the numeric representation of the file permission. It takes precedence over the default permissions at the outer level.'
            quantity: '- (Optional, int) Machine pool quantity.'
            region: '- (Optional, string) ETCD snapshot S3 region.'
            registries: '- (Optional, list, max length: 1) Docker registries from which the cluster pulls images.'
            resource_version: '- (Computed, string) Cluster''s k8s resource version.'
            restore_rke_config: (Optional, string) ETCD restore RKE config (set to none, all, or kubernetesVersion).
            rewrites: '- (Optional, map) Registry mirror rewrites.'
            rke_config: '- (Optional/computed, list, max length: 1) The RKE configuration for the cluster.'
            rolling_update: '- (Optional, list, max length: 1) Machine pool rolling update.'
            rotate_certificates: '(Optional, list, max length: 1) Cluster V2 certificate rotation.'
            s3_config: '- (Optional, list, max length: 1) Creation option for etcd service.'
            seconds: '- (Optional, int) The number of seconds a pod will stay bound to a node with a matching taint.'
            secret: '- (Optional, list, max length: 1) Secret represents a K8s secret which is the source of files. It is mutually exclusive with configmap.'
            services: '- (Optional, list of string) Service certificates to rotate with this generation.'
            skip_ssl_verify: '- (Optional, bool, default: false) Disable ETCD skip ssl verify.'
            skip_wait_for_delete_timeout_seconds: '- (Optional/computed, int) Skip waiting for the pods that have a DeletionTimeStamp > N seconds to be deleted. Seconds must be greater than 0 to skip. Such pods will be force deleted.'
            snapshot_retention: '- (Optional, int) ETCD snapshot retention.'
            snapshot_schedule_cron: '- (Optional, string) ETCD snapshot schedule cron (e.g \"0 */5 * * *\").'
            taints: '- (Optional, list) Machine pool taints.'
            timeout: '- (Optional/computed, int) Time to wait (in seconds) before giving up for one try.'
            tls_secret_name: '- (Optional, sensitive, string) Registry TLS secret name. TLS is a pair of Cert/Key.'
            token: '- (Computed, string) Token for cluster registration token object.'
            unhealthy_node_timeout_seconds: '- (Optional, int) Seconds an unhealthy node has to become active before it is replaced.'
            unhealthy_range: '- (Optional, string) Range of unhealthy nodes for automated replacement to be allowed.'
            update: '- (Default 30 minutes) Used for cluster v2 modifications.'
            upgrade_strategy: '- (Optional, list, max length: 1) Cluster upgrade strategy.'
            value: '- (Required, string) Rancher agent env var value.'
            values: '- (Optional, string list) Values is a list of string values.'
            windows_node_command: '- (Computed, string) Node command to execute in Windows nodes for custom k8s cluster.'
            worker_concurrency: '- (Optional, string) How many worker nodes should be upgraded at a time. Percentages are also accepted.'
            worker_drain_options: '- (Optional, list, max length: 1) Worker nodes drain options.'
            worker_role: '- (Optional, bool) Machine pool worker role?'
        importStatements: []
    rancher2_config_map_v2:
        subCategory: ""
        name: rancher2_config_map_v2
        title: rancher2_config_map_v2 Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": " CLUSTER_ID",
                  "data": {
                    "mydata1": "data1",
                    "mydata2": "data2",
                    "mydata3": "data3"
                  },
                  "name": "foo"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for the configMap v2 (map)'
            cluster_id: '- (Required/ForceNew) The cluster id of the configMap V2 (string)'
            create: '- (Default 10 minutes) Used for creating v2 configMaps.'
            data: '- (Required) The data of the configMap v2 (map)'
            delete: '- (Default 10 minutes) Used for deleting v2 configMaps.'
            id: '- (Computed) The ID of the resource (string)'
            immutable: '- (Optional) If set to true, any configMap update will remove and recreate the configMap. This is a beta field enabled by k8s ImmutableEphemeralVolumes feature gate. Default: false (bool)'
            labels: '- (Optional/Computed) Labels for the configMap v2 (map)'
            name: '- (Required/ForceNew) The name of the configMap v2 (string)'
            namespace: '- (Optional/ForceNew) The namespaces of the configMap v2. Default: default (string)'
            resource_version: '- (Computed) The k8s resource version (string)'
            update: '- (Default 10 minutes) Used for v2 configMap modifications.'
        importStatements: []
    rancher2_custom_user_token:
        subCategory: ""
        name: rancher2_custom_user_token
        title: rancher2_custom_user_token Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "depends_on": [
                    "${rancher2_global_role_binding.foo-login}"
                  ],
                  "description": "foo token",
                  "password": "${rancher2_user.foo.password}",
                  "ttl": 0,
                  "username": "${rancher2_user.foo.username}"
                }
              references:
                password: rancher2_user.foo.password
                username: rancher2_user.foo.username
              dependencies:
                rancher2_global_role_binding.foo-login: |-
                    {
                      "global_role_id": "user-base",
                      "name": "foo-login-binding",
                      "user_id": "${rancher2_user.foo.id}"
                    }
                rancher2_user.foo: |-
                    {
                      "enabled": true,
                      "name": "foo",
                      "password": "changeme",
                      "username": "foo"
                    }
        argumentDocs:
            access_key: '- (Computed) Token access key part (string)'
            annotations: '- (Computed) Annotations of the token (map)'
            cluster_id: should be provided).
            create: '- (Default 5 minutes) Used for creating tokens.'
            delete: '- (Default 5 minutes) Used for deleting tokens.'
            description: '- (Optional/ForceNew) Token description (string)'
            enabled: '- (Computed) Token is enabled (bool)'
            expired: '- (Computed) Token is expired (bool)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Computed) Labels of the token (map)'
            name: '- (Computed) Token name (string)'
            password: '- (Required/ForceNew) The user password (string)'
            renew: '- (Optional/ForceNew) Renew token if expired or disabled. If true, a terraform diff would be generated to renew the token if it''s disabled or expired. If false, the token will not be renewed. Default true (bool)'
            secret_key: '- (Computed/Sensitive) Token secret key part (string)'
            temp_token: '- (Computed) Generated API temporary token as helper. Should be empty (string)'
            temp_token_id: '- (Computed) Generated API temporary token id as helper. Should be empty (string)'
            token: '- (Computed/Sensitive) Token value (string)'
            ttl: '- (Optional/ForceNew) Token time to live in seconds. Default 0 (int)'
            update: '- (Default 5 minutes) Used for token modifications.'
            user_id: '- (Computed) Token user ID (string)'
            username: '- (Required/ForceNew) The user username (string)'
        importStatements: []
    rancher2_etcd_backup:
        subCategory: ""
        name: rancher2_etcd_backup
        title: rancher2_etcd_backup Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "backup_config": [
                    {
                      "enabled": true,
                      "interval_hours": 20,
                      "retention": 10,
                      "s3_backup_config": [
                        {
                          "access_key": "access_key",
                          "bucket_name": "bucket_name",
                          "endpoint": "endpoint",
                          "folder": "/folder",
                          "region": "region",
                          "secret_key": "secret_key"
                        }
                      ]
                    }
                  ],
                  "cluster_id": "CLUSTER_ID",
                  "filename": "FILENAME",
                  "name": "foo"
                }
        argumentDocs:
            access_key: '- (Optional/Sensitive) Access key for S3 service (string)'
            annotations: '- (Optional) Annotations for Etcd Backup object (map)'
            backup_config: '- (Optional/Computed) Backup config for etcd backup (list maxitems:1)'
            bucket_name: '- (Required) Bucket name for S3 service (string)'
            cluster_id: '- (Required) Cluster ID to config Etcd Backup (string)'
            create: '- (Default 10 minutes) Used for creating cloud credentials.'
            custom_ca: '- (Optional) Base64 encoded custom CA for S3 service. Use filebase64() for encoding file. Available from Rancher v2.2.5 (string)'
            delete: '- (Default 10 minutes) Used for deleting cloud credentials.'
            enabled: '- (Optional) Enable etcd backup (bool)'
            endpoint: '- (Required) Endpoint for S3 service (string)'
            filename: '- (Optional/Computed) Filename of the Etcd Backup (string)'
            folder: '- (Optional) Folder for S3 service. Available from Rancher v2.2.7 (string)'
            id: '- (Computed) The ID of the resource (string)'
            interval_hours: '- (Optional) Interval hours for etcd backup. Default 12 (int)'
            labels: '- (Optional/Computed) Labels for Etcd Backup object (map)'
            manual: '- (Optional) Manual execution of the Etcd Backup. Default false (bool)'
            name: '- (Required) The name of the Etcd Backup (string)'
            namespace_id: '- (Optional/Computed) Description for the Etcd Backup (string)'
            region: '- (Optional) Region for S3 service (string)'
            retention: '- (Optional) Retention for etcd backup. Default 6 (int)'
            s3_backup_config: '- (Optional) S3 config options for etcd backup. Valid for imported and rke clusters. (list maxitems:1)'
            secret_key: '- (Optional/Sensitive) Secret key for S3 service (string)'
            update: '- (Default 10 minutes) Used for cloud credential modifications.'
        importStatements: []
    rancher2_feature:
        subCategory: ""
        name: rancher2_feature
        title: rancher2_feature Resource
        examples:
            - name: fleet
              manifest: |-
                {
                  "name": "fleet",
                  "value": "VALUE"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for feature object (map)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for feature object (map)'
            name: '- (Required) The name of the feature (string)'
            value: '- (Optional) The value of the feature. Default: false (bool)'
        importStatements: []
    rancher2_global_role:
        subCategory: ""
        name: rancher2_global_role
        title: rancher2_global_role Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "Terraform global role acceptance test",
                  "name": "foo",
                  "new_user_default": true,
                  "rules": [
                    {
                      "api_groups": [
                        "*"
                      ],
                      "resources": [
                        "secrets"
                      ],
                      "verbs": [
                        "create"
                      ]
                    }
                  ]
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for global role object (map)'
            api_groups: '- (Optional) Policy rule api groups (list)'
            builtin: '- (Computed) Builtin global role (bool)'
            create: '- (Default 10 minutes) Used for creating global role.'
            delete: '- (Default 10 minutes) Used for deleting global role.'
            description: '- (Optional/Computed) Global role description (string)'
            id: '- (Computed) The ID of the resource (string)'
            inherited_cluster_roles: '- (Optional) Names of role templates whose permissions are granted by this global role in every cluster besides the local cluster (list)'
            labels: '- (Optional/Computed) Labels for global role object (map)'
            name: '- (Required) Global role name (string)'
            new_user_default: '- (Optional) Whether or not this role should be added to new users. Default false (bool)'
            non_resource_urls: '- (Optional) Policy rule non resource urls (list)'
            resource_names: '- (Optional) Policy rule resource names (list)'
            resources: '- (Optional) Policy rule resources (list)'
            rules: '- (Optional/Computed) Global role policy rules (list)'
            update: '- (Default 10 minutes) Used for global role modifications.'
            verbs: '- (Optional) Policy rule verbs. bind, create, delete, deletecollection, escalate, get, impersonate, list, manage-namespaces, patch, update, updatepsa, use, view, watch, own and * values are supported (list)'
        importStatements: []
    rancher2_global_role_binding:
        subCategory: ""
        name: rancher2_global_role_binding
        title: rancher2_global_role_binding Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "global_role_id": "admin",
                  "name": "foo",
                  "user_id": "user-XXXXX"
                }
            - name: foo2
              manifest: |-
                {
                  "global_role_id": "admin",
                  "group_principal_id": "local://g-XXXXX",
                  "name": "foo2"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for global role binding (map)'
            create: '- (Default 5 minutes) Used for creating global role bindings.'
            delete: '- (Default 5 minutes) Used for deleting global role bindings.'
            global_role_id: '- (Required/ForceNew) The role id from create global role binding (string)'
            group_principal_id: '- (Optional/Computed/ForceNew) The group principal ID to assign global role binding (only works with external auth providers that support groups). Rancher v2.4.0 or higher is required (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for global role binding (map)'
            name: '- (Optional/Computed/ForceNew) The name of the global role binding (string)'
            update: '- (Default 5 minutes) Used for global role binding modifications.'
            user_id: '- (Optional/Computed/ForceNew) The user ID to assign global role binding (string)'
        importStatements: []
    rancher2_machine_config_v2:
        subCategory: ""
        name: rancher2_machine_config_v2
        title: rancher2_machine_config_v2 Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "amazonec2_config": [
                    {
                      "ami": "AMI_ID",
                      "region": "REGION",
                      "security_group": [
                        "AWS_SG"
                      ],
                      "subnet_id": "SUBNET_ID",
                      "vpc_id": "VPC_ID",
                      "zone": "ZONE"
                    }
                  ],
                  "generate_name": "test-foo"
                }
            - name: foo-harvester-v2
              manifest: |-
                {
                  "generate_name": "foo-harvester-v2",
                  "harvester_config": [
                    {
                      "cpu_count": "2",
                      "disk_info": "    {\n        \"disks\": [{\n            \"imageName\": \"harvester-public/image-57hzg\",\n            \"size\": 40,\n            \"bootOrder\": 1\n        }]\n    }\n",
                      "memory_size": "4",
                      "network_info": "    {\n        \"interfaces\": [{\n            \"networkName\": \"harvester-public/vlan1\"\n        }]\n    }\n",
                      "ssh_user": "ubuntu",
                      "user_data": "    package_update: true\n    packages:\n      - qemu-guest-agent\n      - iptables\n    runcmd:\n      - - systemctl\n        - enable\n        - '--now'\n        - qemu-guest-agent.service\n",
                      "vm_namespace": "default"
                    }
                  ]
                }
              dependencies:
                rancher2_cloud_credential.foo-harvester: |-
                    {
                      "harvester_credential_config": [
                        {
                          "cluster_id": "${data.rancher2_cluster_v2.foo-harvester.cluster_v1_id}",
                          "cluster_type": "imported",
                          "kubeconfig_content": "${data.rancher2_cluster_v2.foo-harvester.kube_config}"
                        }
                      ],
                      "name": "foo-harvester"
                    }
        argumentDocs:
            access_token: '- (Optional/Sensitive) Digital Ocean access token. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            active_timeout: '- (Optional) OpenStack active timeout Default 200 (string)'
            amazonec2_config: '- (Optional) AWS config for the Machine Config V2. Conflicts with azure_config, digitalocean_config, harvester_config, linode_config, openstack_config and vsphere_config (list maxitems:1)'
            ami: '- (Required) AWS machine image (string)'
            annotations: '- (Optional) Annotations for Machine Config V2 object (map)'
            application_credential_id: '- (Optional) OpenStack application credential id. Conflicts with application_credential_name (string)'
            application_credential_name: '- (Optional) OpenStack application credential name. Conflicts with application_credential_id (string)'
            application_credential_secret: '- (Optional) OpenStack application credential secret (string)'
            auth_url: '- (Required) OpenStack authentication URL (string)'
            authorized_users: '- (Optional) Linode user accounts (seperated by commas) whose Linode SSH keys will be permitted root access to the created node. (string)'
            availability_set: '- (Optional) Azure Availability Set to place the virtual machine into. Default docker-machine (string)'
            availability_zone: '- (Required) OpenStack availability zone (string)'
            azure_config: '- (Optional) Azure config for the Machine Config V2. Conflicts with amazonec2_config, digitalocean_config, harvester_config, linode_config, openstack_config and vsphere_config (list maxitems:1)'
            backups: '- (Optional) Enable backups for droplet. Default false (bool)'
            block_duration_minutes: '- (Optional) AWS spot instance duration in minutes (60, 120, 180, 240, 300, or 360). Default 0 (string)'
            boot_from_volume: '- (Optional) Enable booting from volume. Default is false (bool)'
            boot2docker_url: '- (Optional) vSphere URL for boot2docker iso image. Default https://releases.rancher.com/os/latest/rancheros-vmware.iso (string)'
            cacert: '- (Optional) CA certificate bundle to verify against (string)'
            cfgparam: '- (Optional) vSphere vm configuration parameters (used for guestinfo) (list)'
            client_id: '- (Optional/Sensitive) Azure Service Principal Account ID. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            client_secret: '- (Optional/Sensitive) Azure Service Principal Account password. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            clone_from: '- (Optional) If you choose creation type vm (clone vm) a name of what vm you want to clone is required (string)'
            cloud_config: '- (Optional) Filepath to a cloud-config yaml file to put into the ISO user-data (string)'
            cloudinit: '- (Optional) vSphere cloud-init file or url to set in the guestinfo (string)'
            config_drive: '- (Optional) Enables the OpenStack config drive for the instance. Default false (bool)'
            content_library: '- (Optional) If you choose to clone from a content library template specify the name of the library (string)'
            cpu_count: '- (Optional) CPU count, Default 2 (string)'
            create: '- (Default 10 minutes) Used for creating machine configs.'
            create_private_ip: '- (Optional) Create private IP for the instance. Default false (bool)'
            creation_type: '- (Optional) Creation type when creating a new virtual machine. Supported values: vm, template, library, legacy. Default legacy (string)'
            custom_attributes: '- (Optional) vSphere custom attributes, format key/value e.g. 200=my custom value (List)'
            custom_data: '- (Optional) Path to file with custom-data (string)'
            datacenter: '- (Optional) vSphere datacenter for docker VM (string)'
            datastore: '- (Optional) vSphere datastore for docker VM (string)'
            datastore_cluster: '- (Optional) vSphere datastore cluster for virtual machine (string)'
            delete: '- (Default 10 minutes) Used for deleting machine configs.'
            device_name: '- (Optional) AWS root device name. Default /dev/sda1 (string)'
            digitalocean_config: '- (Optional) Digitalocean config for the Machine Config V2. Conflicts with amazonec2_config, azure_config, harvester_config, linode_config, openstack_config and vsphere_config (list maxitems:1)'
            disk_bus: '- (Deprecated) Use disk_info instead'
            disk_info: '- (Required) A JSON string specifying info for the disks e.g. {\"disks\":[{\"imageName\":\"harvester-public/image-57hzg\",\"bootOrder\":1,\"size\":40},{\"storageClassName\":\"node-driver-test\",\"bootOrder\":2,\"size\":1}]} (string)'
            disk_size: '- (Optional) Disk size if using managed disk. For Rancher v2.3.x and above. Default 30 (string)'
            dns: '- (Optional) A unique DNS label for the public IP adddress (string)'
            docker_port: '- (Optional) Port number for Docker engine. Default 2376 (string)'
            domain_id: '- (Required++) OpenStack domain ID. Identity v3 only. Conflicts with domain_name (string)'
            domain_name: '- (Required++) OpenStack domain name. Identity v3 only. Conflicts with domain_id (string)'
            encrypt_ebs_volume: '- (Optional) Encrypt EBS volume. Default false (bool)'
            endpoint: '- (Optional) Optional endpoint URL (hostname only or fully qualified URI) (string)'
            endpoint_type: '- (Optional) OpenStack endpoint type. adminURL, internalURL or publicURL (string)'
            environment: '- (Optional) Azure environment (e.g. AzurePublicCloud, AzureChinaCloud). Default AzurePublicCloud (string)'
            fault_domain_count: '- (Optional) Fault domain count to use for availability set. Default 3 (string)'
            flavor_id: '- (Required+) OpenStack flavor id to use for the instance. Conflicts with flavor_name (string)'
            flavor_name: '- (Required+) OpenStack flavor name to use for the instance. Conflicts with flavor_id (string)'
            fleet_namespace: '- (Optional/ForceNew) Cluster V2 fleet namespace'
            floating_ip_pool: '- (Optional) OpenStack floating IP pool to get an IP from to assign to the instance (string)'
            folder: '- (Optional) vSphere folder for the docker VM. This folder must already exist in the datacenter (string)'
            generate_name: '- (Required/ForceNew) Cluster V2 generate name. The pattern to generate machine config name. e.g  generate_name="prod-pool1" will generate "nc-prod-pool1-?????" name computed at name attribute (string)'
            graceful_shutdown_timeout: (Optional) Duration in seconds before the graceful shutdown of the VM times out and the VM is destroyed. A force destroy will be performed when the value is zero (string)
            harvester_config: '- (Optional) Harvester config for the Machine Config V2. Conflicts with amazonec2_config, azure_config, digitalocean_config, linode_config, openstack_config and vsphere_config (list maxitems:1)'
            hostsystem: '- (Optional) vSphere compute resource where the docker VM will be instantiated. This can be omitted if using a cluster with DRS (string)'
            http_endpoint: '- (Optional) Enables or disables the HTTP metadata endpoint on your instances (string)'
            http_tokens: '- (Optional) The state of token usage for your instance metadata requests (string)'
            iam_instance_profile: '- (Optional) AWS IAM Instance Profile (string)'
            id: '- (Computed) The ID of the resource (string)'
            image: '- (Optional) Azure virtual machine OS image. Default canonical:UbuntuServer:18.04-LTS:latest (string)'
            image_id: '- (Required+) OpenStack image id to use for the instance. Conflicts with image_name (string)'
            image_name: '- (Deprecated) Use disk_info instead'
            insecure: '- (Optional) Disable TLS credential checking. Default false (bool)'
            insecure_transport: '- (Optional) Disable SSL when sending requests (bool)'
            instance_type: '- (Optional) AWS instance type. Default t3a.medium (string)'
            ip_version: '- (Optional) OpenStack version of IP address assigned for the machine Default 4 (string)'
            ipv6: '- (Optional) Enable ipv6 for droplet. Default false (bool)'
            keypair_name: '- (Optional) OpenStack keypair to use to SSH to the instance (string)'
            kind: '- (Computed) The machine config kind (string)'
            kms_key: '- (Optional) Custom KMS key ID using the AWS Managed CMK (string)'
            label: '- (Optional) Linode Instance Label. (string)'
            labels: '- (Optional/Computed) Labels for Machine Config V2 object (map)'
            linode_config: '- (Optional) Linode config for the Machine Config V2. Conflicts with amazonec2_config, azure_config, digitalocean_config, harvester_config, openstack_config and vsphere_config (list maxitems:1)'
            location: '- (Optional) Azure region to create the virtual machine. Default westus (string)'
            managed_disks: '- (Optional) Configures VM and availability set for managed disks. For Rancher v2.3.x and above. Default false (bool)'
            memory_size: '- (Optional) Memory size (in GiB), Default 4 (string)'
            monitoring: '- (Optional) Set this flag to enable CloudWatch monitoring. Deafult false (bool)'
            name: '- (Computed) The machine config name (string)'
            net_id: '- (Required+) OpenStack network id the machine will be connected on. Conflicts with net_name (string)'
            net_name: '- (Required+) OpenStack network name the machine will be connected on. Conflicts with net_id (string)'
            network: '- (Optional) vSphere network where the docker VM will be attached (list)'
            network_data: '- (Optional) NetworkData content of cloud-init, base64 is supported (string)'
            network_info: '- (Required) A JSON string specifying info for the networks e.g. {\"interfaces\":[{\"networkName\":\"harvester-public/vlan1\"},{\"networkName\":\"harvester-public/vlan2\"}]} (string)'
            network_model: '- (Deprecated) Use network_info instead'
            network_name: '- (Deprecated) Use network_info instead'
            no_public_ip: '- (Optional) Do not create a public IP address for the machine. Default false (bool)'
            nova_network: '- (Optional) Use the nova networking services instead of neutron (string)'
            nsg: '- (Optional) Azure Network Security Group to assign this node to (accepts either a name or resource ID, default is to create a new NSG for each machine). Default docker-machine-nsg (string)'
            open_port: '- (Optional) Make the specified port number accessible from the Internet. (list)'
            openstack_config: '- (Optional) Openstack config for the Machine Config V2. Conflicts with amazonec2_config, azure_config, digitalocean_config, harvester_config, linode_config and vsphere_config (list maxitems:1)'
            password: '- (Optional/Sensitive) OpenStack password. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            pool: '- (Optional) vSphere resource pool for docker VM (string)'
            private_address_only: '- (Optional) Only use a private IP address. Default false (bool)'
            private_ip_address: '- (Optional) Specify a static private IP address for the machine. (string)'
            private_key_file: '- (Optional/Sensitive) Private key content to use for SSH (string)'
            private_networking: '- (Optional) Enable private networking for droplet. Default false (bool)'
            region: '- (Required) AWS region. (string)'
            request_spot_instance: '- (Optional) Set this flag to request spot instance. Default false (bool)'
            resource_group: '- (Optional) Azure Resource Group name (will be created if missing). Default docker-machine (string)'
            resource_version: '- (Computed) The machine config k8s resource version (string)'
            retries: '- (Optional) Set retry count for recoverable failures (use -1 to disable). Default 5 (string)'
            root_pass: '- (Optional/Sensitive) Root Password (string)'
            root_size: '- (Optional) AWS root disk size (in GB). Default 16 (string)'
            sec_groups: '- (Optional) OpenStack comma separated security groups for the machine (string)'
            security_group: '- (Required) AWS VPC security group. (list)'
            security_group_readonly: '- (Optional) Skip adding default rules to security groups (bool)'
            session_token: '- (Optional/Sensitive) AWS Session Token (string)'
            size: '- (Optional) Size for Azure Virtual Machine. Default Standard_A2 (string)'
            spot_price: '- (Optional) AWS spot instance bid price (in dollar). Default 0.50 (string)'
            ssh_key_contents: '- (Optional/Sensitive) SSH Key for Instance (string)'
            ssh_key_fingerprint: '- (Optional/Sensitive) SSH key fingerprint (string)'
            ssh_password: '- (Optional/Sensitive) SSH password (string)'
            ssh_port: '- (Optional) SSH port. Default 22 (string)'
            ssh_user: '- (Optional) Set the name of the ssh user (string)'
            ssh_user_group: '- (Optional) If using a non-B2D image the uploaded keys will need chown''ed. Default staff (string)'
            stackscript: '- (Optional) Specifies the Linode StackScript to use to create the instance. (string)'
            stackscript_data: '- (Optional) A JSON string specifying data for the selected StackScript. (string)'
            static_public_ip: '- (Optional) Assign a static public IP address to the machine. Default false (bool)'
            storage_type: '- (Optional) Type of Storage Account to host the OS Disk for the machine. Default Standard_LRS (string)'
            subnet: '- (Optional) Azure Subnet Name to be used within the Virtual Network. Default docker-machine (string)'
            subnet_id: '- (Required) AWS VPC subnet id (string)'
            subnet_prefix: '- (Optional) Private CIDR block to be used for the new subnet, should comply RFC 1918. Default 192.168.0.0/16 (string)'
            subscription_id: '- (Optional/Sensitive) Azure Subscription ID. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            swap_size: '- (Optional) Linode Instance Swap Size (MB). Default 512 (string)'
            tags: '- (Optional) AWS Tags (e.g. key1,value1,key2,value2) (string)'
            tenant_domain_id: '- (Required++) OpenStack tenant domain id. Conflicts with tenant_domain_name (string)'
            tenant_domain_name: '- (Required++) OpenStack tenant domain name. Conflicts with tenant_domain_id (string)'
            tenant_id: '- (Optional) Azure Tenant ID (string)'
            tenant_name: '- (Required++) OpenStack tenant name. Conflicts with tenant_id (string)'
            token: '- (Optional/Sensitive) Linode API token. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            ua_prefix: '- (Optional) Prefix the User-Agent in Linode API calls with some ''product/version'' (string)'
            update: '- (Default 10 minutes) Used for machine config modifications.'
            update_domain_count: '- (Optional) Update domain count to use for availability set. Default 5 (string)'
            use_ebs_optimized_instance: '- (Optional) Create an EBS optimized instance. Default false (bool)'
            use_private_address: '- (Optional) Force the usage of private IP address. Default false (bool)'
            use_private_ip: '- (Optional) Use private IP address of the machine to connect. Default false (bool)'
            user_data: '- (Optional) UserData content of cloud-init, base64 is supported. If the image does not contain the qemu-guest-agent package, you must install and start qemu-guest-agent using userdata (string)'
            user_data_file: '- (Optional) File containing an openstack userdata script (string)'
            user_domain_id: '- (Required++) OpenStack user domain id. Conflicts with user_domain_name (string)'
            user_domain_name: '- (Required++) OpenStack user domain name. Conflicts with user_domain_id (string)'
            userdata: '- (Optional) Path to file with cloud-init user data (string)'
            username: '- (Required++) OpenStack username (string)'
            vapp_ip_allocation_policy: '- (Optional) vSphere vApp IP allocation policy. Supported values are: dhcp, fixed, transient and fixedAllocated (string)'
            vapp_ip_protocol: '- (Optional) vSphere vApp IP protocol for this deployment. Supported values are: IPv4 and IPv6 (string)'
            vapp_property: '- (Optional) vSphere vApp properties (list)'
            vapp_transport: '- (Optional) vSphere OVF environment transports to use for properties. Supported values are: iso and com.vmware.guestInfo (string)'
            vcenter: '- (Optional/Sensitive) vSphere IP/hostname for vCenter (string)'
            vcenter_port: '- (Optional/Sensitive) vSphere Port for vCenter Default 443 (string)'
            vm_affinity: '- (Optional) Virtual machine affinity, only base64 format is supported. For Rancher v2.6.7 and above (string)'
            vm_namespace: '- (Required) Virtual machine namespace e.g. default (string)'
            vnet: '- (Optional) Azure Virtual Network name to connect the virtual machine (in [resourcegroup:]name format). Default docker-machine-vnet (string)'
            volume_device_path: '- (Optional) OpenStack volume device path (attaching). Applicable only when boot_from_volume is true. Omit for auto /dev/vdb. (string)'
            volume_id: '- (Optional) OpenStack volume id of existing volume. Applicable only when boot_from_volume is true (string)'
            volume_name: '- (Optional) OpenStack volume name of existing volume. Applicable only when boot_from_volume is true (string)'
            volume_size: '- (Optional) OpenStack volume size (GiB). Required when boot_from_volume is true (string)'
            volume_type: '- (Optional) Amazon EBS volume type. Default gp2 (string)'
            vpc_id: '- (Required) AWS VPC id. (string)'
            vsphere_config: '- (Optional) vSphere config for the Machine Config V2. Conflicts with amazonec2_config, azure_config, digitalocean_config, harvester_config, linode_config and openstack_config (list maxitems:1)'
            zone: '- (Required) AWS zone for instance (i.e. a,b,c,d,e) (string)'
        importStatements: []
    rancher2_multi_cluster_app:
        subCategory: ""
        name: rancher2_multi_cluster_app
        title: rancher2_multi_cluster_app Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "answers": [
                    {
                      "values": {
                        "ingress_host": "test.xip.io"
                      }
                    }
                  ],
                  "catalog_name": "catalog_name",
                  "name": "foo",
                  "roles": [
                    "project-member"
                  ],
                  "targets": [
                    {
                      "project_id": "project_id"
                    }
                  ],
                  "template_name": "template_name",
                  "template_version": "template_version"
                }
            - name: foo
              manifest: |-
                {
                  "answers": [
                    {
                      "values": {
                        "ingress_host": "test.xip.io"
                      }
                    },
                    {
                      "project_id": "project_id2",
                      "values": {
                        "ingress_host": "test2.xip.io"
                      }
                    }
                  ],
                  "catalog_name": "catalog_name",
                  "name": "foo",
                  "roles": [
                    "project-member"
                  ],
                  "targets": [
                    {
                      "project_id": "project_id1"
                    },
                    {
                      "project_id": "project_id2"
                    }
                  ],
                  "template_name": "template_name",
                  "template_version": "template_version"
                }
        argumentDocs:
            Add/Remove targets: ': If targets arguments is modified, the multi cluster app targets will be updated.'
            Rollback: ': If revision_id argument is provided or modified the app will be rolled back accordingly. A new revision_id will be generated in Rancher. It will also generate a non-empty terraform plan that will require manual .tf file intervention. Use carefully.'
            Update: ': If any other argument is modified the app will be upgraded.'
            access_type: '- (Optional) Member access type. Valid values: ["member" | "owner" | "read-only"] (string)'
            annotations: '- (Optional/Computed) Annotations for multi cluster app object (map)'
            answers: '- (Optional/Computed) The multi cluster app answers (list)'
            app_id: '- (Computed) App ID for target (string)'
            batch_size: '- (Optional) Rolling update batch size. Default 1 (int)'
            catalog_name: '- (Required) The multi cluster app catalog name (string)'
            cluster_id: '- (Optional) Cluster ID for answer (string)'
            create: '- (Default 10 minutes) Used for creating apps.'
            delete: '- (Default 10 minutes) Used for deleting apps.'
            group_principal_id: '- (Optional) Member group principal id (string)'
            health_state: '- (Computed) App health state for target (string)'
            id: '- (Computed) The ID of the resource (string)'
            interval: '- (Optional) Rolling update interval. Default 1 (int)'
            labels: '- (Optional/Computed) Labels for multi cluster app object (map)'
            members: '- (Optional) The multi cluster app answers (list)'
            name: '- (Required/ForceNew) The multi cluster app name (string)'
            project_id: '- (Required) Project ID for target (string)'
            revision_history_limit: '- (Computed) The multi cluster app revision history limit. Default 10 (int)'
            revision_id: '- (Optional/Computed) Current revision id for the multi cluster app (string)'
            roles: '- (Required) The multi cluster app roles (list)'
            rolling_update: '- (Optional) Upgrade strategy rolling update (list MaxItems:1)'
            state: '- (Computed) App state for target (string)'
            targets: '- (Required) The multi cluster app target projects (list)'
            template_name: '- (Required) The multi cluster app template name (string)'
            template_version: '- (Optional/Computed) The multi cluster app template version. Default: latest (string)'
            template_version_id: '- (Computed) The multi cluster app template version ID (string)'
            update: '- (Default 10 minutes) Used for app modifications.'
            upgrade_strategy: '- (Optional/Computed) The multi cluster app upgrade strategy (list MaxItems:1)'
            user_principal_id: '- (Optional) Member user principal id (string)'
            values: '- (Optional) Key/values for answer (map)'
            wait: '- (Optional) Wait until the multi cluster app is active. Default true (bool)'
        importStatements: []
    rancher2_namespace:
        subCategory: ""
        name: rancher2_namespace
        title: rancher2_namespace Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "container_resource_limit": [
                    {
                      "limits_cpu": "20m",
                      "limits_memory": "20Mi",
                      "requests_cpu": "1m",
                      "requests_memory": "1Mi"
                    }
                  ],
                  "description": "foo namespace",
                  "name": "foo",
                  "project_id": "PROJECT_ID",
                  "resource_quota": [
                    {
                      "limit": [
                        {
                          "limits_cpu": "100m",
                          "limits_memory": "100Mi",
                          "requests_storage": "1Gi"
                        }
                      ]
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "container_resource_limit": [
                    {
                      "limits_cpu": "20m",
                      "limits_memory": "20Mi",
                      "requests_cpu": "1m",
                      "requests_memory": "1Mi"
                    }
                  ],
                  "description": "foo namespace",
                  "name": "foo",
                  "project_id": "${rancher2_cluster.foo-custom.default_project_id}",
                  "resource_quota": [
                    {
                      "limit": [
                        {
                          "limits_cpu": "100m",
                          "limits_memory": "100Mi",
                          "requests_storage": "1Gi"
                        }
                      ]
                    }
                  ]
                }
              references:
                project_id: rancher2_cluster.foo-custom.default_project_id
              dependencies:
                rancher2_cluster.foo-custom: |-
                    {
                      "description": "Foo rancher2 custom cluster",
                      "name": "foo-custom",
                      "rke_config": [
                        {
                          "network": [
                            {
                              "plugin": "canal"
                            }
                          ]
                        }
                      ]
                    }
        argumentDocs:
            <id>: part is omitted <project_id>=<cluster_id>, the namespace'll not be assigned to any project. To move it into a project, <project_id>=<cluster_id>:<id> needs to be updated in tf file. Namespace movement is only supported inside same cluster_id.
            <project_id>=<cluster_id>:<id>: ', the namespace''ll be assigned to corresponding cluster project once it''s imported.'
            annotations: '- (Optional/Computed) Annotations for Node Pool object (map)'
            config_maps: '- (Optional) Limit for config maps in namespace (string)'
            container_resource_limit: '- (Optional) Default containers resource limits on namespace (List maxitem:1)'
            create: '- (Default 10 minutes) Used for creating namespaces.'
            delete: '- (Default 10 minutes) Used for deleting namespaces.'
            description: '- (Optional) A namespace description (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for Node Pool object (map)'
            limit: '- (Required) Resource quota limit for namespace (list maxitems:1)'
            limits_cpu: '- (Optional) CPU limit for containers (string)'
            limits_memory: '- (Optional) Memory limit for containers (string)'
            name: '- (Required) The name of the namespace (string)'
            persistent_volume_claims: '- (Optional) Limit for persistent volume claims in namespace (string)'
            pods: '- (Optional) Limit for pods in namespace (string)'
            project_id: '- (Required) The project id where assign namespace. It''s on the form project_id=<cluster_id>:<id>. Updating <id> part on same <cluster_id> namespace will be moved between projects (string)'
            replication_controllers: '- (Optional) Limit for replication controllers in namespace (string)'
            requests_cpu: '- (Optional) CPU reservation for containers (string)'
            requests_memory: '- (Optional) Memory reservation for containers (string)'
            requests_storage: '- (Optional) Limit for requests storage in namespace (string)'
            resource_quota: '- (Optional/Computed) Resource quota for namespace. Rancher v2.1.x or higher (list maxitems:1)'
            secrets: '- (Optional) Limit for secrets in namespace (string)'
            services_load_balancers: '- (Optional) Limit for services load balancers in namespace (string)'
            services_node_ports: '- (Optional) Limit for services node ports in namespace (string)'
            update: '- (Default 10 minutes) Used for namespace modifications.'
            wait_for_cluster: '- (Optional) Wait for cluster becomes active. Default false (bool)'
        importStatements: []
    rancher2_node_driver:
        subCategory: ""
        name: rancher2_node_driver
        title: rancher2_node_driver Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "active": true,
                  "builtin": false,
                  "checksum": "0x0",
                  "description": "Foo description",
                  "external_id": "foo_external",
                  "name": "foo",
                  "ui_url": "local://ui",
                  "url": "local://",
                  "whitelist_domains": [
                    "*.foo.com"
                  ]
                }
        argumentDocs:
            active: '- (Required) Specify if the node driver state (bool)'
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            builtin: '- (Required) Specify wheter the node driver is an internal node driver or not (bool)'
            checksum: '- (Optional) Verify that the downloaded driver matches the expected checksum (string)'
            create: '- (Default 10 minutes) Used for creating node drivers.'
            delete: '- (Default 10 minutes) Used for deleting node drivers.'
            description: '- (Optional) Description of the node driver (string)'
            external_id: '- (Optional) External ID (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Required) Name of the node driver (string)'
            ui_url: '- (Optional) The URL to load for customized Add Nodes screen for this driver (string)'
            update: '- (Default 10 minutes) Used for node driver modifications.'
            url: '- (Required) The URL to download the machine driver binary for 64-bit Linux (string)'
            whitelist_domains: '- (Optional) Domains to whitelist for the ui (list)'
        importStatements: []
    rancher2_node_pool:
        subCategory: ""
        name: rancher2_node_pool
        title: rancher2_node_pool Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "${rancher2_cluster.foo-custom.id}",
                  "control_plane": true,
                  "etcd": true,
                  "hostname_prefix": "foo-cluster-0",
                  "name": "foo",
                  "node_template_id": "${rancher2_node_template.foo.id}",
                  "quantity": 1,
                  "worker": true
                }
              references:
                cluster_id: rancher2_cluster.foo-custom.id
                node_template_id: rancher2_node_template.foo.id
              dependencies:
                rancher2_cloud_credential.foo: |-
                    {
                      "amazonec2_credential_config": [
                        {
                          "access_key": "XXXXXXXXXXXXXXXXXXXX",
                          "secret_key": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
                        }
                      ],
                      "description": "Terraform cloudCredential acceptance test",
                      "name": "foo"
                    }
                rancher2_cluster.foo-custom: |-
                    {
                      "description": "Foo rancher2 custom cluster",
                      "kind": "rke",
                      "name": "foo-custom",
                      "rke_config": [
                        {
                          "network": [
                            {
                              "plugin": "canal"
                            }
                          ]
                        }
                      ]
                    }
                rancher2_node_template.foo: |-
                    {
                      "amazonec2_config": [
                        {
                          "ami": "AMI_ID",
                          "region": "REGION",
                          "security_group": [
                            "AWS_SECURITY_GROUP"
                          ],
                          "subnet_id": "SUBNET_ID",
                          "vpc_id": "VPC_ID",
                          "zone": "ZONE"
                        }
                      ],
                      "cloud_credential_id": "${rancher2_cloud_credential.foo.id}",
                      "description": "foo test",
                      "name": "foo"
                    }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for Node Pool object (map)'
            cluster_id: '- (Required/ForceNew) The RKE cluster id to use Node Pool (string)'
            control_plane: '- (Optional) RKE control plane role for created nodes (bool)'
            create: '- (Default 10 minutes) Used for creating node pools.'
            delete: '- (Default 10 minutes) Used for deleting node pools.'
            delete_not_ready_after_secs: '- (Optional) Delete not ready node after secs. For Rancher v2.3.3 and above. Default 0 (int)'
            drain_before_delete: '- (Optional) Drain nodes before delete. Default: false (bool)'
            effect: '- (Optional) Taint effect. Supported values : "NoExecute" | "NoSchedule" | "PreferNoSchedule" (string)'
            etcd: '- (Optional) RKE etcd role for created nodes (bool)'
            hostname_prefix: '- (Required) The prefix for created nodes of the Node Pool (string)'
            id: '- (Computed) The ID of the resource (string)'
            key: '- (Required) Taint key (string)'
            labels: '- (Optional/Computed) Labels for Node Pool object (map)'
            name: '- (Required/ForceNew) The name of the Node Pool (string)'
            node_taints: '- (Required) Node taints. For Rancher v2.3.3 and above (List)'
            node_template_id: '- (Required) The Node Template ID to use for node creation (string)'
            quantity: '- (Optional) The number of nodes to create on Node Pool. Default 1. Only values >= 1 allowed (int)'
            time_added: '- (Optional) Taint time added (string)'
            update: '- (Default 10 minutes) Used for node pool modifications.'
            value: '- (Required) Taint value (string)'
            worker: '- (Optional) RKE role role for created nodes (bool)'
        importStatements: []
    rancher2_node_template:
        subCategory: ""
        name: rancher2_node_template
        title: rancher2_node_template Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "amazonec2_config": [
                    {
                      "access_key": "AWS_ACCESS_KEY",
                      "ami": "AMI_ID",
                      "region": "REGION",
                      "secret_key": "AWS_SECRET_KEY",
                      "security_group": [
                        "AWS_SECURITY_GROUP"
                      ],
                      "subnet_id": "SUBNET_ID",
                      "vpc_id": "VPC_ID",
                      "zone": "ZONE"
                    }
                  ],
                  "description": "foo test",
                  "name": "foo"
                }
            - name: foo
              manifest: |-
                {
                  "amazonec2_config": [
                    {
                      "ami": "AMI_ID",
                      "region": "REGION",
                      "security_group": [
                        "AWS_SECURITY_GROUP"
                      ],
                      "subnet_id": "SUBNET_ID",
                      "vpc_id": "VPC_ID",
                      "zone": "ZONE"
                    }
                  ],
                  "cloud_credential_id": "${rancher2_cloud_credential.foo.id}",
                  "description": "foo test",
                  "name": "foo"
                }
              references:
                cloud_credential_id: rancher2_cloud_credential.foo.id
              dependencies:
                rancher2_cloud_credential.foo: |-
                    {
                      "amazonec2_credential_config": [
                        {
                          "access_key": "AWS_ACCESS_KEY",
                          "secret_key": "AWS_SECRET_KEY"
                        }
                      ],
                      "description": "foo test",
                      "name": "foo"
                    }
            - name: foo-harvester
              manifest: |-
                {
                  "cloud_credential_id": "${rancher2_cloud_credential.foo-harvester.id}",
                  "engine_install_url": "https://releases.rancher.com/install-docker/20.10.sh",
                  "harvester_config": [
                    {
                      "cpu_count": "2",
                      "disk_info": "    {\n        \"disks\": [{\n            \"imageName\": \"harvester-public/image-57hzg\",\n            \"size\": 40,\n            \"bootOrder\": 1\n        }]\n    }\n",
                      "memory_size": "4",
                      "network_info": "    {\n        \"interfaces\": [{\n            \"networkName\": \"harvester-public/vlan1\"\n        }]\n    }\n",
                      "ssh_user": "ubuntu",
                      "user_data": "    package_update: true\n    packages:\n      - qemu-guest-agent\n      - iptables\n    runcmd:\n      - - systemctl\n        - enable\n        - '--now'\n        - qemu-guest-agent.service\n",
                      "vm_namespace": "default"
                    }
                  ],
                  "name": "foo-harvester"
                }
              references:
                cloud_credential_id: rancher2_cloud_credential.foo-harvester.id
              dependencies:
                rancher2_cloud_credential.foo-harvester: |-
                    {
                      "harvester_credential_config": [
                        {
                          "cluster_id": "${data.rancher2_cluster_v2.foo-harvester.cluster_v1_id}",
                          "cluster_type": "imported",
                          "kubeconfig_content": "${data.rancher2_cluster_v2.foo-harvester.kube_config}"
                        }
                      ],
                      "name": "foo-harvester"
                    }
            - name: my_hetzner_node_template
              manifest: |-
                {
                  "driver_id": "${rancher2_node_driver.hetzner_node_driver.id}",
                  "hetzner_config": [
                    {
                      "api_token": "XXXXXXXXXX",
                      "image": "ubuntu-18.04",
                      "server_location": "nbg1",
                      "server_type": "cx11"
                    }
                  ],
                  "name": "my-hetzner-node-template"
                }
              references:
                driver_id: rancher2_node_driver.hetzner_node_driver.id
              dependencies:
                rancher2_node_driver.hetzner_node_driver: |-
                    {
                      "active": true,
                      "builtin": false,
                      "name": "Hetzner",
                      "ui_url": "https://storage.googleapis.com/hcloud-rancher-v2-ui-driver/component.js",
                      "url": "https://github.com/JonasProgrammer/docker-machine-driver-hetzner/releases/download/3.6.0/docker-machine-driver-hetzner_3.6.0_linux_amd64.tar.gz",
                      "whitelist_domains": [
                        "storage.googleapis.com"
                      ]
                    }
        argumentDocs:
            access_key: '- (Optional/Sensitive) AWS access key. Required on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            access_token: '- (Optional/Sensitive) Digital Ocean access token. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            active_timeout: '- (Optional) OpenStack active timeout Default 200 (string)'
            amazonec2_config: '- (Optional) AWS config for the Node Template (list maxitems:1)'
            ami: '- (Required) AWS machine image (string)'
            annotations: '- (Optional) Annotations for Node Template object (map)'
            api_token: '- (Required/Sensitive) Hetzner Cloud project API token (string)'
            application_credential_id: '- (Optional) OpenStack application credential id. Conflicts with application_credential_name (string)'
            application_credential_name: '- (Optional) OpenStack application credential name. Conflicts with application_credential_id (string)'
            application_credential_secret: '- (Optional) OpenStack application credential secret (string)'
            auth_certificate_authority: '- (Optional/Sensitive) Auth certificate authority for the Node Template (string)'
            auth_key: '- (Optional/Sensitive) Auth key for the Node Template (string)'
            auth_url: '- (Required) OpenStack authentication URL (string)'
            authorized_users: '- (Optional) Linode user accounts (seperated by commas) whose Linode SSH keys will be permitted root access to the created node. (string)'
            availability_set: '- (Optional) Azure Availability Set to place the virtual machine into. Default docker-machine (string)'
            availability_zone: '- (Required) OpenStack availability zone (string)'
            azure_config: '- (Optional) Azure config for the Node Template (list maxitems:1)'
            b2d_size: '- (Optional) Size of the Volatile disk in MB - only for b2d (string)'
            backups: '- (Optional) Enable backups for droplet. Default false (bool)'
            block_duration_minutes: '- (Optional) AWS spot instance duration in minutes (60, 120, 180, 240, 300, or 360). Default 0 (string)'
            boot_from_volume: '- (Optional) Enable booting from volume. Default is false (bool)'
            boot2docker_url: '- (Optional) vSphere URL for boot2docker iso image. Default https://releases.rancher.com/os/latest/rancheros-vmware.iso (string)'
            cacert: '- (Optional) CA certificate bundle to verify against (string)'
            cfgparam: '- (Optional) vSphere vm configuration parameters (used for guestinfo) (list)'
            client_id: '- (Optional/Sensitive) Azure Service Principal Account ID. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            client_secret: '- (Optional/Sensitive) Azure Service Principal Account password. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            clone_from: '- (Optional) If you choose creation type vm (clone vm) a name of what vm you want to clone is required. From Rancher v2.3.3 (string)'
            cloud_config: '- (Optional) Cloud Config YAML content to inject as user-data. From Rancher v2.3.3 (string)'
            cloud_credential_id: '- (Optional) Cloud credential ID for the Node Template. Required from Rancher v2.2.x (string)'
            cloudinit: '- (Optional) vSphere cloud-init file or url to set in the guestinfo (string)'
            config_drive: '- (Optional) Enables the OpenStack config drive for the instance. Default false (bool)'
            content_library: '- (Optional) If you choose to clone from a content library template specify the name of the library. From Rancher v2.3.3 (string)'
            cpu: '- (Optional) CPU value for the VM (string)'
            cpu_count: '- (Optional) CPU count, Default 2 (string)'
            create: '- (Default 10 minutes) Used for creating node templates.'
            create_private_ip: '- (Optional) Create private IP for the instance. Default false (bool)'
            creation_type: '- (Optional) Creation type when creating a new virtual machine. Supported values: vm, template, library, legacy. Default legacy. From Rancher v2.3.3 (string)'
            custom_attributes: '- (Optional) vSphere custom attributes, format key/value e.g. 200=my custom value. From Rancher v2.3.3 (List)'
            custom_data: '- (Optional) Path to file with custom-data (string)'
            datacenter: '- (Optional) vSphere datacenter for docker VM (string)'
            datastore: '- (Optional) vSphere datastore for docker VM (string)'
            datastore_cluster: '- (Optional) vSphere datastore cluster for virtual machine. From Rancher v2.3.3 (string)'
            delete: '- (Default 10 minutes) Used for deleting node templates.'
            description: '- (Optional) Description for the Node Template (string)'
            dev_prefix: '- (Optional) Dev prefix to use for the images. E.g.: ''vd'', ''sd'', ''hd'' (string)'
            device_name: '- (Optional) AWS root device name. Default /dev/sda1 (string)'
            digitalocean_config: '- (Optional) Digitalocean config for the Node Template (list maxitems:1)'
            disable_vnc: '- (Optional) VNC is enabled by default. Disable it with this flag (bool)'
            disk_bus: '- (Deprecated) Use disk_info instead'
            disk_info: '- (Required) A JSON string specifying info for the disks e.g. {\"disks\":[{\"imageName\":\"harvester-public/image-57hzg\",\"bootOrder\":1,\"size\":40},{\"storageClassName\":\"node-driver-test\",\"bootOrder\":2,\"size\":1}]} (string)'
            disk_resize: '- (Optional) Size of the disk for the VM in MB (string)'
            disk_size: '- (Optional) Disk size if using managed disk. For Rancher v2.3.x and above. Default 30 (string)'
            dns: '- (Optional) A unique DNS label for the public IP adddress (string)'
            docker_port: '- (Optional) Port number for Docker engine. Default 2376 (string)'
            domain_id: '- (Required**) OpenStack domain ID. Identity v3 only. Conflicts with domain_name (string)'
            domain_name: '- (Required**) OpenStack domain name. Identity v3 only. Conflicts with domain_id (string)'
            driver: '- (Computed) The driver of the node template (string)'
            driver_id: '- (Optional/Computed) The node driver id used by the node template. It''s required if the node driver isn''t built in Rancher (string)'
            effect: '- (Optional) Taint effect. Supported values : "NoExecute" | "NoSchedule" | "PreferNoSchedule" (string)'
            encrypt_ebs_volume: '- (Optional) Encrypt EBS volume. Default false (bool)'
            endpoint: '- (Optional) Optional endpoint URL (hostname only or fully qualified URI) (string)'
            endpoint_type: '- (Optional) OpenStack endpoint type. adminURL, internalURL or publicURL (string)'
            engine_env: '- (Optional) Engine environment for the node template (string)'
            engine_insecure_registry: '- (Optional) Insecure registry for the node template (list)'
            engine_install_url: '- (Optional/Computed) Docker engine install URL for the node template. Available install docker versions at https://github.com/rancher/install-docker (string)'
            engine_label: '- (Optional) Engine label for the node template (string)'
            engine_opt: '- (Optional) Engine options for the node template (map)'
            engine_registry_mirror: '- (Optional) Engine registry mirror for the node template (list)'
            engine_storage_driver: '- (Optional) Engine storage driver for the node template (string)'
            environment: '- (Optional) Azure environment (e.g. AzurePublicCloud, AzureChinaCloud). Default AzurePublicCloud (string)'
            extra_tags_all: '- (Optional) Extra tags for all created resources (e.g. key1=value1,key2=value2) (list)'
            extra_tags_instances: '- (Optional) Extra tags only for instances (e.g. key1=value1,key2=value2) (list)'
            fault_domain_count: '- (Optional) Fault domain count to use for availability set. Default 3 (string)'
            flavor_id: '- (Required*) OpenStack flavor id to use for the instance. Conflicts with flavor_name (string)'
            flavor_name: '- (Required*) OpenStack flavor name to use for the instance. Conflicts with flavor_id (string)'
            floating_ip_pool: '- (Optional) OpenStack floating IP pool to get an IP from to assign to the instance (string)'
            folder: '- (Optional) vSphere folder for the docker VM. This folder must already exist in the datacenter (string)'
            harvester_config: '- (Optional) Harvester config for the Node Template (list maxitems:1)'
            hetzner_config: '- (Optional) Hetzner config for the Node Template (list maxitems:1)'
            hostsystem: '- (Optional) vSphere compute resource where the docker VM will be instantiated. This can be omitted if using a cluster with DRS (string)'
            http_endpoint: '- (Optional) Enables or disables the HTTP metadata endpoint on your instances (string)'
            http_tokens: '- (Optional) The state of token usage for your instance metadata requests (string)'
            iam_instance_profile: '- (Optional) AWS IAM Instance Profile (string)'
            id: '- (Computed) The ID of the resource (string)'
            image: '- (Optional) Azure virtual machine OS image. Default canonical:ubuntu-24_04-lts:server-gen1:latest (string)'
            image_id: '- (Required*) Image ID to use as the VM OS. Conflicts with image_name (string)'
            image_name: '- (Deprecated) Use disk_info instead'
            image_owner: '- (Optional) Owner of the image to use as the VM OS (string)'
            insecure: '- (Optional) Disable TLS credential checking. Default false (bool)'
            insecure_transport: '- (Optional) Disable SSL when sending requests (bool)'
            instance_type: '- (Optional) AWS instance type. Default t2.micro (string)'
            ip_version: '- (Optional) OpenStack version of IP address assigned for the machine Default 4 (string)'
            ipv6: '- (Optional) Enable ipv6 for droplet. Default false (bool)'
            key: '- (Required) Taint key (string)'
            keypair_name: '- (Optional) OpenStack keypair to use to SSH to the instance (string)'
            kms_key: '- (Optional) Custom KMS key ID using the AWS Managed CMK (string)'
            label: '- (Optional) Linode Instance Label. (string)'
            labels: '- (Optional/Computed) Labels for Node Template object (map)'
            linode_config: '- (Optional) Linode config for the Node Template (list maxitems:1)'
            location: '- (Optional) Azure region to create the virtual machine. Default westus (string)'
            managed_disks: '- (Optional) Configures VM and availability set for managed disks. For Rancher v2.3.x and above. Default false (bool)'
            memory: '- (Optional) Size of the memory for the VM in MB (string)'
            memory_size: '- (Optional) Memory size (in GiB), Default 4 (string)'
            monitoring: '- (Optional) Set this flag to enable CloudWatch monitoring. Deafult false (bool)'
            name: '- (Required) The name of the Node Template (string)'
            net_id: '- (Required*) OpenStack network id the machine will be connected on. Conflicts with net_name (string)'
            net_name: '- (Required*) OpenStack network name the machine will be connected on. Conflicts with net_id (string)'
            network: '- (Optional) vSphere network where the docker VM will be attached (list)'
            network_data: '- (Optional) NetworkData content of cloud-init, base64 is supported (string)'
            network_id: '- (Optional) Opennebula network ID to connect the machine to. Conflicts with network_name (string)'
            network_info: '- (Required) A JSON string specifying info for the networks e.g. {\"interfaces\":[{\"networkName\":\"harvester-public/vlan1\"},{\"networkName\":\"harvester-public/vlan2\"}]} (string)'
            network_model: '- (Deprecated) Use network_info instead'
            network_name: '- (Deprecated) Use network_info instead'
            network_owner: '- (Optional) Opennebula user ID of the Network to connect the machine to (string)'
            networks: '- (Optional) Comma-separated list of network IDs or names which should be attached to the server private network interface (string)'
            no_public_ip: '- (Optional) Do not create a public IP address for the machine. Default false (bool)'
            node_taints: '- (Optional) Node taints. For Rancher v2.3.3 and above (List)'
            nova_network: '- (Optional) Use the nova networking services instead of neutron (string)'
            nsg: '- (Optional) Azure Network Security Group to assign this node to (accepts either a name or resource ID, default is to create a new NSG for each machine). Default docker-machine-nsg (string)'
            open_port: '- (Optional) Make the specified port number accessible from the Internet. (list)'
            opennebula_config: '- (Optional) Opennebula config for the Node Template (list maxitems:1)'
            openstack_config: '- (Optional) Openstack config for the Node Template (list maxitems:1)'
            outscale_config: '- (Optional) Outscale config for the Node Template (list maxitems:1)'
            password: '- (Required/Sensitive) Set the password for the XML-RPC API authentication (string)'
            plan: '- (Optional) Azure marketplace purchase plan for Azure Virtual Machine. Format is <publisher>:<product>:<plan>. For Rancher v2.6.3 and above. (string)'
            pool: '- (Optional) vSphere resource pool for docker VM (string)'
            private_address_only: '- (Optional) Only use a private IP address. Default false (bool)'
            private_ip_address: '- (Optional) Specify a static private IP address for the machine. (string)'
            private_key_file: '- (Optional/Sensitive) Private key content to use for SSH (string)'
            private_networking: '- (Optional) Enable private networking for droplet. Default false (bool)'
            region: '- (Required) AWS region. (string)'
            request_spot_instance: '- (Optional) Set this flag to request spot instance. Default false (bool)'
            resource_group: '- (Optional) Azure Resource Group name (will be created if missing). Default docker-machine (string)'
            retries: '- (Optional) Set retry count for recoverable failures (use -1 to disable). Default 5 (string)'
            root_disk_iops: '- (Optional) Iops for io1 Root Disk. From 1 to 13000.'
            root_disk_size: '- (Optional) Size of the Root Disk (in GB). From 1 to 14901.'
            root_disk_type: '- (Optional) Type of the Root Disk. Possible values are :''standard'', ''gp2'' or ''io1''.'
            root_pass: '- (Optional/Sensitive) Root Password (string)'
            root_size: '- (Optional) AWS root disk size (in GB). Default 16 (string)'
            sec_groups: '- (Optional) OpenStack comma separated security groups for the machine (string)'
            secret_key: '- (Optional/Sensitive) AWS secret key. Required on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            security_group: '- (Required) AWS VPC security group. (list)'
            security_group_ids: '- (Optional) Ids of user defined Security Groups to add to the machine. (list)'
            security_group_readonly: '- (Optional) Skip adding default rules to security groups (bool)'
            server_labels: '- (Optional) Map of the labels which will be assigned to the server. This argument is only available on Hetzner Docker Node Driver:v3.6.0 and above (map)'
            server_location: '- (Optional) Hetzner Cloud datacenter. Default nbg1 (string)'
            server_type: '- (Optional) Hetzner Cloud server type. Default cx11 (string)'
            session_token: '- (Optional/Sensitive) AWS Session Token (string)'
            size: '- (Optional) Size for Azure Virtual Machine. Default Standard_D2_v2 (string)'
            source_omi: '- (Optional) Outscale Machine Image to use as bootstrap for the VM. Default ami-2cf1fa3e (string)'
            spot_price: '- (Optional) AWS spot instance bid price (in dollar). Default 0.50 (string)'
            ssh_key_fingerprint: '- (Optional/Sensitive) SSH key fingerprint (string)'
            ssh_key_path: '- (Optional) SSH private key path (string)'
            ssh_password: '- (Optional/Sensitive) SSH password (string)'
            ssh_port: '- (Optional) SSH port. Default 22 (string)'
            ssh_user: '- (Optional) Set the name of the ssh user (string)'
            ssh_user_group: '- (Optional) If using a non-B2D image the uploaded keys will need chown''ed. Default staff. From Rancher v2.3.3 (string)'
            stackscript: '- (Optional) Specifies the Linode StackScript to use to create the instance. (string)'
            stackscript_data: '- (Optional) A JSON string specifying data for the selected StackScript. (string)'
            static_public_ip: '- (Optional) Assign a static public IP address to the machine. Default false (bool)'
            storage_type: '- (Optional) Type of Storage Account to host the OS Disk for the machine. Default Standard_LRS (string)'
            subnet: '- (Optional) Azure Subnet Name to be used within the Virtual Network. Default docker-machine (string)'
            subnet_id: '- (Required) AWS VPC subnet id (string)'
            subnet_prefix: '- (Optional) Private CIDR block to be used for the new subnet, should comply RFC 1918. Default 192.168.0.0/16 (string)'
            subscription_id: '- (Optional/Sensitive) Azure Subscription ID. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            swap_size: '- (Optional) Linode Instance Swap Size (MB). Default 512 (string)'
            tags: '- (Optional) AWS Tags (e.g. key1,value1,key2,value2) (string)'
            template_id: '- (Required*) Opennebula template ID to use. Conflicts with template_name (string)'
            template_name: '- (Required*) Name of the Opennbula template to use. Conflicts with template_id (string)'
            tenant_id: '- (Required**) OpenStack tenant id. Conflicts with tenant_name (string)'
            tenant_name: '- (Required**) OpenStack tenant name. Conflicts with tenant_id (string)'
            time_added: '- (Optional) Taint time added (string)'
            token: '- (Optional/Sensitive) Linode API token. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            ua_prefix: '- (Optional) Prefix the User-Agent in Linode API calls with some ''product/version'' (string)'
            update: '- (Default 10 minutes) Used for node template modifications.'
            update_domain_count: '- (Optional) Update domain count to use for availability set. Default 5 (string)'
            use_ebs_optimized_instance: '- (Optional) Create an EBS optimized instance. Default false (bool)'
            use_internal_ip_address: '- (Optional) Engine storage driver for the node template (bool)'
            use_private_address: '- (Optional) Force the usage of private IP address. Default false (bool)'
            use_private_ip: '- (Optional) Use private IP address of the machine to connect. Default false (bool)'
            use_private_network: '- (Optional) Use private network. Default false (bool)'
            user: '- (Required) Set the user for the XML-RPC API authentication (string)'
            user_data: '- (Optional) UserData content of cloud-init, base64 is supported. If the image does not contain the qemu-guest-agent package, you must install and start qemu-guest-agent using userdata (string)'
            user_data_file: '- (Optional) File containing an openstack userdata script (string)'
            userdata: '- (Optional) Path to file with cloud-init user data (string)'
            username: '- (Required**) OpenStack username (string)'
            value: '- (Required) Taint value (string)'
            vapp_ip_allocation_policy: '- (Optional) vSphere vApp IP allocation policy. Supported values are: dhcp, fixed, transient and fixedAllocated (string)'
            vapp_ip_protocol: '- (Optional) vSphere vApp IP protocol for this deployment. Supported values are: IPv4 and IPv6 (string)'
            vapp_property: '- (Optional) vSphere vApp properties (list)'
            vapp_transport: '- (Optional) vSphere OVF environment transports to use for properties. Supported values are: iso and com.vmware.guestInfo (string)'
            vcenter: '- (Optional/Sensitive) vSphere IP/hostname for vCenter. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            vcenter_port: '- (Optional/Sensitive) vSphere Port for vCenter. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x. Default 443 (string)'
            vcpu: '- (Optional) VCPUs for the VM (string)'
            vm_affinity: '- (Optional) Virtual machine affinity, only base64 format is supported. For Rancher v2.6.7 and above (string)'
            vm_namespace: '- (Required) Virtual machine namespace e.g. default (string)'
            vnet: '- (Optional) Azure Virtual Network name to connect the virtual machine (in [resourcegroup:]name format). Default docker-machine-vnet (string)'
            volume_device_path: '- (Optional) OpenStack volume device path (attaching). Applicable only when boot_from_volume is true. Omit for auto /dev/vdb. (string)'
            volume_id: '- (Optional) OpenStack volume id of existing volume. Applicable only when boot_from_volume is true (string)'
            volume_name: '- (Optional) OpenStack volume name of existing volume. Applicable only when boot_from_volume is true (string)'
            volume_size: '- (Optional) OpenStack volume size (GiB). Required when boot_from_volume is true (string)'
            volume_type: '- (Optional) Amazon EBS volume type. Default gp2 (string)'
            volumes: '- (Optional) Comma-separated list of volume IDs or names which should be attached to the server (string)'
            vpc_id: '- (Required) AWS VPC id. (string)'
            vsphere_config: '- (Optional) vSphere config for the Node Template (list maxitems:1)'
            xml_rpc_url: '- (Required) Set the url for the Opennebula XML-RPC API (string)'
            zone: '- (Required) AWS zone for instance (i.e. a,b,c,d,e) (string)'
        importStatements: []
    rancher2_project:
        subCategory: ""
        name: rancher2_project
        title: rancher2_project Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "CLUSTER_ID",
                  "container_resource_limit": [
                    {
                      "limits_cpu": "20m",
                      "limits_memory": "20Mi",
                      "requests_cpu": "1m",
                      "requests_memory": "1Mi"
                    }
                  ],
                  "name": "foo",
                  "resource_quota": [
                    {
                      "namespace_default_limit": [
                        {
                          "limits_cpu": "2000m",
                          "limits_memory": "500Mi",
                          "requests_storage": "1Gi"
                        }
                      ],
                      "project_limit": [
                        {
                          "limits_cpu": "2000m",
                          "limits_memory": "2000Mi",
                          "requests_storage": "2Gi"
                        }
                      ]
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "cluster_id": "CLUSTER_ID",
                  "container_resource_limit": [
                    {
                      "limits_cpu": "20m",
                      "limits_memory": "20Mi",
                      "requests_cpu": "1m",
                      "requests_memory": "1Mi"
                    }
                  ],
                  "name": "foo",
                  "resource_quota": [
                    {
                      "namespace_default_limit": [
                        {
                          "limits_cpu": "2000m",
                          "limits_memory": "500Mi",
                          "requests_storage": "1Gi"
                        }
                      ],
                      "project_limit": [
                        {
                          "limits_cpu": "2000m",
                          "limits_memory": "2000Mi",
                          "requests_storage": "2Gi"
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for Node Pool object (map)'
            cluster_id: '- (Required) The cluster id where create project (string)'
            config_maps: '- (Optional) Limit for config maps in project (string)'
            container_resource_limit: '- (Optional) Default containers resource limits on project (List maxitem:1)'
            create: '- (Default 10 minutes) Used for creating projects.'
            delete: '- (Default 10 minutes) Used for deleting projects.'
            description: '- (Optional) A project description (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for Node Pool object (map)'
            limits_cpu: '- (Optional) CPU limit for containers (string)'
            limits_memory: '- (Optional) Memory limit for containers (string)'
            name: '- (Required) The name of the project (string)'
            namespace_default_limit: '- (Required) Default resource quota limit for  namespaces in project (list maxitems:1)'
            persistent_volume_claims: '- (Optional) Limit for persistent volume claims in project (string)'
            pods: '- (Optional) Limit for pods in project (string)'
            project_limit: '- (Required) Resource quota limit for project (list maxitems:1)'
            replication_controllers: '- (Optional) Limit for replication controllers in project (string)'
            requests_cpu: '- (Optional) CPU reservation for containers (string)'
            requests_memory: '- (Optional) Memory reservation for containers (string)'
            requests_storage: '- (Optional) Limit for requests storage in project (string)'
            resource_quota: '- (Optional) Resource quota for project. Rancher v2.1.x or higher (list maxitems:1)'
            secrets: '- (Optional) Limit for secrets in project (string)'
            services_load_balancers: '- (Optional) Limit for services load balancers in project (string)'
            services_node_ports: '- (Optional) Limit for services node ports in project (string)'
            update: '- (Default 10 minutes) Used for project modifications.'
            wait_for_cluster: '- (Optional) Wait for cluster becomes active. Default false (bool)'
        importStatements: []
    rancher2_project_role_template_binding:
        subCategory: ""
        name: rancher2_project_role_template_binding
        title: rancher2_project_role_template_binding Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "name": "foo",
                  "project_id": "project_id",
                  "role_template_id": "role_template_id",
                  "user_id": "user_id"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            create: '- (Default 10 minutes) Used for creating project role template bindings.'
            delete: '- (Default 10 minutes) Used for deleting project role template bindings.'
            group_id: '- (Optional/Computed/ForceNew) The group ID to assign project role template binding (string)'
            group_principal_id: '- (Optional/Computed/ForceNew) The group_principal ID to assign project role template binding (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Required/ForceNew) The name of the project role template binding (string)'
            project_id: '- (Required/ForceNew) The project id where bind project role template, in format cluster_id:project_id, e.g. c-abc12:p-def34 (string)'
            role_template_id: '- (Required/ForceNew) The role template id from create project role template binding (string)'
            update: '- (Default 10 minutes) Used for project role template binding modifications.'
            user_id: '- (Optional/Computed/ForceNew) The user ID to assign project role template binding (string)'
            user_principal_id: '- (Optional/Computed/ForceNew) The user_principal ID to assign project role template binding (string)'
        importStatements: []
    rancher2_registry:
        subCategory: ""
        name: rancher2_registry
        title: rancher2_registry Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "Terraform registry foo",
                  "name": "foo",
                  "project_id": "project_id",
                  "registries": [
                    {
                      "address": "test.io",
                      "password": "pass",
                      "username": "user"
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "description": "Terraform registry foo",
                  "name": "foo",
                  "namespace_id": "namespace_id",
                  "project_id": "project_id",
                  "registries": [
                    {
                      "address": "test.io",
                      "password": "pass",
                      "username": "user2"
                    }
                  ]
                }
        argumentDocs:
            address: '- (Required) Address for registry.'
            annotations: '- (Optional/Computed) Annotations for Registry object (map)'
            create: '- (Default 10 minutes) Used for creating registries.'
            delete: '- (Default 10 minutes) Used for deleting registries.'
            description: '- (Optional) A registry description (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for Registry object (map)'
            name: '- (Required/ForceNew) The name of the registry (string)'
            namespace_id: in the project_id.
            password: '- (Optional) Password for the registry (string)'
            project_id: .
            registries: '- (Required) Registries data for registry (list)'
            update: '- (Default 10 minutes) Used for registry modifications.'
            username: '- (Optional) Username for the registry (string)'
        importStatements: []
    rancher2_role_template:
        subCategory: ""
        name: rancher2_role_template
        title: rancher2_role_template Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "context": "cluster",
                  "default_role": true,
                  "description": "Terraform role template acceptance test",
                  "name": "foo",
                  "rules": [
                    {
                      "api_groups": [
                        "*"
                      ],
                      "resources": [
                        "secrets"
                      ],
                      "verbs": [
                        "create"
                      ]
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "context": "project",
                  "default_role": true,
                  "description": "Terraform role template acceptance test",
                  "name": "foo",
                  "rules": [
                    {
                      "api_groups": [
                        "*"
                      ],
                      "resources": [
                        "secrets"
                      ],
                      "verbs": [
                        "create"
                      ]
                    }
                  ]
                }
        argumentDocs:
            administrative: '- (Optional) Administrative role template. Default false (bool)'
            annotations: '- (Optional/Computed) Annotations for role template object (map)'
            api_groups: '- (Optional) Policy rule api groups (list)'
            builtin: '- (Computed) Builtin role template (string)'
            context: '- (Optional) Role template context. cluster and project values are supported. Default: cluster (string)'
            create: '- (Default 10 minutes) Used for creating role templates.'
            default_role: '- (Optional) Default role template for new created cluster or project. Default false (bool)'
            delete: '- (Default 10 minutes) Used for deleting role templates.'
            description: '- (Optional/Computed) Role template description (string)'
            external: '- (Optional) External role template. Default false (bool)'
            external_rules: '- (Optional/Computed) External rules used for authorization. This field is required when external=true and no underlying ClusterRole exists. (list)'
            hidden: '- (Optional) Hidden role template. Default false (bool)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for role template object (map)'
            locked: '- (Optional) Locked role template. Default false (bool)'
            name: '- (Required) Role template name (string)'
            non_resource_urls: '- (Optional) Policy rule non resource urls (list)'
            resource_names: '- (Optional) Policy rule resource names (list)'
            resources: '- (Optional) Policy rule resources (list)'
            role_template_ids: '- (Optional/Computed) Inherit role template IDs (list)'
            rules: '- (Optional/Computed) Role template policy rules (list)'
            update: '- (Default 10 minutes) Used for role template modifications.'
            verbs: '- (Optional) Policy rule verbs. bind, create, delete, deletecollection, escalate, get, impersonate, list, manage-namespaces, patch, update, updatepsa, use, view, watch, own and * values are supported (list)'
        importStatements: []
    rancher2_secret:
        subCategory: ""
        name: rancher2_secret
        title: rancher2_secret Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "data": {
                    "address": "${base64encode(\"test.io\")}",
                    "password": "${base64encode(\"pass\")}",
                    "username": "${base64encode(\"user2\")}"
                  },
                  "description": "Terraform secret foo",
                  "name": "foo",
                  "project_id": "project_id"
                }
            - name: foo
              manifest: |-
                {
                  "data": {
                    "address": "${base64encode(\"test.io\")}",
                    "password": "${base64encode(\"pass\")}",
                    "username": "${base64encode(\"user2\")}"
                  },
                  "description": "Terraform secret foo",
                  "name": "foo",
                  "namespace_id": "namespace_id",
                  "project_id": "project_id"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for secret object (map)'
            create: '- (Default 10 minutes) Used for creating registries.'
            data: '- (Required/Sensitive) Secret key/value data. Base64 encoding required for values (map)'
            delete: '- (Default 10 minutes) Used for deleting registries.'
            description: '- (Optional) A secret description (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for secret object (map)'
            name: '- (Optional/ForceNew) The name of the secret (string)'
            namespace_id: in the project_id
            project_id: '- (Required/ForceNew) The project id where to assign the secret (string)'
            update: '- (Default 10 minutes) Used for secret modifications.'
        importStatements: []
    rancher2_secret_v2:
        subCategory: ""
        name: rancher2_secret_v2
        title: rancher2_secret_v2 Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "CLUSTER_ID",
                  "data": {
                    "mydata1": "data1",
                    "mydata2": "data2",
                    "mydata3": "data3"
                  },
                  "name": "foo"
                }
            - name: foo
              manifest: |-
                {
                  "cluster_id": "CLUSTER_ID",
                  "data": {
                    "password": "mysecret",
                    "username": "myuser"
                  },
                  "name": "foo",
                  "namespace": "mynamespace",
                  "type": "kubernetes.io/basic-auth"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for the secret v2 (map)'
            cluster_id: '- (Required/ForceNew) The cluster id of the secret V2 (string)'
            create: '- (Default 10 minutes) Used for creating v2 secrets.'
            data: '- (Required/Sensitive) The data of the secret v2 (map)'
            delete: '- (Default 10 minutes) Used for deleting v2 secrets.'
            id: '- (Computed) The ID of the resource (string)'
            immutable: '- (Optional) If set to true, any secret update will remove and recreate the secret. This is a beta field enabled by k8s ImmutableEphemeralVolumes feature gate. Default: false (bool)'
            labels: '- (Optional/Computed) Labels for the secret v2 (map)'
            name: '- (Required) The name of the secret v2 (string)'
            namespace: '- (Optional/ForceNew) The namespaces of the secret v2. Default: default (string)'
            resource_version: '- (Computed) The k8s resource version (string)'
            type: '- (Optional) The type of the k8s secret, used to facilitate programmatic handling of secret data, More info about k8s secret types and expected format.  Default: Opaque (string)'
            update: '- (Default 10 minutes) Used for v2 secret modifications.'
        importStatements: []
    rancher2_setting:
        subCategory: ""
        name: rancher2_setting
        title: rancher2_setting Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "name": "foo",
                  "value": "VALUE"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for setting object (map)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for setting object (map)'
            name: '- (Required) The name of the setting (string)'
            value: '- (Required) The value of the setting (string)'
        importStatements: []
    rancher2_storage_class_v2:
        subCategory: ""
        name: rancher2_storage_class_v2
        title: rancher2_storage_class_v2 Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "CLUSTER_ID",
                  "name": "foo",
                  "parameters": {
                    "gidAllocate": "true",
                    "gidMax": "50000",
                    "gidMin": "40000"
                  }
                }
        argumentDocs:
            allow_volume_expansion: '- (Optional/Computed) Is the provisioner of the storageClass v2 allowing volume expansion? (bool)'
            annotations: '- (Optional/Computed) Annotations for the storageClass v2 (map)'
            cluster_id: '- (Required/ForceNew) The cluster id of the storageClass V2 (string)'
            create: '- (Default 10 minutes) Used for creating v2 storageClasss.'
            delete: '- (Default 10 minutes) Used for deleting v2 storageClasss.'
            id: '- (Computed) The ID of the resource (string)'
            k8s_provisioner: '- (Required/ForceNew) The provisioner of the storageClass v2 (string)'
            labels: '- (Optional/Computed) Labels for the storageClass v2 (map)'
            mount_options: '- (Optional/Computed) The mount options for storageClass v2 (list)'
            name: '- (Required/ForceNew) The name of the storageClass v2 (string)'
            parameters: '- (Optional) The parameters for storageClass v2 (string)'
            reclaim_policy: '- (Optional/ForceNew) The reclaim policy for storageClass v2. Delete, Recycle and Retain values are allowed. Default: Delete (string)'
            resource_version: '- (Computed) The k8s resource version (string)'
            update: '- (Default 10 minutes) Used for v2 storageClass modifications.'
            volume_binding_mode: '- (Optional/ForceNew) The volume binding mode for storageClass v2. Immediate and WaitForFirstConsumer values are allowed. Default: Immediate (string)'
        importStatements: []
    rancher2_token:
        subCategory: ""
        name: rancher2_token
        title: rancher2_token Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "foo token",
                  "ttl": 1200
                }
            - name: foo
              manifest: |-
                {
                  "cluster_id": "cluster-id",
                  "description": "foo token",
                  "ttl": 1200
                }
        argumentDocs:
            access_key: '- (Computed) Token access key part (string)'
            annotations: '- (Computed) Annotations of the token (map)'
            cluster_id: should be provided).
            create: '- (Default 5 minutes) Used for creating tokens.'
            delete: '- (Default 5 minutes) Used for deleting tokens.'
            description: '- (Optional/ForceNew) Token description (string)'
            enabled: '- (Computed) Token is enabled (bool)'
            expired: '- (Computed) Token is expired (bool)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Computed) Labels of the token (map)'
            name: '- (Computed) Token name (string)'
            renew: '- (Optional/ForceNew) Renew token if expired or disabled. If true, a terraform diff would be generated to renew the token if it''s disabled or expired. If false, the token will not be renewed. Default true (bool)'
            secret_key: '- (Computed/Sensitive) Token secret key part (string)'
            token: '- (Computed/Sensitive) Token value (string)'
            ttl: '- (Optional/ForceNew) Token time to live in seconds. Default 0 (int)'
            update: '- (Default 5 minutes) Used for token modifications.'
            user_id: '- (Computed) Token user ID (string)'
        importStatements: []
    rancher2_user:
        subCategory: ""
        name: rancher2_user
        title: rancher2_user Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "enabled": true,
                  "must_change_password": true,
                  "name": "Foo user",
                  "password": "changeme",
                  "username": "foo"
                }
              dependencies:
                rancher2_global_role_binding.foo: |-
                    {
                      "global_role_id": "user-base",
                      "name": "foo",
                      "user_id": "${rancher2_user.foo.id}"
                    }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for global role binding (map)'
            create: '- (Default 5 minutes) Used for creating users.'
            delete: '- (Default 5 minutes) Used for deleting users.'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for global role binding (map)'
            must_change_password: '- (Optional)The user must change password at first login (bool)'
            name: '- (Optional) The user full name (string)'
            password: '- (Required/ForceNew) The user password (string)'
            principal_ids: '- (Computed) The user principal IDs (list)'
            update: '- (Default 5 minutes) Used for user modifications.'
            username: '- (Required/ForceNew) The user username (string)'
        importStatements: []
